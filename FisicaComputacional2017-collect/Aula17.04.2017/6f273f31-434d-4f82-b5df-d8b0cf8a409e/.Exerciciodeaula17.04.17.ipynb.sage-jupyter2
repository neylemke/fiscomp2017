{"type":"settings","kernel":"python2","backend_state":"ready","metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.13"}},"kernel_state":"idle"}
{"type":"cell","id":"08b90e","pos":17,"input":"# Pacote matplotlib \n\n### É uma biblioteca do Python para criação de gráficos em 2D, bastante utilizada para visualização de dados e que apresenta uma série de possibilidades gráficas, como gráficos de barra, linha, pizza, histogramas, entre muitos outros, com qualidade para impressão, além de gráficos dinâmicos e interativos. O modo pylab emula gráficos do Matlab.","cell_type":"markdown"}
{"type":"cell","id":"a98aaa","pos":19,"input":"# Pacote pandas*\n\n\n### Pandas é uma biblioteca de código aberto, licenciada pela BSD, que fornece estruturas de dados de alto desempenho fáceis de usar e ferramentas de análise de dados para a linguagem de programação Python.","cell_type":"markdown"}
{"type":"cell","id":"ad4fdf","pos":14,"input":"#exemplo math\nimport math \nmath.sqrt(25)","output":{"0":{"data":{"text/plain":"5.0"},"output_type":"execute_result","exec_count":26}},"cell_type":"code","exec_count":26}
{"type":"cell","id":"eb81b5","pos":5,"input":"# Exercicio 3","cell_type":"markdown"}
{"type":"cell","id":"97660f","pos":21,"input":"# String \n\n### Um string é simplesmente um grupo de caracteres entre aspas. São construídos de strings menores, cada um contendo um caractere. Strings podem ser definidos como coleções de sequências de caracteres. Tipos que são compostos de pedaços menores são chamados tipos de dados compostos. Dependendo do que estejamos fazendo, pode ser que precisemos tratar um tipo de dado composto como uma coisa única, ou pode ser que queiramos acessar suas partes. Esta ambiguidade é útil.\n#### A tabela a seguir apresenta um resumo de alguns outros métodos úteis de string. Existem alguns exemplos em activecode que se seguem, de modo que você pode experimentá-los.\n\n##### Método\tParâmetros\tDescrição\n##### upper\tnenhum\tRetorna um string todo em maiúsculas\n##### lower\tnenhum\tRetorna um string todo em minúsculas\n##### capitalize\tnenhum\tRetorna um string com o primeiro caractere em maiúscula, e o resto em minúsculas\n##### strip\tnenhum\tRetorna um string removendo caracteres em branco do início e do fim\n##### lstrip\tnenhum\tRetorna um string removendo caracteres em brando do início\n##### rstrip\tnenhum\tRetorna um string removendo caracteres em brando do fim\n##### count\titem\tRetorna o número de ocorrências de item\n##### replace\told, new\tSubstitui todas as ocorrências do substring old por new\n##### center\tlargura\tRetorna um string centrado em um campo de tamanho largura\n##### ljust\tlargura\tRetorna um string justificado à esquerda em um campo de tamanho largura\n##### rjust\tlargura\tRetorna um string justificado à direita em um campo de tamanho largura\n##### find\titem\tRetorna o índice mais à esquerda onde o substring item é encontrado\n##### rfind\titem\tRetorna o índice mais à direita onde o substring item é encontrado\n##### index\titem\tComo find, mas causa um erro em tempo de execução caso item não seja encontrado\n##### rindex\titem\tComo rfind, mas causa um erro em tempo de execução caso item não seja encontrado\n\n","cell_type":"markdown"}
{"type":"cell","id":"08992d","pos":20,"input":"#exemplo Pandas\n\nimport pandas as pd\n\ndf_data = {'pais': ['Brasil', 'Argentina','Argentina', 'Brasil', 'Chile','Chile'],\n           'ano': [2005, 2006, 2005, 2006, 2007, 2008],\n           'populacao': [170.1, 30.5, 32.2, 172.6, 40.8, 42.0]}\ndf = pd.DataFrame(df_data)\nprint(df)","output":{"0":{"name":"stdout","output_type":"stream","text":"    ano       pais  populacao\n0  2005     Brasil      170.1\n1  2006  Argentina       30.5\n2  2005  Argentina       32.2\n3  2006     Brasil      172.6\n4  2007      Chile       40.8\n5  2008      Chile       42.0\n"}},"cell_type":"code","exec_count":1}
{"type":"cell","id":"fdfd7f","pos":12,"input":"# Exercício 6\n\n### Pesquise e monte um notebook em modo Markdown qual a função e exemplos da utilização dos seguintes pacotes: *math, numpy, matplotlib, pandas* e string**","cell_type":"markdown","collapsed":true}
{"type":"cell","id":"65d068","pos":22,"input":"#exemplo string \n\nss = \"Hello, World\"\nprint(ss.upper())\n\ntt = ss.lower()\nprint(tt)\n\n","output":{"0":{"name":"stdout","output_type":"stream","text":"HELLO, WORLD\nhello, world\n"}},"cell_type":"code","exec_count":2}
{"type":"cell","id":"e83a36","pos":10,"input":"# Exercício 5 \n\n####  faça um algoritmo que solicite ao usuário números e os armazene em um vetor de 30 posições. Crie uma função que recebe o vetor preenchido e substitua todas as ocorrência de valores positivos por 1 e todos os valores negativos por 0","cell_type":"markdown"}
{"type":"cell","id":"8b1ce1","pos":4,"input":"A= input(\"Insira A: \")\nB= input(\"Insira B: \") \nC= input(\"Insira C: \")\nfloat(A), float(B), float(C)\n\nif (A < B + C) and (B < A + C) and (C < A + B):\n    if (A == B) and (B == C):\n        print \"Triângulo equilátero\"\n    elif (A == B) or (A == C) or (B == C):\n        print \"Triângulo isósceles\"\n    else:  \n        print \"Triângulo escaleno\"\nelse: \n    print \"Não é triângulo!\"","output":{"0":{"name":"stdout","output_type":"stream","text":"Insira A: 7\nInsira B: 1\nInsira C: 1\nNão é triângulo!\n"}},"cell_type":"code","exec_count":17}
{"type":"cell","id":"3adb5e","pos":8,"input":"# Exercício 4\n\n### Implemente uma função que conte o número de algarismos pares em um número natural ","cell_type":"markdown"}
{"type":"cell","id":"918174","pos":6,"input":"#Considerando que as medidas são dadas em centímetros\nA= input(\"Insira A: \")\nB= input(\"Insira B: \") \nC= input(\"Insira C: \")\nfloat(A), float(B), float(C)\n\ndef volume(A,B,C):\n    return A*B*C\ndef area_lateral(A,B,C):\n        return 2*(A*C + B*C)\n\nprint \"Volume do paralelepipedo: \", volume(A,B,C) , \"cm^3\"\nprint \"Área lateral do paralelepipedo: \", area_lateral(A,B,C), \"cm^2\"","output":{"0":{"name":"stdout","output_type":"stream","text":"Insira A: 2\nInsira B: 2\nInsira C: 5\nVolume do paralelepipedo:  20 cm^3\nÁrea lateral do paralelepipedo:  40 cm^2\n"}},"cell_type":"code","exec_count":11}
{"type":"cell","id":"5c4580","pos":9,"input":"nat= str(input(\"Insira um número natural qualquer:\"))\n\ndef algarism(nat):\n    return len([alg for alg in nat if int(alg)%2==0])\nprint \"O número de algarismos pares no dado número é: \", algarism(nat)\n","output":{"0":{"name":"stdout","output_type":"stream","text":"Insira um número natural qualquer:1234567890\nO número de algarismos pares no dado número é:  5\n"}},"cell_type":"code","exec_count":21}
{"type":"cell","id":"57ba80","pos":11,"input":"x=[int(input(\"Insira os valores {}: \".format(i))) for i in range (10)]\nxx=[]\nfor k in range(len(x)):\n    if x[k]>0:\n        xx.append(1)\n    else:\n        xx.append(0)\nprint xx","output":{"0":{"name":"stdout","output_type":"stream","text":"Insira os valores 0: 2\nInsira os valores 1: 4\nInsira os valores 2: 6\nInsira os valores 3: 8\nInsira os valores 4: -3480948\nInsira os valores 5: -37408957\nInsira os valores 6: 289483\nInsira os valores 7: 9\nInsira os valores 8: 2\nInsira os valores 9: -248\n[1, 1, 1, 1, 0, 0, 1, 1, 1, 0]\n"}},"cell_type":"code","exec_count":25}
{"type":"file","last_load":1499102834048}
{"type":"cell","id":"850180","pos":2,"input":"A= input(\"Insira A: \")\nB= input(\"Insira B: \") \nC= input(\"Insira C: \")\nfloat(A), float(B), float(C)\nfrom math import sqrt\n   \ndelta= B**2-4*A*C\nwhile delta<0:\n    print (\"Delta menor que zero, raízes complexas. Por favor, insira outros valores de A, B e C: \")\n    A= input(\"Insira A: \")\n    B= input(\"Insira B: \") \n    C= input(\"Insira C: \")\n    float(A), float(B), float(C)\n    delta= B**2-4*A*C\nx1= (-B+(delta)**(1/2))/(2*A)\nx2= (-B-(delta)**(1/2))/(2*A)\nprint \"x1:\",x1\nprint \"x2:\",x2  ","output":{"0":{"name":"stdout","output_type":"stream","text":"Insira A: 2\nInsira B: 2\nInsira C: 2\nDelta menor que zero, raízes complexas. Por favor, insira outros valores de A, B e C: \nInsira A: 4\nInsira B: 4\nInsira C: 1\nx1: -1\nx2: -1\n"}},"cell_type":"code","exec_count":3}
{"type":"cell","id":"797205","pos":13,"input":"## Pacote \"Math\"\n\n### Fornece funções matemáticas, operações e operadores matemáticos, como por exemplo: \n\n#### math.sqrt(numero): Retorna a raiz quadrada do número.\n#### math.cos(numero): Retorna o cosseno do número (em radiano).\n#### math.sin(numero): Retorna o seno do número (em radiano).\n#### etc.","cell_type":"markdown","collapsed":true}
{"type":"cell","id":"9576d8","pos":7,"input":"f(3,3,10)","output":{"0":{"data":{"text/plain":"90"},"output_type":"execute_result","exec_count":13}},"cell_type":"code","exec_count":13}
{"type":"cell","id":"6a68c7","pos":16,"input":"#exemplo pacote numpy\nimport numpy as np\nb = np.array([3.4, 5., 33., 8.])\nprint \"Valor mínimo: \", np.amin(b)\nprint \"Valor máximo: \", np.amax(b)\n","output":{"0":{"name":"stdout","output_type":"stream","text":"Valor mínimo:  3.4\nValor máximo:  33.0\n"}},"cell_type":"code","exec_count":31}
{"type":"cell","id":"4a5267","pos":1,"input":"# Exercicio 1\n### Calcule as raízes da equação do 2º grau ( $Ax^2+Bx+C=0$) sendo os valores de A, B e C fornecidos pelo usuário, levando em consideração a existência de raízes reais.","cell_type":"markdown"}
{"type":"cell","id":"05fb63","pos":0,"input":"# 17.04.2017","cell_type":"markdown"}
{"type":"cell","id":"00498a","pos":15,"input":"# Pacote numpy\n\n### O NumPy é o pacote básico da linguagem Python que permite trabalhar com arranjos, vetores e matrizes de N dimensões, de uma forma comparável e com uma sintaxe semelhante ao software proprietário Matlab. Algumas funções do numpy são:\n\n#### np.arrange(numero): Função bem parecida com 'range', porém retona um array (vetor) ao invés de uma lista.\n#### np.sum(): soma todos os elementos do array.\n#### np.amin(array): retorna o valor mínimo do array.\n#### np.amax(array): retorna o valor máximo do array.\n#### b.argmin(): retorna o índice de menor valor do array \"b\".\n#### b.armax(): retorna o índice de maior valor do array \"b\".\n#### etc.","cell_type":"markdown"}
{"type":"cell","id":"ba92f2","pos":3,"input":"# Exercicio 2","cell_type":"markdown","collapsed":true}
{"type":"cell","id":"682a80","pos":23,"input":"","cell_type":"code","collapsed":true}
{"type":"cell","id":"b54c13","pos":18,"input":"#exemplo matplotlib\nimport matplotlib.pyplot as mpl\neixo_x = [1.0, 2.0, 3.0, 4.0, 5.0, 6.0]\neixo_y = [10, 95, 28, 50, 113, 78]\nmpl.plot(eixo_x, eixo_y)\nmpl.show()","output":{"0":{"data":{"image/png":"e480f587c9f7542473a8a29b168e9efdda74fb27"},"output_type":"display_data"}},"cell_type":"code","exec_count":33}
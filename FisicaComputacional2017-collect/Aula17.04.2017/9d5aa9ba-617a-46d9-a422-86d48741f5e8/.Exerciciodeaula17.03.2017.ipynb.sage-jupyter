{"kernelspec":{"display_name":"Python 2","language":"python","name":"python2"},"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.13"}}
{"cell_type":"markdown","metadata":{"collapsed":false},"source":"### Exercício 1"}
{"cell_type":"code","execution_count":8,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"name":"stdout","output_type":"stream","text":"As esqueacoes de segundo grau sao formadas por: Ax^2 + Bx + C=0\ninsira o valor de A:2\ninsira o volor de B:2\ninsira o valor de C:2\ninsira valores para raizes reais:\n"}],"source":"print(\"As esqueacoes de segundo grau sao formadas por: Ax^2 + Bx + C=0\")\nA=float(input(\"insira o valor de A:\"))\nB=float(input(\"insira o volor de B:\"))\nC=float(input(\"insira o valor de C:\"))\ndelta=(B**2)-(4*A*C)\nif delta>0:\n    raiz1=(-B+(delta**(1/2)))/(2*A)\n    raiz2=(-B-(delta**(1/2)))/(2*A)\n    print (\"1ª raiz:\", raiz1 )\n    print (\"2ª raiz:\", raiz2 )\nelse: \n    print(\"insira valores para raizes reais:\")"}
{"cell_type":"markdown","metadata":{},"source":"### Exercício 2"}
{"cell_type":"code","execution_count":28,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"name":"stdout","output_type":"stream","text":"Um triangulo pode ser caracterizado pelo seus lado A, B e C.\ninsira o valor referente ao lado A:10\ninsira o valor referente ao lado B:2\ninsira o valor referente ao lado C:3\ninsira outros valores pertencentes a um triangulo:\n"}],"source":"print(\"Um triangulo pode ser caracterizado pelo seus lado A, B e C.\")\nA=float(input(\"insira o valor referente ao lado A:\"))\nB=float(input(\"insira o valor referente ao lado B:\"))\nC=float(input(\"insira o valor referente ao lado C:\"))\nif A<C+B and B<A+C and C<A+B:\n    print(\"os lados pertencem a um triangulo!!\")\n    if A==B and B==C:\n        print (\"Triangulo Equilatero!\")\n    if A==B or B==C or C==A:\n        print(\"Triangulo isosceles!\")\n    if A!=B and B!=C and C!=A:\n        print(\"Triangulo Escaleno!\")\nelse:\n    print(\"nao e triangulo, insira outros valores pertencentes a um triangulo:\")"}
{"cell_type":"markdown","metadata":{},"source":"### Exercício 3"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":false},"outputs":[],"source":"print(\"insira os valores dos lados a, b e c de um paralelepipedo:\")\na=float(input(\"insira o valor referente ao lado a:\"))\nb=float(input(\"insira o valor referente ao lado b:\"))\nc=float(input(\"insira o valor referente ao lado c:\"))\nV=a.b.c\nprint(\"O volume do paralelepipedo sera de:\", V)\nA=2*b*c+2*a*c\nprint(\"A area externa sera:\", A)"}
{"cell_type":"code","execution_count":23,"metadata":{"collapsed":true,"trusted":false},"outputs":[],"source":"def volume(a,b,c):\n    return a*b*c"}
{"cell_type":"code","execution_count":24,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"text/plain":"90"},"execution_count":24,"metadata":{},"output_type":"execute_result"}],"source":"volume(3,5,6)"}
{"cell_type":"code","execution_count":25,"metadata":{"collapsed":true,"trusted":false},"outputs":[],"source":"def area(a,b,c):\n    return (2*(a*c+b*c))"}
{"cell_type":"code","execution_count":26,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"text/plain":"96"},"execution_count":26,"metadata":{},"output_type":"execute_result"}],"source":"area(3,5,6)"}
{"cell_type":"markdown","metadata":{},"source":"### Exercicio 4"}
{"cell_type":"code","execution_count":4,"metadata":{"collapsed":false,"trusted":false},"outputs":[],"source":"def algarismos(n): \n    return len ([alg for alg in str(n) if int(alg)%2==0])"}
{"cell_type":"code","execution_count":6,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"text/plain":"5"},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":"algarismos(12345678910)"}
{"cell_type":"markdown","metadata":{},"source":"### Exercício 5"}
{"cell_type":"code","execution_count":11,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"name":"stdout","output_type":"stream","text":"('O vertor sera:', [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1])\n"}],"source":"V1=[]\nV=[1,2,3,-2,-3,-4,1,-10,12,15,-12,50,22]\nfor i in range(0,13):\n    if V[i]>0:\n        V1.append(1)\n    else:\n        V1.append(0)\nprint(\"O vertor sera:\", V1)"}
{"cell_type":"markdown","metadata":{},"source":"### Exercício 6"}
{"cell_type":"markdown","metadata":{},"source":"#### Math:\nmath.sqrt(numero): Retorna a raíz quadrada do número.\nmath.cos(numero): Retorna o cosseno do número em radiano.\nmath.sin(numero): Retorna o seno do número em radiano.\nmath.tan(numero): Retorna a tangente do número em radiano.\nmath.radians(numero): Converte o angulo ‘numero’ de graus para radiano.\nmath.pi: Não é bem uma função, está mais para uma constante com o número pi (3.1415926535897931).\nmath.hypot(x, y): Retorna a hipotenusa dos números (catetos) fornecidos.\n"}
{"cell_type":"code","execution_count":13,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"text/plain":"1.4142135623730951"},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":"import math\nmath.sqrt(2)"}
{"cell_type":"markdown","metadata":{},"source":"#### Numpy\nNumPy é um pacote de Python que suporta operações com vetores e matrizes e é essencial para a computação científica com Python. O NumPy é baseado em C, portanto tem um desempenho superior se comparado às operações com vetores originais do Python. Neste post eu quero mostrar uma introdução básica ao NumPy para os iniciantes."}
{"cell_type":"code","execution_count":14,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"text/plain":"array([0, 1, 2, 3, 4, 5])"},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":"import numpy as np\na=np.array([0,1,2,3,4,5])\na"}
{"cell_type":"markdown","metadata":{},"source":"#### Matplotlib\nO módulo matplotlib (MPL) é voltado para a geração\nde gráficos bi-dimensionais (2D) de vários tipos, e se\npresta para utilização tanto interativa quanto em\nscripts, aplicações web ou integrada a interfaces\ngráficas (GUIs) de vários tipos (http://matplotlib.org/)."}
{"cell_type":"code","execution_count":15,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"image/png":"smc-blob::96082355-9b09-453e-98cd-543c3232b8ee","text/plain":"<matplotlib.figure.Figure at 0x7f49b6e4bf10>"},"metadata":{},"output_type":"display_data"}],"source":"import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(0, 1, 500)\ny = np.sin(4 * np.pi * x) * np.exp(-5 * x)\n\nfig, ax = plt.subplots()\n\nax.fill(x, y, zorder=10)\nax.grid(True, zorder=5)\nplt.show()"}
{"cell_type":"markdown","metadata":{},"source":"#### Pandas \nPandas é uma biblioteca de software escrita para a linguagem de programação Python para manipulação e análise de dados. Em particular, oferece\nestruturas de dados e operações para manipulação de tabelas numéricas e séries temporais. Pandas é um software livre lançado sob a licença BSD de três cláusulas. O nome é derivado do termo \"dados de painel\", um termo de econometria para conjuntos de dados estruturados multidimensionais."}
{"cell_type":"code","execution_count":16,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"text/plain":"0    1.0\n1    3.0\n2    5.0\n3    NaN\n4    6.0\n5    8.0\ndtype: float64"},"execution_count":16,"metadata":{},"output_type":"execute_result"}],"source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\ns = pd.Series([1,3,5,np.nan,6,8])\ns"}
{"cell_type":"markdown","metadata":{"collapsed":true},"source":"##### Strings\nStrings são qualitativamente diferentes dos outros dois tipos porque são feitas de pedaços menores - caracteres. Tipos que consistem de pedaços menores são chamados tipos de dados compostos. Dependendo do que estejamos fazendo, pode ser que precisemos tratar um tipo de dado composto como uma coisa única, ou pode ser que queiramos acessar suas partes. Esta ambigüidade é útil. O operador colchete seleciona um único caractere de uma string."}
{"cell_type":"code","execution_count":2,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"name":"stdout","output_type":"stream","text":"b\n"}],"source":"frutas=\"banana\"\nletras=frutas[0]\nprint (letras)"}
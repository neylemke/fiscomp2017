{"kernelspec":{"display_name":"Python 2 (SageMath)","language":"python","name":"python2"},"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.13"}}
{"cell_type":"code","execution_count":1,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"Insira um valor para a \n2\nInsira um valor para b \n3\nInsira um valor para c \n4\nDelta igual a: -23\nEquação não tem solução no conjunto dos reais\n"}],"source":"## Exercicio 1\n\na= int(input(\"Insira um valor para a \\n\")) \nb= int(input(\"Insira um valor para b \\n\"))\nc= int(input(\"Insira um valor para c \\n\"))\nif a==0 :\n   x = -((c)/b)\n   print \"Equação de primeiro grau, raiz:\", x\nelse: # caso contrário\n   delta= (b*b) - 4*a*c\n   print \"Delta igual a:\", delta\n   if delta<0: # se for menor que zero, nao tem raízes reais\n        print \"Equação não tem solução no conjunto dos reais\"\n   elif delta==0: # delta igual a zero, apenas uma raiz real\n        print \"Equação possui apenas uma raíz real\"\n        x= -b/(2*a)\n        print \"Raiz da equação:\", x\n   elif delta>0: # delta maior que zero, duas raízes reais e uma distinta\n        x1= (-b+ (delta)**(1/2))/(2*a)\n        x2= (-b- (delta)**(1/2))/(2*a)\n        print \"Equação possui duas raízes reais:\"\n        print \"x1:\", x1 \n        print \"x2:\", x2"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"## Exercicio 2\n\nA = input('Digite um tamanho para o lado A: ')\nB = input('Digite um tamanho para o lado B: ')\nC = input('Digite um tamanho para o lado C: ')\n\nif A + B > C or B + C > A or A + C > B:\n    if A == B and A == C:\n        print 'Triângulo Equilátero'\n    elif A == B or B == C or A == C:\n        print 'Triângulo Isósceles'\n    elif A != B and C or B != A and C or C != A and B:\n        print 'Triângulo Escaleno'\n\nelse:\n    print 'Não é um triângulo. '"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"# Exercicio 3\n# Medidas são dadas em centímetros\n\nA= input(\"Insira A: \")\nB= input(\"Insira B: \") \nC= input(\"Insira C: \")\nfloat(A), float(B), float(C)\n\ndef volume(A,B,C):\n    return A*B*C\ndef area_lateral(A,B,C):\n        return 2*(A*C + B*C)\n\nprint \"Volume do paralelepipedo: \", volume(A,B,C) , \"cm^3\"\nprint \"Área lateral do paralelepipedo: \", area_lateral(A,B,C), \"cm^2\""}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"# Exercicio 4\n\nnat= str(input(\"Insira um número natural qualquer:\"))\n\ndef algarism(nat):\n    return len([alg for alg in nat if int(alg)%2==0])\nprint \"O número de algarismos pares no dado número é: \", algarism(nat)\n"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"# Exercicio 5\n\nx=[int(input(\"Insira os valores {}: \".format(i))) for i in range (10)]\nxx=[]\nfor k in range(len(x)):\n    if x[k]>0:\n        xx.append(1)\n    else:\n        xx.append(0)\nprint xx"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":""}
{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.4.3+"}}
{"cell_type":"markdown","metadata":{"collapsed":false},"source":"# Desafio - Exercício 6"}
{"cell_type":"markdown","metadata":{},"source":"## 1. Math\n**1.1. Funções**\n- Funções matemáticas, como cálculo de potências e logaritmos, funcoes trigonométricas e hiperbólicas, constantes matemáticas, entre outras."}
{"cell_type":"markdown","metadata":{},"source":"**1.2. Exemplos**"}
{"cell_type":"code","execution_count":12,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"name":"stdout","output_type":"stream","text":"5.0\n3.4011973816621555\n0.0\n"}],"source":"import math\nprint(math.sqrt(25))\nprint(math.log(30))\nprint(math.sin(0))"}
{"cell_type":"markdown","metadata":{},"source":"## 2. Numpy\n**2.1. Funções**\n- Operações com vetores e matrizes, como somar elementos de vetores e matrizes, obter matriz transposta, obter o maior e o menor valor de vetores e matrizes."}
{"cell_type":"markdown","metadata":{"collapsed":true},"source":"**2.2. Exemplos**"}
{"cell_type":"code","execution_count":45,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"name":"stdout","output_type":"stream","text":"A= [[0 1]\n [2 3]]\nAT= [[0 2]\n [1 3]]\nMaior valor= 3\nMenor valor= 0\n"}],"source":"import numpy as np\na=np.array([[0,1],[2,3]])\nprint('A=',a)\nprint('AT=',a.T)\nprint('Maior valor=',a.argmax())\nprint('Menor valor=',a.argmin())"}
{"cell_type":"markdown","metadata":{},"source":"## 3. Matplotlib\n**3.1. Funções**\n- Visualização de dados, gera gráficos de diversos tipos, como linhas, colunas, histogramas, entre outros.\n\n**3.2. Exemplos**"}
{"cell_type":"code","execution_count":46,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"image/png":"smc-blob::b409b05f-cafa-4aee-a159-5a3c611bd6cc","text/plain":"<matplotlib.figure.Figure at 0x7f9c08083390>"},"metadata":{},"output_type":"display_data"}],"source":"import matplotlib.pyplot as plt\nplt.plot([0,10,20,30])\nplt.show()"}
{"cell_type":"markdown","metadata":{},"source":"## 4. Pandas\n**4.1. Funções**\n- Suporte para análise estruturas de dados e operações estatísticas.\n\n**4.2. Exemplos**"}
{"cell_type":"code","execution_count":50,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"name":"stdout","output_type":"stream","text":"a    3\nb   -5\nc    7\nd    4\ndtype: int64\n      País     Capital  População\n0  Bélgica    Bruxelas     123465\n1    Índia  Nova Delhi     456789\n2   Brasil    Brasília     987654\n"}],"source":"import pandas as pd\ns = pd.Series([3, -5, 7, 4], index=['a', 'b', 'c', 'd'])\nf = pd.DataFrame(data, columns=['País','Capital','População'])\nprint(s)\nprint(f)"}
{"cell_type":"markdown","metadata":{"collapsed":true,"trusted":false},"source":"## 5. String\n**5.1. Funções**\n- Strings são qualitativamente diferentes dos outros tipos de dados porque são feitas de pedaços menores, caracteres. Dependendo do que estejamos fazendo, pode ser que precisemos tratar um tipo de dado composto como uma coisa única, ou pode ser que queiramos acessar suas partes. Esta ambigüidade é útil.\n\n**5.2. Exemplos**"}
{"cell_type":"code","execution_count":3,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"E\nX\nO\n"}],"source":"string='EXEMPLO'\nprint(string[0])\nprint(string[1])\nprint(string[6])"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":""}
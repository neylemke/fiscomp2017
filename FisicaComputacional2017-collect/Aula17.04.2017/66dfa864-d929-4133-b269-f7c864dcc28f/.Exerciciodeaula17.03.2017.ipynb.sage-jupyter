{"kernelspec":{"display_name":"Python 2 (SageMath)","language":"python","name":"python2"},"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.13"}}
{"cell_type":"markdown","metadata":{},"source":"## Aula - 17 de Abril de 2017"}
{"cell_type":"code","execution_count":38,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"Entre com valor para a: 3\nEntre com valor para b: 7\nEntre com valor para c: 4\ndiscriminante (delta) =  1\nx1 =  -1.0\nx2 =  -1.33333333333\n"}],"source":"#Exercício 1: encontrar as raízes da equação quadrática da forma ax^2+bx+c=0.\n\nfrom math import sqrt\na = input(\"Entre com valor para a: \")\nb = input(\"Entre com valor para b: \")\nc = input(\"Entre com valor para c: \")\ndiscriminante = b**2 - 4*a*c\nprint 'discriminante (delta) = ', discriminante\nif discriminante >= 0:\n    x1 = (-b + (sqrt(discriminante)))/(2*a)\n    print 'x1 = ', x1\n    x2 = (-b - (sqrt(discriminante)))/(2*a)\n    print 'x2 = ', x2\nelse:\n    print 'Discriminante (delta) negativo, entre com outros valores para a, b e c'"}
{"cell_type":"code","execution_count":1,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"Entre com valor para o lado A: 3\nEntre com valor para o lado B: 2\nEntre com valor para o lado C: 5\nA, B e C formam um triângulo ESCALENO!\n"}],"source":"##### Exercício 2: verificar se é triângulo\n\nA = input(\"Entre com valor para o lado A: \")\nB = input(\"Entre com valor para o lado B: \")\nC = input(\"Entre com valor para o lado C: \")\nif  (A < B + C):\n    if  (B < A + C):\n        if (C < A + B):\n            print 'A, B e C formam um triângulo!'\nelse:\n    print 'A, B e C não formam um triângulo. Entre com outros valores!'\nif A == B:\n    if B == C:\n        if A == C:\n            print 'A, B e C formam um triângulo EQUILÁTERO!'\n\n        else:\n            print 'A, B e C formam um triângulo ISÓSCELES!'\nelse:\n    print 'A, B e C formam um triângulo ESCALENO!'"}
{"cell_type":"code","execution_count":33,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"Entre com valor para o lado a do paralelepípedo: 2\nEntre com valor para o lado b do paralelepípedo: 3\nEntre com valor para o lado c do paralelepípedo: 5\nO volume do paralelepípedo em u.v. é: V =  30\nA área lateral do paralelepípedo em u.a. é: A =  62\n"}],"source":"#Exercício 3: volume e área lateral de um paralepípedo.\n\na = input(\"Entre com valor para o lado a do paralelepípedo: \")\nb = input(\"Entre com valor para o lado b do paralelepípedo: \")\nc = input(\"Entre com valor para o lado c do paralelepípedo: \")\nV = a*b*c\nprint 'O volume do paralelepípedo em u.v. é: V = ', V\nA = (2*a*b)+(2*a*c)+(2*b*c)\nprint 'A área lateral do paralelepípedo em u.a. é: A = ', A"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"#Exercício 4: função que conte o número de algarismos pares em um número natural.\n\ndef contador()"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":false,"trusted":true},"outputs":[],"source":"#Exercício 5: algoritmo que solicite ao usuário números e os armazene em um vetor de 30 posições.\n\ni=0\nV=[]\nwhile i<30:\n    V=V+[float(input('Entre com números quaisquer:'))]\n    i=i+1\n    \ni=0\nwhile i<30:\n    if V[i]>0:\n        V[i]=1\n    else:\n        V[i]=0\n    i=i+1\n    \nV     "}
{"cell_type":"markdown","metadata":{},"source":"# Exercício 6: math, numpy, matplotlib, pandas e string\n\n## Math\n\nFornece funções para operações matemáticas especializadas. O módulo math implementa muitas das funções que normalmente seriam encontrados nas bibliotecas nativas plataforma C para operações matemáticas complexas usando valores de ponto flutuante, incluindo logaritmos e operações trigonométricas.\nPor exemplo, esse módulo é usado para constantes especiais. Muitas operações matemáticas dependem de constantes especiais. Math inclui valores para pi.\n\n**import math**\n\nprint 'π: %.30f' % math.pi\nprint 'e: %.30f' % math.e\n\n## NumPy\n\nGrandes partes do uso NumPy, é para um pacote de matriz oferecendo N-dimensional, digitado matrizes e funções úteis para a álgebra linear, transformadas de Fourier, números aleatórios, e outras tarefas científicas básicas.\n\n**import numpy as np**\n\nExemplos:\nCriar um grande vetor(array) com com 1 milhão de amostras.\n\nx = np.linspace(start=0, stop=100, num=1E6, dtype=np.float64)\n\nA maioria das operações é por elemento.\n\ny = x ** 2\n\nUsuário de C e Fortran.\n\nprint(y.sum())\n\nFFT e Inversa.\n\nx = np.random.random(100)\nlarge_X = np.fft.fft(x)\nx = np.fft.ifft(large_X)\n\n# Matplotlib\n\nGráficos são feitos usando Matplotlib, um pacote para a criação de lotes estáticas de alta qualidade. Ele tem uma interface que imita Matlab que\nmuitas pessoas estão familiarizados.\n\n**import matplotlib.pylab as plt**\n\nplt.plot(np.sin(np.linspace(0, 2 * np.pi, 2000)), color=\"green\", label=\"Some Curve\")\n\nplt.legend()\n\nplt.ylim(-1.1, 1.1)\n\nplt.show()\n\n## Pandas\n\nPython é uma ótima linguagem para fazer a análise de dados, principalmente por causa do fantástico ecossistema de pacotes centrados em dados Python. Pandas é um desses pacotes, e torna a importação e análise de dados muito mais fácil. Pandas baseia-se em pacotes como NumPy e matplotlib para dar-lhe um único, conveniente, lugar para fazer a maioria de sua análise de dados e trabalho de visualização.\n\n**import pandas as pd**\n\ndf_data = {'pais': ['Brasil', 'Argentina','Argentina', 'Brasil', 'Chile','Chile'],'ano': [2005, 2006, 2005, 2006, 2007, 2008],'populacao': [170.1, 30.5, 32.2, 172.6, 40.8, 42.0]}\ndf = pd.DataFrame(df_data)\nprint(df)\n\n## String\n\nStrings estão entre os tipos mais populares em Python. Podemos criá-los simplesmente anexando caracteres entre aspas. Python trata citações simples o mesmo que aspas duplas. Criar strings é tão simples como atribuir um valor a uma variável. Por exemplo:\n\nvar1 = 'Hello World!'\nvar2 = \"Python Programming\""}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":""}
{"type":"settings","kernel":"anaconda3","backend_state":"ready","trust":true,"kernel_state":"idle"}
{"type":"file","last_load":1497242256166}
{"output":{"0":{"data":{"text/plain":"<matplotlib.text.Text at 0x7fa7fa47d278>"},"exec_count":1},"1":{"metadata":{"image/png":{"height":603,"width":617}},"data":{"image/png":"2b3a8de3134494382a9177a3c52ea372d55a768d"}}},"exec_count":1,"start":1497363454986,"input":"#Exercicio2\ndef read_auto_data(fileName = \"Automobile price data.csv\"):\n    'Function to load the auto price data set from a .csv file' \n    import pandas as pd\n    import numpy as np\n\n    ## Read the .csv file with the pandas read_csv method\n    auto_prices = pd.read_csv(fileName)\n    \n    ## Remove rows with missing values, accounting for mising values coded as '?'\n    cols = ['price', 'bore', 'stroke', \n          'horsepower', 'peak-rpm']\n    for column in cols:\n        auto_prices.loc[auto_prices[column] == '?', column] = np.nan\n    auto_prices.dropna(axis = 0, inplace = True)\n\n    ## Convert some columns to numeric values\n    for column in cols:\n        auto_prices[column] = pd.to_numeric(auto_prices[column])\n#    auto_prices[cols] = auto_prices[cols].as_type(int64)\n        \n    return auto_prices\nauto_prices = read_auto_data()\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfig = plt.figure(figsize=(10,10)) # define plot area\nax = fig.gca() # define axis \nsns.set_style(\"whitegrid\")\nsns.violinplot(x = 'wheel-base', y = 'engine-size', data = auto_prices, ax = ax)\nax.set_title('Violine plots of auto engine size by wheel-base') # Give the plot a main title\nax.set_xlabel('Wheel-base') # Set text for the x axis\nax.set_ylabel('Engine size')# Set text for y axis","state":"done","pos":0,"type":"cell","end":1497363460239,"id":"9a20b9","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/plain":"<matplotlib.text.Text at 0x7fa7f0b1aa58>"},"exec_count":2},"1":{"metadata":{"image/png":{"height":330,"width":487}},"data":{"image/png":"6700678c86cca123ef2b1b54b5eedf85ff661547"}},"2":{"metadata":{"image/png":{"height":603,"width":613}},"data":{"image/png":"dd804caf507d3b9af16bbb030fe1d6a7d797b168"}}},"exec_count":2,"start":1497363469935,"input":"#Exercicio3\n\ndef read_auto_data(fileName = \"Automobile price data.csv\"):\n    'Function to load the auto price data set from a .csv file' \n    import pandas as pd\n    import numpy as np\n\n    ## Read the .csv file with the pandas read_csv method\n    auto_prices = pd.read_csv(fileName)\n    \n    ## Remove rows with missing values, accounting for mising values coded as '?'\n    cols = ['price', 'bore', 'stroke', \n          'horsepower', 'peak-rpm']\n    for column in cols:\n        auto_prices.loc[auto_prices[column] == '?', column] = np.nan\n    auto_prices.dropna(axis = 0, inplace = True)\n\n    ## Convert some columns to numeric values\n    for column in cols:\n        auto_prices[column] = pd.to_numeric(auto_prices[column])\n#    auto_prices[cols] = auto_prices[cols].as_type(int64)\n        \n    return auto_prices\nauto_prices = read_auto_data()\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_style(\"whitegrid\")\nsns.kdeplot(auto_prices['city-mpg'])\n\nfig = plt.figure(figsize=(10,10)) # define plot area\nax = fig.gca() # define axis \nsns.set_style(\"whitegrid\")\nsns.kdeplot(auto_prices['city-mpg'], ax = ax)\nax.set_title('KDE plot of auto engine size') # Give the plot a main title\nax.set_xlabel('City-mpg') # Set text for the x axis\nax.set_ylabel('Density')# Set text for y axis","state":"done","pos":1,"type":"cell","end":1497363471633,"id":"40a312","kernel":"anaconda3"}
{"output":{"0":{"name":"stderr","text":"/projects/anaconda3/lib/python3.5/site-packages/ipykernel/__main__.py:32: DeprecationWarning: \n.ix is deprecated. Please use\n.loc for label based indexing or\n.iloc for positional indexing\n\nSee the documentation here:\nhttp://pandas.pydata.org/pandas-docs/stable/indexing.html#deprecate_ix\n"},"1":{"data":{"text/plain":"'Done'"},"exec_count":3},"2":{"metadata":{"image/png":{"height":603,"width":616}},"data":{"image/png":"5663a21f9d247b718ffda2fe1016a948301994bb"}}},"exec_count":3,"start":1497363471640,"input":"#Exercicio1\n\ndef read_auto_data(fileName = \"Automobile price data.csv\"):\n    'Function to load the auto price data set from a .csv file' \n    import pandas as pd\n    import numpy as np\n\n    ## Read the .csv file with the pandas read_csv method\n    auto_prices = pd.read_csv(fileName)\n    \n    ## Remove rows with missing values, accounting for mising values coded as '?'\n    cols = ['price', 'bore', 'stroke', \n          'horsepower', 'peak-rpm']\n    for column in cols:\n        auto_prices.loc[auto_prices[column] == '?', column] = np.nan\n    auto_prices.dropna(axis = 0, inplace = True)\n\n    ## Convert some columns to numeric values\n    for column in cols:\n        auto_prices[column] = pd.to_numeric(auto_prices[column])\n#    auto_prices[cols] = auto_prices[cols].as_type(int64)\n        \n    return auto_prices\nauto_prices = read_auto_data()\n\ndef auto_color(df, plot_cols):\n    import matplotlib.pyplot as plt\n    import matplotlib.patches as mpatches\n    for col in plot_cols:\n        fig = plt.figure(figsize=(10, 10))\n        ax = fig.gca()\n        temp1 = df.ix[df['fuel-type'] == 'gas']       \n        temp2 = df.ix[df['fuel-type'] == 'diesel']\n        if temp1.shape[0] > 0:                    \n            temp1.plot(kind = 'scatter', x = col, y = 'curb-weight' , \n                           ax = ax, color = 'DarkBlue')                          \n        if temp2.shape[0] > 0:                    \n            temp2.plot(kind = 'scatter', x = col, y = 'curb-weight' , \n                           ax = ax, color = 'Red') \n    ax.set_title('Scatter plot of price vs. ' + col)\n    red_patch = mpatches.Patch(color='Red', label='Diesel')   \n    blue_patch = mpatches.Patch(color='DarkBlue', label='Gas')\n    plt.legend(handles=[red_patch, blue_patch])\n    return 'Done'\nauto_color(auto_prices, ['engine-size'])","state":"done","pos":2,"type":"cell","end":1497363472874,"id":"b99ef7","kernel":"anaconda3"}
{"type":"cell","id":"4b6c5c","pos":3,"input":"Nesto gráfico podemos perceber que o freio é mais utilizado quando temos um carro com funcionamento a gas e quando mais o tamanho do motor for maior. O disel não é pouco utilizado com relação ao gas. Porém acontece a mesma coisa, quando maior o tamanho do motor, maior será o uso do freio no automóvel.","cell_type":"markdown"}
{"type":"cell","id":"e6ea94","pos":0.5,"input":"O gráfico acima nos mostra que os valores da distância entre os eixos e o tamanho do motor são completamente desproporcionais, não havendo uma média plausível entre os valores para que ele pudessem ser avaliados.","cell_type":"markdown"}
{"type":"cell","id":"e7b338","pos":1.5,"input":"Podemos perceber que o tamanho do gráfico foi aumentado, e que o gráfico na descida posteriormente ao pico possui um comportamento mais linear, indicando que houve uma queda linear na densidade.","cell_type":"markdown"}
{"type":"cell","id":"c9e5f2","pos":4,"input":""}
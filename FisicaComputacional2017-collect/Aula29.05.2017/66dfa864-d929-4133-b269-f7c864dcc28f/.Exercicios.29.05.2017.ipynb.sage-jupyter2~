{"type":"settings","kernel":"python2","backend_state":"running","trust":true,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.13"}},"kernel_state":"idle"}
{"type":"cell","id":"695033","pos":3,"input":"file=open(\"dracula.txt\", \"r\")","cell_type":"code","exec_count":4}
{"type":"cell","id":"ccb8cc","pos":0,"input":"## Exercício 1","cell_type":"markdown"}
{"type":"cell","id":"8d9058","pos":1,"input":"import sys\nreload(sys)\nsys.setdefaultencoding(\"utf-8\")","cell_type":"code","exec_count":2}
{"type":"cell","id":"8a52fa","pos":2,"input":"import numpy as np\nimport matplotlib.pyplot as plt","cell_type":"code","exec_count":3}
{"type":"cell","id":"2c9576","pos":4,"input":"texto=file.readlines()","cell_type":"code","exec_count":5}
{"type":"cell","id":"04a954","pos":5,"input":"dict={}\nfor line in texto:\n    for word in line.split():\n        if word in dict:\n            dict[word]=dict[word]+1\n        else:\n            dict[word]=1","cell_type":"code","exec_count":6}
{"type":"cell","id":"ca20fb","pos":6,"input":"oco=dict.values()\noco.sort()\nX=np.array(range(len(oco)))+1\nY=np.array(oco)","cell_type":"code","exec_count":7}
{"type":"cell","id":"67877b","pos":7,"input":"fig = plt.figure(figsize=(10,10)) # define plot area\nax = fig.gca() # define axis\nx=fig.gca()\nplt.plot(X,Y)\nax.set_title('Frequencia das palavras do Dracula') # Give the plot a main title\nax.set_xlabel('rank') # Set text for the x axis\nax.set_ylabel('freq')# Set text for y axis","output":{"0":{"data":{"text/plain":"<matplotlib.text.Text at 0x7f91ebc87b50>"},"output_type":"execute_result","exec_count":8},"1":{"data":{"image/png":"ab4fff244dd8f05c1cfdc248bd628cbd9996c8b9"},"output_type":"execute_result","exec_count":8}},"cell_type":"code","exec_count":8}
{"type":"cell","id":"f3f4c7","pos":8,"input":"logx=np.log(X)\nlogy=np.log(Y)\nfig = plt.figure(figsize=(10,10)) # define plot area\nax = fig.gca() # define axis\nx=fig.gca()\nplt.plot(logx,logy)\nax.set_title('Frequencia das palavras das Lusiadas') # Give the plot a main title\nax.set_xlabel('rank') # Set text for the x axis\nax.set_ylabel('freq')# Set text for y axis","output":{"0":{"data":{"text/plain":"<matplotlib.text.Text at 0x7f91eb726c50>"},"output_type":"execute_result","exec_count":9},"1":{"data":{"image/png":"72e164393fe054f3d1fc809e45b2b805fbc7f65b"},"output_type":"execute_result","exec_count":9}},"cell_type":"code","exec_count":9}
{"type":"cell","id":"387d27","pos":9,"input":"oco.reverse()","cell_type":"code","exec_count":10}
{"type":"cell","id":"549f8c","pos":10,"input":"oco","output":{"0":{"data":{"text/plain":"[7423,\n 5640,\n 4499,\n 4462,\n 3673,\n 2891,\n 2384,\n 2324,\n 1948,\n 1793,\n 1446,\n 1434,\n 1417,\n 1409,\n 1363,\n 1295,\n 1259,\n 1227,\n 1152,\n 1047,\n 1043,\n 1034,\n 1011,\n 1004,\n 998,\n 943,\n 927,\n 861,\n 846,\n 831,\n 655,\n 636,\n 629,\n 624,\n 594,\n 561,\n 561,\n 545,\n 536,\n 524,\n 520,\n 510,\n 508,\n 484,\n 470,\n 458,\n 437,\n 414,\n 410,\n 408,\n 398,\n 394,\n 390,\n 382,\n 375,\n 371,\n 367,\n 366,\n 365,\n 356,\n 346,\n 341,\n 336,\n 332,\n 327,\n 325,\n 319,\n 315,\n 311,\n 306,\n 298,\n 295,\n 293,\n 291,\n 291,\n 288,\n 286,\n 286,\n 284,\n 281,\n 275,\n 274,\n 270,\n 266,\n 266,\n 260,\n 259,\n 245,\n 242,\n 240,\n 237,\n 233,\n 221,\n 219,\n 219,\n 216,\n 215,\n 215,\n 214,\n 212,\n 210,\n 206,\n 205,\n 200,\n 199,\n 199,\n 198,\n 189,\n 188,\n 187,\n 176,\n 176,\n 175,\n 170,\n 169,\n 168,\n 168,\n 166,\n 166,\n 165,\n 164,\n 163,\n 162,\n 162,\n 162,\n 161,\n 156,\n 155,\n 153,\n 149,\n 147,\n 145,\n 144,\n 144,\n 142,\n 141,\n 140,\n 139,\n 139,\n 137,\n 137,\n 136,\n 135,\n 134,\n 132,\n 131,\n 131,\n 131,\n 129,\n 128,\n 127,\n 126,\n 126,\n 125,\n 124,\n 122,\n 122,\n 122,\n 121,\n 120,\n 120,\n 117,\n 117,\n 116,\n 115,\n 115,\n 114,\n 113,\n 113,\n 113,\n 112,\n 111,\n 111,\n 111,\n 111,\n 111,\n 109,\n 108,\n 107,\n 107,\n 106,\n 106,\n 106,\n 106,\n 105,\n 104,\n 102,\n 102,\n 102,\n 100,\n 99,\n 99,\n 98,\n 98,\n 98,\n 97,\n 96,\n 95,\n 95,\n 94,\n 94,\n 93,\n 92,\n 92,\n 91,\n 90,\n 89,\n 89,\n 89,\n 89,\n 87,\n 87,\n 87,\n 87,\n 86,\n 86,\n 86,\n 86,\n 86,\n 85,\n 84,\n 84,\n 84,\n 84,\n 84,\n 83,\n 83,\n 82,\n 82,\n 81,\n 80,\n 79,\n 79,\n 79,\n 79,\n 78,\n 78,\n 78,\n 78,\n 78,\n 78,\n 78,\n 77,\n 77,\n 77,\n 77,\n 77,\n 77,\n 77,\n 77,\n 76,\n 76,\n 76,\n 74,\n 74,\n 74,\n 73,\n 72,\n 72,\n 72,\n 72,\n 72,\n 71,\n 71,\n 71,\n 70,\n 70,\n 70,\n 69,\n 69,\n 69,\n 68,\n 68,\n 67,\n 66,\n 66,\n 66,\n 65,\n 65,\n 65,\n 65,\n 65,\n 65,\n 64,\n 64,\n 63,\n 63,\n 62,\n 62,\n 62,\n 62,\n 62,\n 62,\n 61,\n 60,\n 60,\n 60,\n 60,\n 60,\n 59,\n 59,\n 58,\n 58,\n 57,\n 57,\n 57,\n 57,\n 56,\n 56,\n 56,\n 55,\n 55,\n 55,\n 55,\n 55,\n 54,\n 54,\n 54,\n 54,\n 54,\n 53,\n 53,\n 52,\n 52,\n 52,\n 52,\n 51,\n 51,\n 51,\n 51,\n 51,\n 50,\n 50,\n 50,\n 49,\n 49,\n 49,\n 49,\n 49,\n 48,\n 48,\n 48,\n 48,\n 47,\n 47,\n 47,\n 46,\n 46,\n 46,\n 46,\n 46,\n 46,\n 45,\n 45,\n 45,\n 45,\n 45,\n 45,\n 45,\n 45,\n 45,\n 45,\n 45,\n 45,\n 44,\n 44,\n 44,\n 44,\n 44,\n 44,\n 44,\n 43,\n 43,\n 43,\n 43,\n 43,\n 43,\n 43,\n 43,\n 43,\n 43,\n 43,\n 42,\n 42,\n 42,\n 42,\n 42,\n 42,\n 42,\n 42,\n 42,\n 41,\n 41,\n 41,\n 41,\n 41,\n 41,\n 40,\n 40,\n 40,\n 40,\n 40,\n 40,\n 40,\n 40,\n 40,\n 39,\n 39,\n 39,\n 39,\n 39,\n 39,\n 39,\n 39,\n 39,\n 39,\n 39,\n 39,\n 39,\n 39,\n 39,\n 39,\n 38,\n 38,\n 38,\n 38,\n 38,\n 38,\n 38,\n 38,\n 38,\n 38,\n 38,\n 38,\n 38,\n 37,\n 37,\n 37,\n 37,\n 37,\n 37,\n 37,\n 37,\n 36,\n 36,\n 36,\n 36,\n 36,\n 36,\n 36,\n 36,\n 36,\n 36,\n 36,\n 36,\n 35,\n 35,\n 35,\n 35,\n 35,\n 35,\n 35,\n 35,\n 34,\n 34,\n 34,\n 34,\n 34,\n 34,\n 34,\n 34,\n 34,\n 34,\n 34,\n 34,\n 34,\n 34,\n 33,\n 33,\n 33,\n 33,\n 33,\n 33,\n 33,\n 33,\n 33,\n 33,\n 33,\n 33,\n 32,\n 32,\n 32,\n 32,\n 32,\n 32,\n 32,\n 32,\n 32,\n 32,\n 32,\n 32,\n 32,\n 31,\n 31,\n 31,\n 31,\n 31,\n 31,\n 31,\n 31,\n 31,\n 31,\n 31,\n 31,\n 31,\n 31,\n 31,\n 31,\n 31,\n 31,\n 30,\n 30,\n 30,\n 30,\n 30,\n 30,\n 30,\n 30,\n 30,\n 30,\n 30,\n 30,\n 30,\n 30,\n 30,\n 30,\n 30,\n 30,\n 29,\n 29,\n 29,\n 29,\n 29,\n 29,\n 29,\n 29,\n 29,\n 29,\n 29,\n 29,\n 29,\n 29,\n 29,\n 29,\n 29,\n 29,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 28,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 27,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 26,\n 25,\n 25,\n 25,\n 25,\n 25,\n 25,\n 25,\n 25,\n 25,\n 25,\n 25,\n 25,\n 25,\n 25,\n 25,\n 25,\n 25,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 24,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 23,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 22,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 21,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 20,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 19,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 18,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 17,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 16,\n 15,\n 15,\n 15,\n 15,\n 15,\n 15,\n 15,\n 15,\n 15,\n 15,\n ...]"},"output_type":"execute_result","exec_count":11}},"cell_type":"code","exec_count":11}
{"type":"cell","id":"57dd5a","pos":11,"input":"## Exercício 2","cell_type":"markdown"}
{"type":"cell","id":"f92f43","pos":12,"input":"def read_auto_data(fileName = \"Automobile price data.csv\"):\n    'Function to load the auto price data set from a .csv file' \n    import pandas as pd\n    import numpy as np\n\n    ## Read the .csv file with the pandas read_csv method\n    auto_prices = pd.read_csv(fileName)\n    \n    ## Remove rows with missing values, accounting for mising values coded as '?'\n    cols = ['price', 'bore', 'stroke', \n          'horsepower', 'peak-rpm']\n    for column in cols:\n        auto_prices.loc[auto_prices[column] == '?', column] = np.nan\n    auto_prices.dropna(axis = 0, inplace = True)\n\n    ## Convert some columns to numeric values\n    for column in cols:\n        auto_prices[column] = pd.to_numeric(auto_prices[column])\n#    auto_prices[cols] = auto_prices[cols].as_type(int64)\n        \n    return auto_prices\nauto_prices = read_auto_data()\n\nimport matplotlib.pyplot as plt\nfig = plt.figure(figsize=(8, 8))\nax = fig.gca()\nauto_prices.plot(kind = 'scatter', x = 'engine-size', y = 'price', ax = ax)\nax.set_title('Scatter plot de preco vs consumo')\nax.set_xlabel('Consumo') # Set text for the x axis\nax.set_ylabel('Preco')# Set text for y axis\n","output":{"0":{"data":{"text/plain":"<matplotlib.text.Text at 0x7f91e57bec10>"},"output_type":"execute_result","exec_count":12},"1":{"data":{"image/png":"38786f8f0296828f01ad9629a46bf00925e71634"},"output_type":"execute_result","exec_count":12}},"cell_type":"code","exec_count":12}
{"type":"cell","id":"aa7bac","pos":13,"input":"","cell_type":"code","exec_count":0}
{"type":"file","last_load":1497283162568}
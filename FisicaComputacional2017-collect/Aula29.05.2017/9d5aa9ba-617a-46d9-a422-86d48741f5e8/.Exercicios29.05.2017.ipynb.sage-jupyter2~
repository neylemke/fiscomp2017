{"type":"settings","kernel":"python2","backend_state":"running","trust":true,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.13"}},"kernel_state":"idle"}
{"type":"file","last_load":1497192160900}
{"output":{"0":{"data":{"text/plain":"[37,\n 30,\n 28,\n 16,\n 16,\n 15,\n 13,\n 11,\n 11,\n 11,\n 10,\n 9,\n 8,\n 7,\n 7,\n 6,\n 6,\n 6,\n 6,\n 6,\n 5,\n 5,\n 5,\n 5,\n 5,\n 5,\n 5,\n 5,\n 4,\n 4,\n 4,\n 4,\n 4,\n 4,\n 4,\n 4,\n 4,\n 3,\n 3,\n 3,\n 3,\n 3,\n 3,\n 3,\n 3,\n 3,\n 3,\n 3,\n 3,\n 3,\n 3,\n 3,\n 3,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 2,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1,\n 1]"},"exec_count":8}},"exec_count":8,"start":1497192179159,"input":"oco","state":"done","pos":8,"cell_type":"code","type":"cell","end":1497192179171,"id":"f4e603","kernel":"python2"}
{"type":"cell","id":"f1528a","pos":25,"input":"","cell_type":"code","exec_count":0}
{"output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7fe026830a50>"},"exec_count":14},"1":{"data":{"image/png":"8c161b551cc1dc018ab5ea3d92f8ebd734d1667d"}}},"exec_count":14,"start":1497192194402,"input":"%matplotlib inline \nauto_prices.plot(kind = 'scatter', x = 'engine-size', y = 'price')","state":"done","pos":15,"cell_type":"code","type":"cell","end":1497192194636,"id":"70263f","kernel":"python2"}
{"output":{"0":{"ename":"UnicodeDecodeError","evalue":"'ascii' codec can't decode byte 0xc3 in position 5: ordinal not in range(128)","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mUnicodeDecodeError\u001b[0m                        Traceback (most recent call last)","\u001b[0;32m<ipython-input-9-b296f39bdbc7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgca\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mY\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_title\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Frequência Hemingway'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Give the plot a main title\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_xlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'palavras'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Set text for the x axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_ylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Frequência'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m# Set text for y axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/sage/sage-7.6/local/lib/python2.7/site-packages/matplotlib/axes/_axes.py\u001b[0m in \u001b[0;36mset_title\u001b[0;34m(self, label, fontdict, loc, **kwargs)\u001b[0m\n\u001b[1;32m    170\u001b[0m             \u001b[0;34m'verticalalignment'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m'baseline'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    171\u001b[0m             'horizontalalignment': loc.lower()}\n\u001b[0;32m--> 172\u001b[0;31m         \u001b[0mtitle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    173\u001b[0m         \u001b[0mtitle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdefault\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    174\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mfontdict\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/sage/sage-7.6/local/lib/python2.7/site-packages/matplotlib/text.py\u001b[0m in \u001b[0;36mset_text\u001b[0;34m(self, s)\u001b[0m\n\u001b[1;32m   1204\u001b[0m         \u001b[0mACCEPTS\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstring\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0manything\u001b[0m \u001b[0mprintable\u001b[0m \u001b[0;32mwith\u001b[0m \u001b[0;34m'%s'\u001b[0m \u001b[0mconversion\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1205\u001b[0m         \"\"\"\n\u001b[0;32m-> 1206\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_text\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'%s'\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1207\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstale\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1208\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mUnicodeDecodeError\u001b[0m: 'ascii' codec can't decode byte 0xc3 in position 5: ordinal not in range(128)"]},"1":{"data":{"image/png":"7de50bb1759d347ca72a079f660c963c05d46e14"}}},"exec_count":9,"start":1497192179570,"input":"import matplotlib.pyplot as plt\nfig = plt.figure(figsize=(10, 10)) # define área do plot \nax = fig.gca() # define eixo               \nx=fig.gca()\nplt.plot(X,Y)\nax.set_title('Frequência Hemingway') # Give the plot a main title\nax.set_xlabel('palavras') # Set text for the x axis\nax.set_ylabel('Frequência')# Set text for y axis","state":"done","pos":9,"cell_type":"code","type":"cell","end":1497192179972,"id":"1710f5","kernel":"python2"}
{"output":{"0":{"text":"Overwriting Hemingway.txt\n","name":"stdout"}},"exec_count":1,"start":1497192172061,"input":"%%writefile Hemingway.txt\nA Very Short Story by Ernest Hemingway \nOne hot evening in Padua they carried him up onto the roof and he could look out over the top \nof the town There were chimney swifts in the sky After a while it got dark and the searchlights \ncame out The others went down and took the bottles with them He and Luz could hear them \nbelow on the balcony Luz sat on the bed She was cool and fresh in the hot night. \nLuz stayed on night duty for three months They were glad to let her When they operated on \nhim she prepared him for the operating table and they had a joke about friend or enema He \nwent under the anaesthetic holding tight on to himself so he would not blab about anything \nduring the silly talky time After he got on crutches he used to take the temperatures so Luz \nwould not have to get up from the bed There were only a few patients and they all knew about \nit They all liked Luz As he walked back along the halls he thought of Luz in his bed \nBefore he went back to the front they went into the Duomo and prayed It was dim and quiet, \nand there were other people praying They wanted to get married but there was not enough \ntime for the banns and neither of them had birth certificates They felt as though they were \nmarried but they wanted everyone to know about it and to make it so they could not lose it \nLuz wrote him many letters that he never got until after the armistice Lifteen came in a bunch \nto the front and he sorted them by the dates and read them all straight through They were all \nabout the hospital and how much she loved him and how it was impossible to get along \nwithout him and how terrible it was missing him at night \nAfter the armistice they agreed he should go home to get a job so they might be married Luz \nwould not come home until he had a good job and could come to New York to meet her It was \nunderstood he would not drink and he did not want to see his friends or anyone in the States \nOnly to get a job and be married On the train from Padua to Milan they quarreled about her not \nbeing willing to come home at once When they had to say good-bye in the station at Milan, \nthey kissed good-bye but were not finished with the quarrel. He felt sick about saying good- \nbye like that \nHe went to America on a boat from Genoa Luz went back to Pordonone to open a hospital It \nwas lonely and rainy there and there was a battalion of arditi quartered in the town Living in \nthe muddy, rainy town in the winter the major of the battalion made love to Luz and she had \nnever known Italians before and finally wrote to the States that theirs had only been a boy and \ngirl affair She was sorry and she knew he would probably not be able to understand but might \nsome day forgive her and be grateful to her and she expected absolutely unexpectedly to be \nmarried in the spring She loved him as always but she realized now it was only a boy and girl \nlove She hoped he would have a great career and believed in him absolutely She knew it was \nfor the best\nThe major did not marry her in the spring or any other time Luz never got an answer to the \nletter to Chicago about it A short time after he contracted gonorrhea from a sales girl in a loop \ndepartment store while riding in a taxicab through Lincoln Park ","state":"done","pos":1,"cell_type":"code","type":"cell","end":1497192172080,"id":"c74e4d","kernel":"python2"}
{"exec_count":6,"start":1497192178159,"input":"import numpy as np","state":"done","pos":6,"cell_type":"code","type":"cell","end":1497192178162,"id":"882e85","kernel":"python2"}
{"exec_count":7,"start":1497192178659,"input":"oco=dict.values()\noco.sort()\noco.reverse()\nX=np.array(range(len(oco)))+1\nY=np.array(oco)","state":"done","pos":7,"cell_type":"code","type":"cell","end":1497192178661,"id":"56ce50","kernel":"python2"}
{"output":{"0":{"ename":"UnicodeDecodeError","evalue":"'ascii' codec can't decode byte 0xc3 in position 5: ordinal not in range(128)","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mUnicodeDecodeError\u001b[0m                        Traceback (most recent call last)","\u001b[0;32m<ipython-input-10-beabee0d2965>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgca\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlogx\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mlogy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_title\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Frequência Hemingway'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Give the plot a main title\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_xlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'palavras'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Set text for the x axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_ylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Frequência'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m# Set text for y axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/sage/sage-7.6/local/lib/python2.7/site-packages/matplotlib/axes/_axes.py\u001b[0m in \u001b[0;36mset_title\u001b[0;34m(self, label, fontdict, loc, **kwargs)\u001b[0m\n\u001b[1;32m    170\u001b[0m             \u001b[0;34m'verticalalignment'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m'baseline'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    171\u001b[0m             'horizontalalignment': loc.lower()}\n\u001b[0;32m--> 172\u001b[0;31m         \u001b[0mtitle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    173\u001b[0m         \u001b[0mtitle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdefault\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    174\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mfontdict\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/sage/sage-7.6/local/lib/python2.7/site-packages/matplotlib/text.py\u001b[0m in \u001b[0;36mset_text\u001b[0;34m(self, s)\u001b[0m\n\u001b[1;32m   1204\u001b[0m         \u001b[0mACCEPTS\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstring\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0manything\u001b[0m \u001b[0mprintable\u001b[0m \u001b[0;32mwith\u001b[0m \u001b[0;34m'%s'\u001b[0m \u001b[0mconversion\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1205\u001b[0m         \"\"\"\n\u001b[0;32m-> 1206\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_text\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'%s'\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1207\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstale\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1208\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mUnicodeDecodeError\u001b[0m: 'ascii' codec can't decode byte 0xc3 in position 5: ordinal not in range(128)"]},"1":{"data":{"image/png":"1d4b53887f439cbfc72915394cde4a576e8bc20e"}}},"exec_count":10,"start":1497192180080,"input":"logx=np.log(X)\nlogy=np.log(Y)\nfig = plt.figure(figsize=(10, 10)) # define área do plot \nax = fig.gca() # define eixo               \nx=fig.gca()\nplt.plot(logx,logy)\nax.set_title('Frequência Hemingway') # Give the plot a main title\nax.set_xlabel('palavras') # Set text for the x axis\nax.set_ylabel('Frequência')# Set text for y axis","state":"done","pos":10,"cell_type":"code","type":"cell","end":1497192180367,"id":"4b4b73","kernel":"python2"}
{"output":{"0":{"data":{"text/html":"<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Série</th>\n      <th>Geração</th>\n      <th>Temporada</th>\n      <th>Primeiro Episódio</th>\n      <th>Último Episódio</th>\n      <th>Região</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Série Original</td>\n      <td>Primeira</td>\n      <td>Liga Índigo</td>\n      <td>000</td>\n      <td>083</td>\n      <td>Kanto</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Série Original</td>\n      <td>Primeira</td>\n      <td>Aventuras na Ilha Laranja</td>\n      <td>084</td>\n      <td>118</td>\n      <td>Ilhas Laranjas</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Séria Original</td>\n      <td>Segunda</td>\n      <td>A Jornada de Johto</td>\n      <td>119</td>\n      <td>159</td>\n      <td>Johyo</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Séria Original</td>\n      <td>Segunda</td>\n      <td>Campeões da Liga de Jhoto</td>\n      <td>160</td>\n      <td>211</td>\n      <td>Johyo</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Séria Original</td>\n      <td>Segunda</td>\n      <td>Master Quest</td>\n      <td>212</td>\n      <td>276</td>\n      <td>Johyo</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Geração Avançada</td>\n      <td>Terçeira</td>\n      <td>Pokémon: Avançado</td>\n      <td>277</td>\n      <td>316</td>\n      <td>Hoenn</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Geração Avançada</td>\n      <td>Terçeira</td>\n      <td>Desafio Avançado</td>\n      <td>317</td>\n      <td>368</td>\n      <td>Hoenn</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Geração Avançada</td>\n      <td>Terçeira</td>\n      <td>Batalha Avançada</td>\n      <td>369</td>\n      <td>421</td>\n      <td>Hoenn</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Geração Avançada</td>\n      <td>Terçeira</td>\n      <td>Batalha da Fronteira</td>\n      <td>422</td>\n      <td>468</td>\n      <td>Kanto</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Diamante e Pérola</td>\n      <td>Qarta</td>\n      <td>Diamante e Pérola</td>\n      <td>469</td>\n      <td>520</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Diamante e Pérola</td>\n      <td>Qarta</td>\n      <td>Batalha Dimensional</td>\n      <td>521</td>\n      <td>572</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Diamante e Pérola</td>\n      <td>Qarta</td>\n      <td>Batalha Glácticas</td>\n      <td>573</td>\n      <td>625</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Diamante e Pérola</td>\n      <td>Qarta</td>\n      <td>Vencedores da Liga Sinnoh</td>\n      <td>626</td>\n      <td>659</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Preto e Branco</td>\n      <td>Quinta</td>\n      <td>Preto e Branco</td>\n      <td>660</td>\n      <td>707</td>\n      <td>Unova</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Preto e Branco</td>\n      <td>Quinta</td>\n      <td>Destinos Rivais</td>\n      <td>708</td>\n      <td>756</td>\n      <td>Unova</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Preto e Branco</td>\n      <td>Quinta</td>\n      <td>Aventuras em Unova (e Mais Além)</td>\n      <td>757</td>\n      <td>803</td>\n      <td>Unova</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>XY</td>\n      <td>Sexta</td>\n      <td>A Série XY</td>\n      <td>804</td>\n      <td>852</td>\n      <td>Kalos</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>XY</td>\n      <td>Sexta</td>\n      <td>Kalos Quest</td>\n      <td>853</td>\n      <td>897</td>\n      <td>Kalos</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>XY</td>\n      <td>Sexta</td>\n      <td>XY e Z</td>\n      <td>898</td>\n      <td>946</td>\n      <td>Kalos</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Sun and Moon</td>\n      <td>Sétima</td>\n      <td>Sun and Moon</td>\n      <td>947</td>\n      <td>--</td>\n      <td>Alola</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":17}},"exec_count":17,"start":1497192205334,"input":"dict=[{'Série':'Série Original' , 'Geração':'Primeira' , 'Temporada':'Liga Índigo', 'Primeiro Episódio':'000' , 'Último Episódio':'083', 'Região':'Kanto'},\n      {'Série': 'Série Original' , 'Geração':'Primeira' , 'Temporada':'Aventuras na Ilha Laranja' , 'Primeiro Episódio':'084' , 'Último Episódio':'118' , 'Região':'Ilhas Laranjas'},\n     {'Série':'Séria Original' , 'Geração':'Segunda' , 'Temporada':'A Jornada de Johto' , 'Primeiro Episódio':'119' , 'Último Episódio':'159' , 'Região':'Johyo'},\n     {'Série':'Séria Original' , 'Geração':'Segunda' , 'Temporada':'Campeões da Liga de Jhoto' , 'Primeiro Episódio':'160' , 'Último Episódio':'211' , 'Região':'Johyo'},\n     {'Série':'Séria Original' , 'Geração':'Segunda' , 'Temporada':'Master Quest' , 'Primeiro Episódio':'212' , 'Último Episódio':'276' , 'Região':'Johyo'},\n     {'Série':'Geração Avançada' , 'Geração':'Terçeira' , 'Temporada':'Pokémon: Avançado' , 'Primeiro Episódio':'277' , 'Último Episódio':'316' , 'Região':'Hoenn'},\n     {'Série':'Geração Avançada' , 'Geração':'Terçeira' , 'Temporada':'Desafio Avançado' , 'Primeiro Episódio':'317' , 'Último Episódio':'368' , 'Região':'Hoenn'},\n     {'Série':'Geração Avançada' , 'Geração':'Terçeira' , 'Temporada':'Batalha Avançada' , 'Primeiro Episódio':'369' , 'Último Episódio':'421' , 'Região':'Hoenn'},\n     {'Série':'Geração Avançada' , 'Geração':'Terçeira' , 'Temporada':'Batalha da Fronteira' , 'Primeiro Episódio':'422' , 'Último Episódio':'468' , 'Região':'Kanto'},\n     {'Série':'Diamante e Pérola' , 'Geração':'Qarta' , 'Temporada':'Diamante e Pérola' , 'Primeiro Episódio':'469' , 'Último Episódio':'520' , 'Região':'Sinnoh'},\n     {'Série':'Diamante e Pérola' , 'Geração':'Qarta' , 'Temporada':'Batalha Dimensional' , 'Primeiro Episódio':'521' , 'Último Episódio':'572' , 'Região':'Sinnoh'},\n     {'Série':'Diamante e Pérola' , 'Geração':'Qarta' , 'Temporada':'Batalha Glácticas' , 'Primeiro Episódio':'573' , 'Último Episódio':'625' , 'Região':'Sinnoh'},\n     {'Série':'Diamante e Pérola' , 'Geração':'Qarta' , 'Temporada':'Vencedores da Liga Sinnoh' , 'Primeiro Episódio':'626' , 'Último Episódio':'659' , 'Região':'Sinnoh'},\n     {'Série':'Preto e Branco' , 'Geração':'Quinta' , 'Temporada':'Preto e Branco' , 'Primeiro Episódio':'660' , 'Último Episódio':'707' , 'Região':'Unova'},\n     {'Série':'Preto e Branco' , 'Geração':'Quinta' , 'Temporada':'Destinos Rivais' , 'Primeiro Episódio':'708' , 'Último Episódio':'756' , 'Região':'Unova'},\n     {'Série':'Preto e Branco' , 'Geração':'Quinta' , 'Temporada':'Aventuras em Unova (e Mais Além)' , 'Primeiro Episódio':'757' , 'Último Episódio':'803' , 'Região':'Unova'},\n     {'Série':'XY' , 'Geração':'Sexta' , 'Temporada':'A Série XY' , 'Primeiro Episódio':'804' , 'Último Episódio':'852' , 'Região':'Kalos'},\n     {'Série':'XY' , 'Geração':'Sexta' , 'Temporada':'Kalos Quest' , 'Primeiro Episódio':'853' , 'Último Episódio':'897' , 'Região':'Kalos'},\n     {'Série':'XY' , 'Geração':'Sexta' , 'Temporada':'XY e Z' , 'Primeiro Episódio':'898' , 'Último Episódio':'946' , 'Região':'Kalos'},\n     {'Série':'Sun and Moon' , 'Geração':'Sétima' , 'Temporada':'Sun and Moon' , 'Primeiro Episódio':'947' , 'Último Episódio':'--' , 'Região':'Alola'}]\ndf=pd.DataFrame(dict)\ndf[['Série' , 'Geração' , 'Temporada' , 'Primeiro Episódio' , 'Último Episódio', 'Região']]","state":"done","pos":19,"cell_type":"code","type":"cell","end":1497192205424,"id":"4e2561","kernel":"python2"}
{"exec_count":3,"start":1497192174549,"input":"texto=file.readlines()","state":"done","pos":3,"cell_type":"code","type":"cell","end":1497192174567,"id":"ac0c13","kernel":"python2"}
{"output":{"0":{"data":{"text/html":"<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Diferença</th>\n      <th>Temporada</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>84</td>\n      <td>Liga Índigo</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>34</td>\n      <td>Aventuras na Ilha Laranja</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>40</td>\n      <td>A Jornada de Johto</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>51</td>\n      <td>Campeões da Liga de Jhoto</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>64</td>\n      <td>Master Quest</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>39</td>\n      <td>Pokémon: Avançado</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>51</td>\n      <td>Desafio Avançado</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>52</td>\n      <td>Batalha Avançada</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>46</td>\n      <td>Batalha da Fronteira</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>51</td>\n      <td>Diamante e Pérola</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>51</td>\n      <td>Batalha Dimensional</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>52</td>\n      <td>Batalha Glácticas</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>33</td>\n      <td>Vencedores da Liga Sinnoh</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>47</td>\n      <td>Preto e Branco</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>48</td>\n      <td>Destinos Rivais</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>46</td>\n      <td>Aventuras em Unova (e Mais Além)</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>48</td>\n      <td>A Série XY</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>44</td>\n      <td>Kalos Quest</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>48</td>\n      <td>Kalos Quest</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>1</td>\n      <td>Sun and Moon</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":18}},"exec_count":18,"start":1497192206869,"input":"dict1=[{'Diferença':int(84),'Temporada':'Liga Índigo'},{'Diferença':int(34),'Temporada':'Aventuras na Ilha Laranja'},{'Diferença':int(40),'Temporada':'A Jornada de Johto'},{'Diferença':int(51),'Temporada':'Campeões da Liga de Jhoto'},{'Diferença':int(64),'Temporada':'Master Quest'},{'Diferença':int(39),'Temporada':'Pokémon: Avançado'},\n       {'Diferença':int(51),'Temporada':'Desafio Avançado'},{'Diferença':int(52),'Temporada':'Batalha Avançada'},{'Diferença':int(46),'Temporada':'Batalha da Fronteira'},{'Diferença':int(51),'Temporada':'Diamante e Pérola'},{'Diferença':int(51),'Temporada':'Batalha Dimensional'},{'Diferença':int(52),'Temporada':'Batalha Glácticas'},\n       {'Diferença':int(33),'Temporada':'Vencedores da Liga Sinnoh'},{'Diferença':int(47),'Temporada':'Preto e Branco'},{'Diferença':int(48),'Temporada':'Destinos Rivais'},{'Diferença':int(46),'Temporada':'Aventuras em Unova (e Mais Além)'},{'Diferença':int(48),'Temporada':'A Série XY'},{'Diferença':int(44),'Temporada':'Kalos Quest'},\n       {'Diferença':int(48),'Temporada':'Kalos Quest'},{'Diferença':int(1),'Temporada':'Sun and Moon'}]\ndf1=pd.DataFrame(dict1)\ndf1[['Diferença','Temporada']]","state":"done","pos":20,"cell_type":"code","type":"cell","end":1497192206891,"id":"d5737c","kernel":"python2"}
{"output":{"0":{"data":{"text/html":"<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>symboling</th>\n      <th>wheel-base</th>\n      <th>length</th>\n      <th>width</th>\n      <th>height</th>\n      <th>curb-weight</th>\n      <th>engine-size</th>\n      <th>bore</th>\n      <th>stroke</th>\n      <th>compression-ratio</th>\n      <th>horsepower</th>\n      <th>peak-rpm</th>\n      <th>city-mpg</th>\n      <th>highway-mpg</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>0.794872</td>\n      <td>98.896410</td>\n      <td>174.256923</td>\n      <td>65.886154</td>\n      <td>53.861538</td>\n      <td>2559.000000</td>\n      <td>127.938462</td>\n      <td>3.329385</td>\n      <td>3.250308</td>\n      <td>10.194974</td>\n      <td>103.271795</td>\n      <td>5099.487179</td>\n      <td>25.374359</td>\n      <td>30.841026</td>\n      <td>13248.015385</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.230612</td>\n      <td>6.132038</td>\n      <td>12.476443</td>\n      <td>2.132484</td>\n      <td>2.396778</td>\n      <td>524.715799</td>\n      <td>41.433916</td>\n      <td>0.271866</td>\n      <td>0.314115</td>\n      <td>4.062109</td>\n      <td>37.869730</td>\n      <td>468.271381</td>\n      <td>6.401382</td>\n      <td>6.829315</td>\n      <td>8056.330093</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>-2.000000</td>\n      <td>86.600000</td>\n      <td>141.100000</td>\n      <td>60.300000</td>\n      <td>47.800000</td>\n      <td>1488.000000</td>\n      <td>61.000000</td>\n      <td>2.540000</td>\n      <td>2.070000</td>\n      <td>7.000000</td>\n      <td>48.000000</td>\n      <td>4150.000000</td>\n      <td>13.000000</td>\n      <td>16.000000</td>\n      <td>5118.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>0.000000</td>\n      <td>94.500000</td>\n      <td>166.300000</td>\n      <td>64.050000</td>\n      <td>52.000000</td>\n      <td>2145.000000</td>\n      <td>98.000000</td>\n      <td>3.150000</td>\n      <td>3.110000</td>\n      <td>8.500000</td>\n      <td>70.000000</td>\n      <td>4800.000000</td>\n      <td>19.500000</td>\n      <td>25.000000</td>\n      <td>7756.500000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1.000000</td>\n      <td>97.000000</td>\n      <td>173.200000</td>\n      <td>65.400000</td>\n      <td>54.100000</td>\n      <td>2414.000000</td>\n      <td>120.000000</td>\n      <td>3.310000</td>\n      <td>3.290000</td>\n      <td>9.000000</td>\n      <td>95.000000</td>\n      <td>5100.000000</td>\n      <td>25.000000</td>\n      <td>30.000000</td>\n      <td>10245.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2.000000</td>\n      <td>102.400000</td>\n      <td>184.050000</td>\n      <td>66.900000</td>\n      <td>55.650000</td>\n      <td>2943.500000</td>\n      <td>145.500000</td>\n      <td>3.590000</td>\n      <td>3.410000</td>\n      <td>9.400000</td>\n      <td>116.000000</td>\n      <td>5500.000000</td>\n      <td>30.000000</td>\n      <td>35.000000</td>\n      <td>16509.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>3.000000</td>\n      <td>120.900000</td>\n      <td>208.100000</td>\n      <td>72.000000</td>\n      <td>59.800000</td>\n      <td>4066.000000</td>\n      <td>326.000000</td>\n      <td>3.940000</td>\n      <td>4.170000</td>\n      <td>23.000000</td>\n      <td>262.000000</td>\n      <td>6600.000000</td>\n      <td>49.000000</td>\n      <td>54.000000</td>\n      <td>45400.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":13}},"exec_count":13,"start":1497192192963,"input":"auto_prices.describe()","state":"done","pos":14,"cell_type":"code","type":"cell","end":1497192193027,"id":"10bdfd","kernel":"python2"}
{"type":"cell","id":"879e2c","pos":17,"input":"## Exercício 3\n- Faça um gráfico de Barras com os dados contidos no DataFrame do exercício dos epsódios do Pokemon. Represente o número de episódios para cada Temporada. Neste exercicio o gráfico deve conter legenda, titulo, nome dos eixos e cada barra deve conter uma cor diferente.","cell_type":"markdown"}
{"exec_count":4,"start":1497192176066,"input":"dict={}\nfor line in texto:\n    for word in line.split():\n        if word in dict:\n            dict[word]=dict[word]+1\n        else:\n            dict[word]=1","state":"done","pos":4,"cell_type":"code","type":"cell","end":1497192176070,"id":"0b764b","kernel":"python2"}
{"output":{"0":{"data":{"text/html":"<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Diferença</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>20.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>46.500000</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>15.174424</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>43.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>48.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>51.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>84.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":20}},"exec_count":20,"start":1497192209360,"input":"df1.describe()","state":"done","pos":22,"cell_type":"code","type":"cell","end":1497192209381,"id":"c86416","kernel":"python2"}
{"output":{"0":{"data":{"text/html":"<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>symboling</th>\n      <th>normalized-losses</th>\n      <th>make</th>\n      <th>fuel-type</th>\n      <th>aspiration</th>\n      <th>num-of-doors</th>\n      <th>body-style</th>\n      <th>drive-wheels</th>\n      <th>engine-location</th>\n      <th>wheel-base</th>\n      <th>...</th>\n      <th>engine-size</th>\n      <th>fuel-system</th>\n      <th>bore</th>\n      <th>stroke</th>\n      <th>compression-ratio</th>\n      <th>horsepower</th>\n      <th>peak-rpm</th>\n      <th>city-mpg</th>\n      <th>highway-mpg</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3</td>\n      <td>?</td>\n      <td>alfa-romero</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>two</td>\n      <td>convertible</td>\n      <td>rwd</td>\n      <td>front</td>\n      <td>88.6</td>\n      <td>...</td>\n      <td>130</td>\n      <td>mpfi</td>\n      <td>3.47</td>\n      <td>2.68</td>\n      <td>9.0</td>\n      <td>111</td>\n      <td>5000</td>\n      <td>21</td>\n      <td>27</td>\n      <td>13495</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3</td>\n      <td>?</td>\n      <td>alfa-romero</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>two</td>\n      <td>convertible</td>\n      <td>rwd</td>\n      <td>front</td>\n      <td>88.6</td>\n      <td>...</td>\n      <td>130</td>\n      <td>mpfi</td>\n      <td>3.47</td>\n      <td>2.68</td>\n      <td>9.0</td>\n      <td>111</td>\n      <td>5000</td>\n      <td>21</td>\n      <td>27</td>\n      <td>16500</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>?</td>\n      <td>alfa-romero</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>two</td>\n      <td>hatchback</td>\n      <td>rwd</td>\n      <td>front</td>\n      <td>94.5</td>\n      <td>...</td>\n      <td>152</td>\n      <td>mpfi</td>\n      <td>2.68</td>\n      <td>3.47</td>\n      <td>9.0</td>\n      <td>154</td>\n      <td>5000</td>\n      <td>19</td>\n      <td>26</td>\n      <td>16500</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>164</td>\n      <td>audi</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>four</td>\n      <td>sedan</td>\n      <td>fwd</td>\n      <td>front</td>\n      <td>99.8</td>\n      <td>...</td>\n      <td>109</td>\n      <td>mpfi</td>\n      <td>3.19</td>\n      <td>3.40</td>\n      <td>10.0</td>\n      <td>102</td>\n      <td>5500</td>\n      <td>24</td>\n      <td>30</td>\n      <td>13950</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>164</td>\n      <td>audi</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>four</td>\n      <td>sedan</td>\n      <td>4wd</td>\n      <td>front</td>\n      <td>99.4</td>\n      <td>...</td>\n      <td>136</td>\n      <td>mpfi</td>\n      <td>3.19</td>\n      <td>3.40</td>\n      <td>8.0</td>\n      <td>115</td>\n      <td>5500</td>\n      <td>18</td>\n      <td>22</td>\n      <td>17450</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 26 columns</p>\n</div>"},"exec_count":12}},"exec_count":12,"start":1497192191463,"input":"auto_prices.head()","state":"done","pos":13,"cell_type":"code","type":"cell","end":1497192191509,"id":"f38b78","kernel":"python2"}
{"exec_count":11,"start":1497192189979,"input":"def read_auto_data(fileName = \"Automobile price data.csv\"):\n    'Function to load the auto price data set from a .csv file' \n    import pandas as pd\n    import numpy as np\n\n    ## Read the .csv file with the pandas read_csv method\n    auto_prices = pd.read_csv(fileName)\n    \n    ## Remove rows with missing values, accounting for mising values coded as '?'\n    cols = ['price', 'bore', 'stroke', \n          'horsepower', 'peak-rpm']\n    for column in cols:\n        auto_prices.loc[auto_prices[column] == '?', column] = np.nan\n    auto_prices.dropna(axis = 0, inplace = True)\n\n    ## Convert some columns to numeric values\n    for column in cols:\n        auto_prices[column] = pd.to_numeric(auto_prices[column])\n#    auto_prices[cols] = auto_prices[cols].as_type(int64)\n        \n    return auto_prices\nauto_prices = read_auto_data()\n","state":"done","pos":12,"cell_type":"code","type":"cell","end":1497192190668,"id":"2871aa","kernel":"python2"}
{"type":"cell","id":"0c811c","pos":11,"input":"### Exercício 2\n###### Agora que você já viu como criar alguns plots  simples, é sua vez de realizar uma visualização. Crie o seguinte gráfico de dispersão:\n\n- Traçar o tamanho do motor contra o preço.\n- Defina o tamanho da figura como 8 x 8.\n- Forneça um título significativo, rótulo do eixo x e rótulo do eixo y.","cell_type":"markdown"}
{"exec_count":16,"start":1497192204259,"input":"import pandas as pd","state":"done","pos":18,"cell_type":"code","type":"cell","end":1497192204263,"id":"848bad","kernel":"python2"}
{"output":{"0":{"ename":"UnicodeDecodeError","evalue":"'ascii' codec can't decode byte 0xc3 in position 3: ordinal not in range(128)","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mUnicodeDecodeError\u001b[0m                        Traceback (most recent call last)","\u001b[0;32m<ipython-input-21-c76d82fa5eef>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgca\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# define eixo\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mdf1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'Temporada'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'Diferença'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m## linha é o formato padrão\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_title\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Pokémon'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Título Principal\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_xlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Temporadas'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Eixo x\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_ylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Número de Epsódios'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m# Eixo y\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/sage/sage-7.6/local/lib/python2.7/site-packages/matplotlib/axes/_axes.py\u001b[0m in \u001b[0;36mset_title\u001b[0;34m(self, label, fontdict, loc, **kwargs)\u001b[0m\n\u001b[1;32m    170\u001b[0m             \u001b[0;34m'verticalalignment'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m'baseline'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    171\u001b[0m             'horizontalalignment': loc.lower()}\n\u001b[0;32m--> 172\u001b[0;31m         \u001b[0mtitle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    173\u001b[0m         \u001b[0mtitle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdefault\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    174\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mfontdict\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/sage/sage-7.6/local/lib/python2.7/site-packages/matplotlib/text.py\u001b[0m in \u001b[0;36mset_text\u001b[0;34m(self, s)\u001b[0m\n\u001b[1;32m   1204\u001b[0m         \u001b[0mACCEPTS\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstring\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0manything\u001b[0m \u001b[0mprintable\u001b[0m \u001b[0;32mwith\u001b[0m \u001b[0;34m'%s'\u001b[0m \u001b[0mconversion\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1205\u001b[0m         \"\"\"\n\u001b[0;32m-> 1206\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_text\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'%s'\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1207\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstale\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1208\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mUnicodeDecodeError\u001b[0m: 'ascii' codec can't decode byte 0xc3 in position 3: ordinal not in range(128)"]},"1":{"data":{"image/png":"2cb3adad4bb60ae7ed2babc8bed675f8a1aa54a3"}}},"exec_count":21,"start":1497192210367,"input":"fig = plt.figure(figsize=(10, 10)) # define área do plot \nax = fig.gca() # define eixo               \ndf1.plot(x = 'Temporada', y = 'Diferença', ax = ax) ## linha é o formato padrão\nax.set_title('Pokémon') # Título Principal\nax.set_xlabel('Temporadas') # Eixo x\nax.set_ylabel('Número de Epsódios')# Eixo y","state":"done","pos":23,"cell_type":"code","type":"cell","end":1497192210660,"id":"c64950","kernel":"python2"}
{"type":"cell","id":"431e4d","pos":0,"input":"### Exercício1\n- A “classificação” de uma palavra é a sua posição em uma lista de palavras classificadas por frequência: a palavra mais comum tem a classificação 1, a segunda mais comum é 2 etc.\n- A lei de Zipf descreve a relação entre classificações e frequências das palavras em linguagens naturais (http://en.wikipedia.org/wiki/Zipf’s_law). Ela prevê especificamente que a frequência, $f$, da palavra com classificação $ r $ é:\n\n  $$ f = cr−s $$ \n- onde s e c são parâmetros que dependem do idioma e do texto. Se você tomar o logaritmo de ambos os lados desta equação, obtemos:\n\n  $$\\log f = \\log c − s\\log r$$\n  \n- Se você traçar o log de f contra o log de r, terá uma linha reta com uma elevação -s e interceptar o log de c.\n\n\n**- Escreva um programa que leia um texto em um arquivo, conte as frequências das palavras e exiba uma linha para cada palavra, em ordem descendente da frequência, com log de f e log de r. Use o programa gráfico de sua escolha para traçar os resultados e verifique se formam uma linha reta. Você pode estimar o valor de s?**","cell_type":"markdown"}
{"output":{"0":{"ename":"UnicodeDecodeError","evalue":"'ascii' codec can't decode byte 0xc3 in position 19: ordinal not in range(128)","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mUnicodeDecodeError\u001b[0m                        Traceback (most recent call last)","\u001b[0;32m<ipython-input-15-335f291d29c7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgca\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# define axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mauto_prices\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkind\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'scatter'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'engine-size'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'price'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_title\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Scatter plot de preço vs tamanho do motor'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Give the plot a main title\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_xlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'tamanho do motor'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Set text for the x axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_ylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Preço (US$)'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m# Set text for y axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/sage/sage-7.6/local/lib/python2.7/site-packages/matplotlib/axes/_axes.py\u001b[0m in \u001b[0;36mset_title\u001b[0;34m(self, label, fontdict, loc, **kwargs)\u001b[0m\n\u001b[1;32m    170\u001b[0m             \u001b[0;34m'verticalalignment'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m'baseline'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    171\u001b[0m             'horizontalalignment': loc.lower()}\n\u001b[0;32m--> 172\u001b[0;31m         \u001b[0mtitle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    173\u001b[0m         \u001b[0mtitle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdefault\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    174\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mfontdict\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/sage/sage-7.6/local/lib/python2.7/site-packages/matplotlib/text.py\u001b[0m in \u001b[0;36mset_text\u001b[0;34m(self, s)\u001b[0m\n\u001b[1;32m   1204\u001b[0m         \u001b[0mACCEPTS\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstring\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0manything\u001b[0m \u001b[0mprintable\u001b[0m \u001b[0;32mwith\u001b[0m \u001b[0;34m'%s'\u001b[0m \u001b[0mconversion\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1205\u001b[0m         \"\"\"\n\u001b[0;32m-> 1206\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_text\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'%s'\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1207\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstale\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1208\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mUnicodeDecodeError\u001b[0m: 'ascii' codec can't decode byte 0xc3 in position 19: ordinal not in range(128)"]},"1":{"data":{"image/png":"dc9830b2eff2210f76e248500c5e0a165d5897b6"}}},"exec_count":15,"start":1497192197062,"input":"import matplotlib.pyplot as plt\nfig = plt.figure(figsize=(8, 8)) # define plot area\nax = fig.gca() # define axis\nauto_prices.plot(kind = 'scatter', x = 'engine-size', y = 'price', ax = ax)\nax.set_title('Scatter plot de preço vs tamanho do motor') # Give the plot a main title\nax.set_xlabel('tamanho do motor') # Set text for the x axis\nax.set_ylabel('Preço (US$)')# Set text for y axis","state":"done","pos":16,"cell_type":"code","type":"cell","end":1497192197312,"id":"842b11","kernel":"python2"}
{"exec_count":2,"start":1497192173530,"input":"file=open(\"Hemingway.txt\",\"r\")","state":"done","pos":2,"cell_type":"code","type":"cell","end":1497192173533,"id":"d5d2c9","kernel":"python2"}
{"output":{"0":{"ename":"UnicodeDecodeError","evalue":"'ascii' codec can't decode byte 0xc3 in position 3: ordinal not in range(128)","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mUnicodeDecodeError\u001b[0m                        Traceback (most recent call last)","\u001b[0;32m<ipython-input-22-afad881bdf4c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgca\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# define axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mdf1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'Temporada'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'Diferença'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Use the plot.bar method on the counts data frame\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_title\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Pokémon'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Give the plot a main title\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_xlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Temporadas'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Set text for the x axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_ylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Número de Epsódios'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m# Set text for y axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/sage/sage-7.6/local/lib/python2.7/site-packages/matplotlib/axes/_axes.py\u001b[0m in \u001b[0;36mset_title\u001b[0;34m(self, label, fontdict, loc, **kwargs)\u001b[0m\n\u001b[1;32m    170\u001b[0m             \u001b[0;34m'verticalalignment'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m'baseline'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    171\u001b[0m             'horizontalalignment': loc.lower()}\n\u001b[0;32m--> 172\u001b[0;31m         \u001b[0mtitle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    173\u001b[0m         \u001b[0mtitle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdefault\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    174\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mfontdict\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/sage/sage-7.6/local/lib/python2.7/site-packages/matplotlib/text.py\u001b[0m in \u001b[0;36mset_text\u001b[0;34m(self, s)\u001b[0m\n\u001b[1;32m   1204\u001b[0m         \u001b[0mACCEPTS\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstring\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0manything\u001b[0m \u001b[0mprintable\u001b[0m \u001b[0;32mwith\u001b[0m \u001b[0;34m'%s'\u001b[0m \u001b[0mconversion\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1205\u001b[0m         \"\"\"\n\u001b[0;32m-> 1206\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_text\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'%s'\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1207\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstale\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1208\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mUnicodeDecodeError\u001b[0m: 'ascii' codec can't decode byte 0xc3 in position 3: ordinal not in range(128)"]},"1":{"data":{"image/png":"07b0a5682c70dda822499c1e53c51d693413fddd"}}},"exec_count":22,"start":1497192211832,"input":"fig = plt.figure(figsize=(10,10)) # define plot area\nax = fig.gca() # define axis    \ndf1.plot.bar(x = 'Temporada', y='Diferença', ax = ax) # Use the plot.bar method on the counts data frame\nax.set_title('Pokémon') # Give the plot a main title\nax.set_xlabel('Temporadas') # Set text for the x axis\nax.set_ylabel('Número de Epsódios')# Set text for y axis","state":"done","pos":24,"cell_type":"code","type":"cell","end":1497192212362,"id":"eae025","kernel":"python2"}
{"exec_count":19,"start":1497192208359,"input":"import matplotlib.pyplot as plt","state":"done","pos":21,"cell_type":"code","type":"cell","end":1497192208361,"id":"2d612b","kernel":"python2"}
{"output":{"0":{"data":{"text/plain":"{'A': 2,\n 'After': 3,\n 'America': 1,\n 'As': 1,\n 'Before': 1,\n 'Chicago': 1,\n 'Duomo': 1,\n 'Ernest': 1,\n 'Genoa': 1,\n 'He': 4,\n 'Hemingway': 1,\n 'It': 3,\n 'Italians': 1,\n 'Lifteen': 1,\n 'Lincoln': 1,\n 'Living': 1,\n 'Luz': 11,\n 'Milan': 1,\n 'Milan,': 1,\n 'New': 1,\n 'On': 1,\n 'One': 1,\n 'Only': 1,\n 'Padua': 2,\n 'Park': 1,\n 'Pordonone': 1,\n 'She': 5,\n 'Short': 1,\n 'States': 2,\n 'Story': 1,\n 'The': 2,\n 'There': 2,\n 'They': 5,\n 'Very': 1,\n 'When': 2,\n 'York': 1,\n 'a': 16,\n 'able': 1,\n 'about': 8,\n 'absolutely': 2,\n 'affair': 1,\n 'after': 2,\n 'agreed': 1,\n 'all': 4,\n 'along': 2,\n 'always': 1,\n 'an': 1,\n 'anaesthetic': 1,\n 'and': 30,\n 'answer': 1,\n 'any': 1,\n 'anyone': 1,\n 'anything': 1,\n 'arditi': 1,\n 'armistice': 2,\n 'as': 2,\n 'at': 3,\n 'back': 3,\n 'balcony': 1,\n 'banns': 1,\n 'battalion': 2,\n 'be': 5,\n 'bed': 3,\n 'been': 1,\n 'before': 1,\n 'being': 1,\n 'believed': 1,\n 'below': 1,\n 'best': 1,\n 'birth': 1,\n 'blab': 1,\n 'boat': 1,\n 'bottles': 1,\n 'boy': 2,\n 'bunch': 1,\n 'but': 5,\n 'by': 2,\n 'bye': 1,\n 'came': 2,\n 'career': 1,\n 'carried': 1,\n 'certificates': 1,\n 'chimney': 1,\n 'come': 3,\n 'contracted': 1,\n 'cool': 1,\n 'could': 4,\n 'crutches': 1,\n 'dark': 1,\n 'dates': 1,\n 'day': 1,\n 'department': 1,\n 'did': 2,\n 'dim': 1,\n 'down': 1,\n 'drink': 1,\n 'during': 1,\n 'duty': 1,\n 'enema': 1,\n 'enough': 1,\n 'evening': 1,\n 'everyone': 1,\n 'expected': 1,\n 'felt': 2,\n 'few': 1,\n 'finally': 1,\n 'finished': 1,\n 'for': 4,\n 'forgive': 1,\n 'fresh': 1,\n 'friend': 1,\n 'friends': 1,\n 'from': 4,\n 'front': 2,\n 'get': 5,\n 'girl': 3,\n 'glad': 1,\n 'go': 1,\n 'gonorrhea': 1,\n 'good': 1,\n 'good-': 1,\n 'good-bye': 2,\n 'got': 4,\n 'grateful': 1,\n 'great': 1,\n 'had': 6,\n 'halls': 1,\n 'have': 2,\n 'he': 16,\n 'hear': 1,\n 'her': 6,\n 'him': 9,\n 'himself': 1,\n 'his': 2,\n 'holding': 1,\n 'home': 3,\n 'hoped': 1,\n 'hospital': 2,\n 'hot': 2,\n 'how': 3,\n 'impossible': 1,\n 'in': 15,\n 'into': 1,\n 'it': 10,\n 'job': 3,\n 'joke': 1,\n 'kissed': 1,\n 'knew': 3,\n 'know': 1,\n 'known': 1,\n 'let': 1,\n 'letter': 1,\n 'letters': 1,\n 'like': 1,\n 'liked': 1,\n 'lonely': 1,\n 'look': 1,\n 'loop': 1,\n 'lose': 1,\n 'love': 2,\n 'loved': 2,\n 'made': 1,\n 'major': 2,\n 'make': 1,\n 'many': 1,\n 'married': 5,\n 'marry': 1,\n 'meet': 1,\n 'might': 2,\n 'missing': 1,\n 'months': 1,\n 'much': 1,\n 'muddy,': 1,\n 'neither': 1,\n 'never': 3,\n 'night': 2,\n 'night.': 1,\n 'not': 11,\n 'now': 1,\n 'of': 5,\n 'on': 7,\n 'once': 1,\n 'only': 3,\n 'onto': 1,\n 'open': 1,\n 'operated': 1,\n 'operating': 1,\n 'or': 3,\n 'other': 2,\n 'others': 1,\n 'out': 2,\n 'over': 1,\n 'patients': 1,\n 'people': 1,\n 'prayed': 1,\n 'praying': 1,\n 'prepared': 1,\n 'probably': 1,\n 'quarrel.': 1,\n 'quarreled': 1,\n 'quartered': 1,\n 'quiet,': 1,\n 'rainy': 2,\n 'read': 1,\n 'realized': 1,\n 'riding': 1,\n 'roof': 1,\n 'sales': 1,\n 'sat': 1,\n 'say': 1,\n 'saying': 1,\n 'searchlights': 1,\n 'see': 1,\n 'she': 6,\n 'short': 1,\n 'should': 1,\n 'sick': 1,\n 'silly': 1,\n 'sky': 1,\n 'so': 4,\n 'some': 1,\n 'sorry': 1,\n 'sorted': 1,\n 'spring': 2,\n 'station': 1,\n 'stayed': 1,\n 'store': 1,\n 'straight': 1,\n 'swifts': 1,\n 'table': 1,\n 'take': 1,\n 'talky': 1,\n 'taxicab': 1,\n 'temperatures': 1,\n 'terrible': 1,\n 'that': 3,\n 'the': 37,\n 'theirs': 1,\n 'them': 5,\n 'there': 4,\n 'they': 13,\n 'though': 1,\n 'thought': 1,\n 'three': 1,\n 'through': 2,\n 'tight': 1,\n 'time': 4,\n 'to': 28,\n 'took': 1,\n 'top': 1,\n 'town': 3,\n 'train': 1,\n 'under': 1,\n 'understand': 1,\n 'understood': 1,\n 'unexpectedly': 1,\n 'until': 2,\n 'up': 2,\n 'used': 1,\n 'walked': 1,\n 'want': 1,\n 'wanted': 2,\n 'was': 11,\n 'went': 6,\n 'were': 7,\n 'while': 2,\n 'willing': 1,\n 'winter': 1,\n 'with': 2,\n 'without': 1,\n 'would': 6,\n 'wrote': 2}"},"exec_count":5}},"exec_count":5,"start":1497192177174,"input":"dict","state":"done","pos":5,"cell_type":"code","type":"cell","end":1497192177186,"id":"cdc724","kernel":"python2"}
{"type":"nbconvert","args":["--to","pdf"],"state":"done","start":1497192223552,"time":1497192228111}
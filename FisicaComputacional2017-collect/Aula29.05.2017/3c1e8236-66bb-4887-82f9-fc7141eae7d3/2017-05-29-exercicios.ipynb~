{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "#Exercicio 1\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import pandas as pd\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "file=open(\"poema.txt\",\"r\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "texto=file.readlines()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "dict={}\n",
    "for line in texto:\n",
    "    for word in line.split():\n",
    "        word2=word.upper()\n",
    "        word=word2.strip(\".,;!?\")\n",
    "        if word2 in dict:\n",
    "            dict[word2]=dict[word2]+1\n",
    "        else:\n",
    "            dict[word2]=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'\"A': 1,\n",
       " 'A': 3,\n",
       " 'ALGO': 1,\n",
       " 'ALGUMA,': 1,\n",
       " 'AMIG\\xe1VEIS,': 1,\n",
       " 'ASSUNTO.\\\\N': 1,\n",
       " 'BARATO;': 1,\n",
       " 'CAPA,': 1,\n",
       " 'COISA': 1,\n",
       " 'COMO': 1,\n",
       " 'COMPLEXA': 1,\n",
       " 'CRIADO.': 1,\n",
       " 'DAS': 1,\n",
       " 'DEIXE': 1,\n",
       " 'DO': 1,\n",
       " 'E': 3,\n",
       " 'E,': 1,\n",
       " 'EFICAZ': 1,\n",
       " 'EM': 5,\n",
       " 'ENCARADO': 1,\n",
       " 'ENCICLOP\\xe9DIA': 1,\n",
       " 'ENTRE': 1,\n",
       " 'ESQUECER': 1,\n",
       " 'FOI': 2,\n",
       " 'FRASE': 1,\n",
       " 'GAL\\xe1CTICA.': 1,\n",
       " 'GAL\\xe1XIAS': 1,\n",
       " 'GARRAFAIS': 1,\n",
       " 'GERAL,': 1,\n",
       " 'GRANDE': 1,\n",
       " 'GUIA': 1,\n",
       " 'HIP\\xf3TESE': 1,\n",
       " 'ID\\xe9IA.\\\\N': 1,\n",
       " 'INFINITAMENTE': 1,\n",
       " 'INVIS\\xedVEL': 1,\n",
       " 'IN\\xedCIO,': 1,\n",
       " 'IRRITOU': 1,\n",
       " 'ISSO': 1,\n",
       " 'JAMAIS,': 1,\n",
       " 'J\\xe1': 1,\n",
       " 'LER': 1,\n",
       " 'LETRAS': 1,\n",
       " 'LIGEIRAMENTE': 1,\n",
       " 'LUGAR,': 2,\n",
       " 'MAIS': 2,\n",
       " 'MOCHILEIRO': 1,\n",
       " 'MUITAS': 1,\n",
       " 'MUITO': 1,\n",
       " 'NA': 1,\n",
       " 'NO': 2,\n",
       " 'N\\xc3O': 1,\n",
       " 'O': 3,\n",
       " 'PARA': 2,\n",
       " 'PESSOAS': 1,\n",
       " 'POESIAS': 1,\n",
       " 'PRIMEIRO': 1,\n",
       " 'PROFUNDAMENTE': 1,\n",
       " 'P\\xc2NICO.': 1,\n",
       " 'P\\xe9SSIMA': 1,\n",
       " 'QUE,': 1,\n",
       " 'REMOVER': 1,\n",
       " 'SEGUNDO': 1,\n",
       " 'SIMPLES': 1,\n",
       " 'SUBSTITUIU': 1,\n",
       " 'TECNOLOGIA': 1,\n",
       " 'TORNAR': 1,\n",
       " 'TRAZ': 1,\n",
       " 'T\\xe3O': 1,\n",
       " 'UM': 1,\n",
       " 'UMA': 1,\n",
       " 'UNIVERSO': 1,\n",
       " 'VOC\\xea.\\\\N': 1,\n",
       " 'VOGON': 1,\n",
       " '\\xe9': 3}"
      ]
     },
     "execution_count": 8,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dict"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "teste=list(dict.values())\n",
    "teste.sort()\n",
    "teste.reverse()\n",
    "X=np.array(range(len(teste)))+1\n",
    "Y=np.array(teste)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n",
       "       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\n",
       "       35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\n",
       "       52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,\n",
       "       69, 70, 71, 72, 73, 74])"
      ]
     },
     "execution_count": 10,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([5, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1])"
      ]
     },
     "execution_count": 11,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x7f94bfd8c650>"
      ]
     },
     "execution_count": 12,
     "metadata": {
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": ""
     },
     "execution_count": 12,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(10,10)) # define plot area\n",
    "ax = fig.gca() # define axis    \n",
    "x = fig.gca() # define eixo               \n",
    "plt.plot(X,Y)\n",
    "ax.set_title('Poema qualquer') # Título Principal\n",
    "ax.set_xlabel('rank') # Eixo x\n",
    "ax.set_ylabel('Freq')# Eixo y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x7f94bfc70190>"
      ]
     },
     "execution_count": 13,
     "metadata": {
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": ""
     },
     "execution_count": 13,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logx=np.log(X)\n",
    "logy=np.log(Y)\n",
    "fig = plt.figure(figsize=(10,10)) # define plot area\n",
    "ax = fig.gca() # define axis    \n",
    "x = fig.gca() # define eixo               \n",
    "plt.plot(logx,logy)\n",
    "ax.set_title('Poema') # Título Principal\n",
    "ax.set_xlabel('rank') # Eixo x\n",
    "ax.set_ylabel('Freq')# Eixo y"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "\n",
    "exercicio do grafico de dispersao do matplotlib\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "def read_auto_data(fileName = \"Automobile price data.csv\"): \n",
    "    'Function to load the auto price data set from a .csv file' \n",
    "    import pandas as pd\n",
    "    import numpy as np\n",
    "\n",
    "    ## Read the .csv file with the pandas read_csv method\n",
    "    auto_prices = pd.read_csv(fileName)\n",
    "    \n",
    "    ## Remove rows with missing values, accounting for mising values coded as '?'\n",
    "    cols = ['price', 'bore', 'stroke', \n",
    "          'horsepower', 'peak-rpm']\n",
    "    for column in cols:\n",
    "        auto_prices.loc[auto_prices[column] == '?', column] = np.nan\n",
    "    auto_prices.dropna(axis = 0, inplace = True)\n",
    "\n",
    "    ## Convert some columns to numeric values\n",
    "    for column in cols:\n",
    "        auto_prices[column] = pd.to_numeric(auto_prices[column])\n",
    "#    auto_prices[cols]= auto_prices[cols].as_type(int64)\n",
    "        \n",
    "    return auto_prices\n",
    "auto_prices= read_auto_data()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>symboling</th>\n",
       "      <th>normalized-losses</th>\n",
       "      <th>make</th>\n",
       "      <th>fuel-type</th>\n",
       "      <th>aspiration</th>\n",
       "      <th>num-of-doors</th>\n",
       "      <th>body-style</th>\n",
       "      <th>drive-wheels</th>\n",
       "      <th>engine-location</th>\n",
       "      <th>wheel-base</th>\n",
       "      <th>...</th>\n",
       "      <th>engine-size</th>\n",
       "      <th>fuel-system</th>\n",
       "      <th>bore</th>\n",
       "      <th>stroke</th>\n",
       "      <th>compression-ratio</th>\n",
       "      <th>horsepower</th>\n",
       "      <th>peak-rpm</th>\n",
       "      <th>city-mpg</th>\n",
       "      <th>highway-mpg</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>?</td>\n",
       "      <td>alfa-romero</td>\n",
       "      <td>gas</td>\n",
       "      <td>std</td>\n",
       "      <td>two</td>\n",
       "      <td>convertible</td>\n",
       "      <td>rwd</td>\n",
       "      <td>front</td>\n",
       "      <td>88.6</td>\n",
       "      <td>...</td>\n",
       "      <td>130</td>\n",
       "      <td>mpfi</td>\n",
       "      <td>3.47</td>\n",
       "      <td>2.68</td>\n",
       "      <td>9.0</td>\n",
       "      <td>111</td>\n",
       "      <td>5000</td>\n",
       "      <td>21</td>\n",
       "      <td>27</td>\n",
       "      <td>13495</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>?</td>\n",
       "      <td>alfa-romero</td>\n",
       "      <td>gas</td>\n",
       "      <td>std</td>\n",
       "      <td>two</td>\n",
       "      <td>convertible</td>\n",
       "      <td>rwd</td>\n",
       "      <td>front</td>\n",
       "      <td>88.6</td>\n",
       "      <td>...</td>\n",
       "      <td>130</td>\n",
       "      <td>mpfi</td>\n",
       "      <td>3.47</td>\n",
       "      <td>2.68</td>\n",
       "      <td>9.0</td>\n",
       "      <td>111</td>\n",
       "      <td>5000</td>\n",
       "      <td>21</td>\n",
       "      <td>27</td>\n",
       "      <td>16500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>?</td>\n",
       "      <td>alfa-romero</td>\n",
       "      <td>gas</td>\n",
       "      <td>std</td>\n",
       "      <td>two</td>\n",
       "      <td>hatchback</td>\n",
       "      <td>rwd</td>\n",
       "      <td>front</td>\n",
       "      <td>94.5</td>\n",
       "      <td>...</td>\n",
       "      <td>152</td>\n",
       "      <td>mpfi</td>\n",
       "      <td>2.68</td>\n",
       "      <td>3.47</td>\n",
       "      <td>9.0</td>\n",
       "      <td>154</td>\n",
       "      <td>5000</td>\n",
       "      <td>19</td>\n",
       "      <td>26</td>\n",
       "      <td>16500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>164</td>\n",
       "      <td>audi</td>\n",
       "      <td>gas</td>\n",
       "      <td>std</td>\n",
       "      <td>four</td>\n",
       "      <td>sedan</td>\n",
       "      <td>fwd</td>\n",
       "      <td>front</td>\n",
       "      <td>99.8</td>\n",
       "      <td>...</td>\n",
       "      <td>109</td>\n",
       "      <td>mpfi</td>\n",
       "      <td>3.19</td>\n",
       "      <td>3.40</td>\n",
       "      <td>10.0</td>\n",
       "      <td>102</td>\n",
       "      <td>5500</td>\n",
       "      <td>24</td>\n",
       "      <td>30</td>\n",
       "      <td>13950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>164</td>\n",
       "      <td>audi</td>\n",
       "      <td>gas</td>\n",
       "      <td>std</td>\n",
       "      <td>four</td>\n",
       "      <td>sedan</td>\n",
       "      <td>4wd</td>\n",
       "      <td>front</td>\n",
       "      <td>99.4</td>\n",
       "      <td>...</td>\n",
       "      <td>136</td>\n",
       "      <td>mpfi</td>\n",
       "      <td>3.19</td>\n",
       "      <td>3.40</td>\n",
       "      <td>8.0</td>\n",
       "      <td>115</td>\n",
       "      <td>5500</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>17450</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 26 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 6,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "auto_prices.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x7f00ead324e0>"
      ]
     },
     "execution_count": 7,
     "metadata": {
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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"
     },
     "execution_count": 7,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "fig = plt.figure(figsize=(8, 8)) # define plot area\n",
    "ax = fig.gca() # define axis                   \n",
    "auto_prices.plot(kind = 'scatter', x = 'price', y = 'engine-size', ax = ax)\n",
    "ax.set_title('Tamanho do motot por preço') # Give the plot a main title\n",
    "ax.set_xlabel('Preço') # Set text for the x axis\n",
    "ax.set_ylabel('Tamanho do motor')# Set text for y axis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 0,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (Anaconda)",
   "language": "python",
   "name": "anaconda3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
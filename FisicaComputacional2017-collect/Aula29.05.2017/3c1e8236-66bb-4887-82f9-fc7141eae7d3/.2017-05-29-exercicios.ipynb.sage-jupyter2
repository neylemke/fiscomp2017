{"type":"settings","backend_state":"running","trust":true,"kernel":"python2-ubuntu","metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.3"}},"kernel_state":"idle"}
{"type":"file","last_load":1497276015566}
{"output":{"0":{"data":{"text/plain":"array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\n       35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\n       52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,\n       69, 70, 71, 72, 73, 74])"},"exec_count":7}},"exec_count":7,"start":1497308787329,"input":"X","state":"done","pos":6,"cell_type":"code","type":"cell","end":1497308787340,"id":"85110f","kernel":"python2-ubuntu"}
{"exec_count":11,"start":1497308809634,"input":"def read_auto_data(fileName = \"Automobile price data.csv\"): \n    'Function to load the auto price data set from a .csv file' \n    import pandas as pd\n    import numpy as np\n\n    ## Read the .csv file with the pandas read_csv method\n    auto_prices = pd.read_csv(fileName)\n    \n    ## Remove rows with missing values, accounting for mising values coded as '?'\n    cols = ['price', 'bore', 'stroke', \n          'horsepower', 'peak-rpm']\n    for column in cols:\n        auto_prices.loc[auto_prices[column] == '?', column] = np.nan\n    auto_prices.dropna(axis = 0, inplace = True)\n\n    ## Convert some columns to numeric values\n    for column in cols:\n        auto_prices[column] = pd.to_numeric(auto_prices[column])\n#    auto_prices[cols]= auto_prices[cols].as_type(int64)\n        \n    return auto_prices\nauto_prices= read_auto_data()","state":"done","pos":11,"cell_type":"code","type":"cell","end":1497308809668,"id":"440b55","kernel":"python2-ubuntu"}
{"output":{"0":{"data":{"text/plain":"{'\"A': 1,\n 'A': 3,\n 'ALGO': 1,\n 'ALGUMA,': 1,\n 'AMIG\\xe1VEIS,': 1,\n 'ASSUNTO.\\\\N': 1,\n 'BARATO;': 1,\n 'CAPA,': 1,\n 'COISA': 1,\n 'COMO': 1,\n 'COMPLEXA': 1,\n 'CRIADO.': 1,\n 'DAS': 1,\n 'DEIXE': 1,\n 'DO': 1,\n 'E': 3,\n 'E,': 1,\n 'EFICAZ': 1,\n 'EM': 5,\n 'ENCARADO': 1,\n 'ENCICLOP\\xe9DIA': 1,\n 'ENTRE': 1,\n 'ESQUECER': 1,\n 'FOI': 2,\n 'FRASE': 1,\n 'GAL\\xe1CTICA.': 1,\n 'GAL\\xe1XIAS': 1,\n 'GARRAFAIS': 1,\n 'GERAL,': 1,\n 'GRANDE': 1,\n 'GUIA': 1,\n 'HIP\\xf3TESE': 1,\n 'ID\\xe9IA.\\\\N': 1,\n 'INFINITAMENTE': 1,\n 'INVIS\\xedVEL': 1,\n 'IN\\xedCIO,': 1,\n 'IRRITOU': 1,\n 'ISSO': 1,\n 'JAMAIS,': 1,\n 'J\\xe1': 1,\n 'LER': 1,\n 'LETRAS': 1,\n 'LIGEIRAMENTE': 1,\n 'LUGAR,': 2,\n 'MAIS': 2,\n 'MOCHILEIRO': 1,\n 'MUITAS': 1,\n 'MUITO': 1,\n 'NA': 1,\n 'NO': 2,\n 'N\\xc3O': 1,\n 'O': 3,\n 'PARA': 2,\n 'PESSOAS': 1,\n 'POESIAS': 1,\n 'PRIMEIRO': 1,\n 'PROFUNDAMENTE': 1,\n 'P\\xc2NICO.': 1,\n 'P\\xe9SSIMA': 1,\n 'QUE,': 1,\n 'REMOVER': 1,\n 'SEGUNDO': 1,\n 'SIMPLES': 1,\n 'SUBSTITUIU': 1,\n 'TECNOLOGIA': 1,\n 'TORNAR': 1,\n 'TRAZ': 1,\n 'T\\xe3O': 1,\n 'UM': 1,\n 'UMA': 1,\n 'UNIVERSO': 1,\n 'VOC\\xea.\\\\N': 1,\n 'VOGON': 1,\n '\\xe9': 3}"},"exec_count":5}},"exec_count":5,"start":1497308785320,"input":"dict","state":"done","pos":4,"cell_type":"code","type":"cell","end":1497308785332,"id":"73a831","kernel":"python2-ubuntu"}
{"output":{"0":{"data":{"text/plain":"<matplotlib.text.Text at 0x7f90aa4a4390>"},"exec_count":10},"1":{"data":{"image/png":"21890eb6014cfeb3a8da7704a888ea55a4426315"}}},"exec_count":10,"start":1497308798441,"input":"logx=np.log(X)\nlogy=np.log(Y)\nfig = plt.figure(figsize=(10,10)) # define plot area\nax = fig.gca() # define axis    \nx = fig.gca() # define eixo               \nplt.plot(logx,logy)\nax.set_title('Poema') # Título Principal\nax.set_xlabel('rank') # Eixo x\nax.set_ylabel('Freq')# Eixo y","state":"done","pos":9,"cell_type":"code","type":"cell","end":1497308798827,"id":"b87ca1","kernel":"python2-ubuntu"}
{"exec_count":4,"start":1497308784328,"input":"dict={}\nfor line in texto:\n    for word in line.split():\n        word2=word.upper()\n        word=word2.strip(\".,;!?\")\n        if word2 in dict:\n            dict[word2]=dict[word2]+1\n        else:\n            dict[word2]=1","state":"done","pos":3,"cell_type":"code","type":"cell","end":1497308784331,"id":"d2dcb6","kernel":"python2-ubuntu"}
{"exec_count":3,"start":1497308782936,"input":"texto=file.readlines()","state":"done","pos":2,"cell_type":"code","type":"cell","end":1497308783030,"id":"3b2b95","kernel":"python2-ubuntu"}
{"type":"cell","id":"656c21","pos":14,"input":"","cell_type":"code","exec_count":0}
{"exec_count":1,"start":1497308780931,"input":"#Exercicio 1\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimport pandas as pd\n","state":"done","pos":0,"cell_type":"code","type":"cell","end":1497308781102,"id":"2f3d62","kernel":"python2-ubuntu"}
{"output":{"0":{"data":{"text/plain":"array([5, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1])"},"exec_count":8}},"exec_count":8,"start":1497308788320,"input":"Y","state":"done","pos":7,"cell_type":"code","type":"cell","end":1497308788330,"id":"8238e2","kernel":"python2-ubuntu"}
{"exec_count":6,"start":1497308786328,"input":"teste=list(dict.values())\nteste.sort()\nteste.reverse()\nX=np.array(range(len(teste)))+1\nY=np.array(teste)","state":"done","pos":5,"cell_type":"code","type":"cell","end":1497308786331,"id":"31a821","kernel":"python2-ubuntu"}
{"output":{"0":{"data":{"text/plain":"<matplotlib.text.Text at 0x7f90aff912d0>"},"exec_count":9},"1":{"data":{"image/png":"dd212e5ac9ff8b69cf071181eb5805e51b6c8b4c"}}},"exec_count":9,"start":1497308789322,"input":"fig = plt.figure(figsize=(10,10)) # define plot area\nax = fig.gca() # define axis    \nx = fig.gca() # define eixo               \nplt.plot(X,Y)\nax.set_title('Poema qualquer') # Título Principal\nax.set_xlabel('rank') # Eixo x\nax.set_ylabel('Freq')# Eixo y","state":"done","pos":8,"cell_type":"code","type":"cell","end":1497308789730,"id":"031327","kernel":"python2-ubuntu"}
{"exec_count":2,"start":1497308781897,"input":"file=open(\"poema.txt\",\"r\")","state":"done","pos":1,"cell_type":"code","type":"cell","end":1497308781930,"id":"940219","kernel":"python2-ubuntu"}
{"type":"cell","id":"c85e13","pos":10,"input":"\nexercicio do grafico de dispersao do matplotlib\n","cell_type":"markdown"}
{"output":{"0":{"data":{"text/html":"<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>symboling</th>\n      <th>normalized-losses</th>\n      <th>make</th>\n      <th>fuel-type</th>\n      <th>aspiration</th>\n      <th>num-of-doors</th>\n      <th>body-style</th>\n      <th>drive-wheels</th>\n      <th>engine-location</th>\n      <th>wheel-base</th>\n      <th>...</th>\n      <th>engine-size</th>\n      <th>fuel-system</th>\n      <th>bore</th>\n      <th>stroke</th>\n      <th>compression-ratio</th>\n      <th>horsepower</th>\n      <th>peak-rpm</th>\n      <th>city-mpg</th>\n      <th>highway-mpg</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3</td>\n      <td>?</td>\n      <td>alfa-romero</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>two</td>\n      <td>convertible</td>\n      <td>rwd</td>\n      <td>front</td>\n      <td>88.6</td>\n      <td>...</td>\n      <td>130</td>\n      <td>mpfi</td>\n      <td>3.47</td>\n      <td>2.68</td>\n      <td>9.0</td>\n      <td>111</td>\n      <td>5000</td>\n      <td>21</td>\n      <td>27</td>\n      <td>13495</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3</td>\n      <td>?</td>\n      <td>alfa-romero</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>two</td>\n      <td>convertible</td>\n      <td>rwd</td>\n      <td>front</td>\n      <td>88.6</td>\n      <td>...</td>\n      <td>130</td>\n      <td>mpfi</td>\n      <td>3.47</td>\n      <td>2.68</td>\n      <td>9.0</td>\n      <td>111</td>\n      <td>5000</td>\n      <td>21</td>\n      <td>27</td>\n      <td>16500</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>?</td>\n      <td>alfa-romero</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>two</td>\n      <td>hatchback</td>\n      <td>rwd</td>\n      <td>front</td>\n      <td>94.5</td>\n      <td>...</td>\n      <td>152</td>\n      <td>mpfi</td>\n      <td>2.68</td>\n      <td>3.47</td>\n      <td>9.0</td>\n      <td>154</td>\n      <td>5000</td>\n      <td>19</td>\n      <td>26</td>\n      <td>16500</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>164</td>\n      <td>audi</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>four</td>\n      <td>sedan</td>\n      <td>fwd</td>\n      <td>front</td>\n      <td>99.8</td>\n      <td>...</td>\n      <td>109</td>\n      <td>mpfi</td>\n      <td>3.19</td>\n      <td>3.40</td>\n      <td>10.0</td>\n      <td>102</td>\n      <td>5500</td>\n      <td>24</td>\n      <td>30</td>\n      <td>13950</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>164</td>\n      <td>audi</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>four</td>\n      <td>sedan</td>\n      <td>4wd</td>\n      <td>front</td>\n      <td>99.4</td>\n      <td>...</td>\n      <td>136</td>\n      <td>mpfi</td>\n      <td>3.19</td>\n      <td>3.40</td>\n      <td>8.0</td>\n      <td>115</td>\n      <td>5500</td>\n      <td>18</td>\n      <td>22</td>\n      <td>17450</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 26 columns</p>\n</div>"},"exec_count":12}},"exec_count":12,"start":1497308811689,"input":"auto_prices.head()","state":"done","pos":12,"cell_type":"code","type":"cell","end":1497308811769,"id":"4a85cb","kernel":"python2-ubuntu"}
{"output":{"0":{"ename":"UnicodeDecodeError","evalue":"'ascii' codec can't decode byte 0xc3 in position 24: ordinal not in range(128)","traceback":["\u001b[0;31m\u001b[0m","\u001b[0;31mUnicodeDecodeError\u001b[0mTraceback (most recent call last)","\u001b[0;32m<ipython-input-13-84bc62d73c79>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgca\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# define axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mauto_prices\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkind\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'scatter'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'price'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'engine-size'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_title\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Tamanho do motot por preço'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Give the plot a main title\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_xlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Preço'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Set text for the x axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_ylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Tamanho do motor'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m# Set text for y axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python2.7/dist-packages/matplotlib/axes/_axes.pyc\u001b[0m in \u001b[0;36mset_title\u001b[0;34m(self, label, fontdict, loc, **kwargs)\u001b[0m\n\u001b[1;32m    182\u001b[0m             \u001b[0;34m'verticalalignment'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m'baseline'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    183\u001b[0m             'horizontalalignment': loc.lower()}\n\u001b[0;32m--> 184\u001b[0;31m         \u001b[0mtitle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    185\u001b[0m         \u001b[0mtitle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdefault\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    186\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mfontdict\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python2.7/dist-packages/matplotlib/text.pyc\u001b[0m in \u001b[0;36mset_text\u001b[0;34m(self, s)\u001b[0m\n\u001b[1;32m   1204\u001b[0m         \u001b[0mACCEPTS\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstring\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0manything\u001b[0m \u001b[0mprintable\u001b[0m \u001b[0;32mwith\u001b[0m \u001b[0;34m'%s'\u001b[0m \u001b[0mconversion\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1205\u001b[0m         \"\"\"\n\u001b[0;32m-> 1206\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_text\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'%s'\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1207\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstale\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1208\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mUnicodeDecodeError\u001b[0m: 'ascii' codec can't decode byte 0xc3 in position 24: ordinal not in range(128)"]},"1":{"data":{"image/png":"e34c756d5aa6a3ea1ec116a01633a552bc886f10"}}},"exec_count":13,"start":1497308812741,"input":"import matplotlib.pyplot as plt\nfig = plt.figure(figsize=(8, 8)) # define plot area\nax = fig.gca() # define axis                   \nauto_prices.plot(kind = 'scatter', x = 'price', y = 'engine-size', ax = ax)\nax.set_title('Tamanho do motot por preço') # Give the plot a main title\nax.set_xlabel('Preço') # Set text for the x axis\nax.set_ylabel('Tamanho do motor')# Set text for y axis","state":"done","pos":13,"cell_type":"code","type":"cell","end":1497308813354,"id":"3e0605","kernel":"python2-ubuntu"}
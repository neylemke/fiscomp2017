{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "### Exercicio 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "file=open(\"livro.txt\",\"r\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "texto=file.readlines()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "dict={}\n",
    "for line in texto:\n",
    "    for word in line.split():\n",
    "        if word in dict:\n",
    "            dict [word]=dict[word]+1\n",
    "        else:\n",
    "            dict[word]=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'esperado:': 1,\n",
       " 'vassalo': 1,\n",
       " 'acima,': 1,\n",
       " 'Alemos': 1,\n",
       " 'polidas,': 1,\n",
       " 'cerque.': 1,\n",
       " 'Ele,': 3,\n",
       " 'inimigo,': 3,\n",
       " 'Abrindo-o,': 1,\n",
       " 'imagina,': 2,\n",
       " 'C\\xedcero': 1,\n",
       " 'inimigo:': 1,\n",
       " 'inimigo;': 1,\n",
       " 'inimigo?': 1,\n",
       " 'Foundation': 14,\n",
       " 'Ninfa,': 7,\n",
       " 'ouvirem': 1,\n",
       " 'prazo': 3,\n",
       " 'Moreira': 2,\n",
       " 'contemplo,': 1,\n",
       " 'far\\xe3o': 6,\n",
       " 'Baco,': 1,\n",
       " 'igual': 5,\n",
       " 'Ro\\xe7algate,': 1,\n",
       " 'cansas:': 1,\n",
       " 'cr\\xe9dulo': 1,\n",
       " 'V\\xeaem': 1,\n",
       " 'dela': 5,\n",
       " 'd\\xe3o': 11,\n",
       " 'dele': 24,\n",
       " 'estrangeiro': 2,\n",
       " 'contina': 1,\n",
       " 'dizendo:--\"\\xd3': 1,\n",
       " 'maridos,': 1,\n",
       " 'inimigos': 16,\n",
       " 'ensina.': 2,\n",
       " 'enfim,': 16,\n",
       " 'Porque,': 9,\n",
       " 'gerado': 1,\n",
       " 'fomes,': 2,\n",
       " 'maridos:': 1,\n",
       " 'sucede': 2,\n",
       " 'receiving': 1,\n",
       " 'Andais': 1,\n",
       " 'condessa': 1,\n",
       " 'v\\xea-la': 1,\n",
       " 'jocundas,': 1,\n",
       " '(Por': 1,\n",
       " 'aguardava': 1,\n",
       " 'Apartadas': 1,\n",
       " 'comia.': 1,\n",
       " 'Ninfas': 13,\n",
       " 'aparece.\"': 1,\n",
       " 'permission.': 1,\n",
       " 'nascem': 2,\n",
       " 'corrente.': 1,\n",
       " 'e,': 7,\n",
       " 'Recebendo': 1,\n",
       " 'custa,': 1,\n",
       " 'ajuntava': 1,\n",
       " 'Herdeiro': 1,\n",
       " 'second': 2,\n",
       " 'd\\xe3o,': 1,\n",
       " 'C\\xe1spios': 1,\n",
       " 'compliance': 3,\n",
       " 'ensinou.': 1,\n",
       " 'ousados,': 3,\n",
       " 'advers\\xe1rios)': 1,\n",
       " 'Eclesi\\xe1stico': 1,\n",
       " 'embarcaria': 1,\n",
       " 'Cesse': 1,\n",
       " '\"Depois': 3,\n",
       " 'Raz\\xf5es,': 1,\n",
       " 'Acharmos': 1,\n",
       " 'indinado,': 1,\n",
       " 'geolhos': 1,\n",
       " 'mandes,': 1,\n",
       " 'fugiu.': 1,\n",
       " 'fugiu,': 1,\n",
       " 'Merc\\xfario': 2,\n",
       " 'Puseram': 1,\n",
       " 'ignorante,': 1,\n",
       " 'accessed,': 1,\n",
       " 'posto.': 3,\n",
       " 'required': 1,\n",
       " 'increasing': 1,\n",
       " 'contudo,': 5,\n",
       " 'mestre,': 1,\n",
       " 'guardado.': 1,\n",
       " 'D\\xfca': 3,\n",
       " 'nasce,': 3,\n",
       " 'inoc\\xeancia,': 3,\n",
       " 'hera': 1,\n",
       " 'error': 2,\n",
       " 'guardado!': 1,\n",
       " 'tardan\\xe7a': 2,\n",
       " 'mais.': 1,\n",
       " 'reported': 1,\n",
       " 'Sujeita': 1,\n",
       " 'calos.': 1,\n",
       " 'Partiu-se': 1,\n",
       " 'Engrossando-se': 1,\n",
       " 'tomastes,': 1,\n",
       " 'soldados,': 1,\n",
       " 'linha': 1,\n",
       " 'calculate': 1,\n",
       " 'militara': 1,\n",
       " 'ande:': 1,\n",
       " 'sometidas,': 1,\n",
       " 'apelido.': 1,\n",
       " 'postos': 2,\n",
       " 'proveito': 2,\n",
       " 'temerosas;': 1,\n",
       " 'Subindo,': 1,\n",
       " 'indinados': 1,\n",
       " 'poderemos': 1,\n",
       " 'NOT': 2,\n",
       " 'admira,': 1,\n",
       " 'retorcidos.': 1,\n",
       " 'Saber,': 1,\n",
       " 'divide': 2,\n",
       " 'L\\xe1': 16,\n",
       " 'luminosa': 1,\n",
       " 'replace': 1,\n",
       " 'ambicioso,': 2,\n",
       " 'Cuidou': 1,\n",
       " 'sagrada,': 2,\n",
       " 'Sequeira,': 1,\n",
       " 'roubos,': 1,\n",
       " 'chegado,': 2,\n",
       " 'nobres,': 1,\n",
       " 'estiva': 1,\n",
       " 'desatina.': 1,\n",
       " 'cara': 4,\n",
       " 'belos:': 1,\n",
       " 'Usado': 1,\n",
       " 'vela)': 1,\n",
       " 'Tesif\\xf3nio': 1,\n",
       " 'mant\\xeam': 1,\n",
       " '\\xc1rduo,': 1,\n",
       " 'partidos.': 1,\n",
       " 'Ninfa;': 1,\n",
       " 'tiranizado,': 1,\n",
       " 'desterro,': 1,\n",
       " 'desterro.': 1,\n",
       " 'chegados': 2,\n",
       " 'Tinge,': 1,\n",
       " 'Guardaf\\xfa,': 1,\n",
       " 'beleza,': 1,\n",
       " '99': 8,\n",
       " '98': 8,\n",
       " 'apelida': 1,\n",
       " 'dizia,': 5,\n",
       " 'Embarca\\xe7\\xf5es': 1,\n",
       " '91': 9,\n",
       " '90': 11,\n",
       " '93': 9,\n",
       " '92': 9,\n",
       " '95': 9,\n",
       " '94': 9,\n",
       " '97': 8,\n",
       " '96': 8,\n",
       " 'pac\\xedfico': 1,\n",
       " 'giros': 1,\n",
       " 'Embarca\\xe7\\xe3o': 2,\n",
       " 'vou': 5,\n",
       " 'Prov\\xedncias': 1,\n",
       " 'ins\\xeddias': 2,\n",
       " 'liability,': 1,\n",
       " 'pac\\xedfica': 1,\n",
       " 'desdita': 1,\n",
       " 'Quer': 1,\n",
       " 'Caem': 1,\n",
       " 'lado.': 1,\n",
       " 'Belona': 1,\n",
       " 'temer\\xe1rios,': 1,\n",
       " 'Ces\\xe1rea': 1,\n",
       " 'respondendo,': 1,\n",
       " 'giolhos': 2,\n",
       " 'enganoso,': 1,\n",
       " 'chamava': 1,\n",
       " 'adquirir': 1,\n",
       " 'Mandar': 2,\n",
       " 'queimada': 1,\n",
       " 'Babel.': 1,\n",
       " 'escudos': 2,\n",
       " 'ASCII\"': 2,\n",
       " 'toldos,': 1,\n",
       " 'pinta': 3,\n",
       " 'Fingiram': 1,\n",
       " 'Mandam': 1,\n",
       " 'ordena:': 1,\n",
       " 'mancebos': 2,\n",
       " 'cautamente': 1,\n",
       " 'bonina,': 1,\n",
       " 'anda.\"': 1,\n",
       " 'STRICT': 1,\n",
       " 'limitados.': 1,\n",
       " 'P\\xe9rsia,': 2,\n",
       " 'machine': 1,\n",
       " 'Fortuna,': 2,\n",
       " 'escura,': 4,\n",
       " 'r\\xfasticas': 1,\n",
       " 'Justi\\xe7a': 1,\n",
       " 'pesadas': 1,\n",
       " 'mand\\xe1-los,': 1,\n",
       " 'piramidais,': 1,\n",
       " 'A': 360,\n",
       " 'a\\xe7o,': 3,\n",
       " 'sesudo,': 1,\n",
       " 'a\\xe7o.': 1,\n",
       " 'lares.': 1,\n",
       " 'Goadiana': 1,\n",
       " 'Abaxando,': 1,\n",
       " '\"V\\xeas,': 2,\n",
       " 'depressa;': 1,\n",
       " '\"Agora': 2,\n",
       " 'desfaz': 2,\n",
       " 'Foge': 2,\n",
       " 'escudo,': 1,\n",
       " 'seda': 4,\n",
       " 'Fogo': 5,\n",
       " 'enganosos': 1,\n",
       " 'espalhou,': 1,\n",
       " '\"Tu': 2,\n",
       " 'sentir': 4,\n",
       " 'Foram': 10,\n",
       " 'fidelidade': 2,\n",
       " 'gib\\xe3o': 1,\n",
       " 'dom\\xe9stica': 1,\n",
       " 'molestava,': 1,\n",
       " 'sentia': 1,\n",
       " 'importa,': 1,\n",
       " 'adquirida,': 1,\n",
       " '(\"the': 1,\n",
       " 'Ternate,': 1,\n",
       " 'Antes,': 1,\n",
       " 'aceito,': 2,\n",
       " 'onze,': 1,\n",
       " 'mancebo,': 1,\n",
       " 'Pereira,': 2,\n",
       " 'Dard\\xe2nia,': 1,\n",
       " 'viveram;': 1,\n",
       " 'Badajoz': 1,\n",
       " 'tiveste': 2,\n",
       " 'entender-se.\"': 1,\n",
       " 'nestas': 3,\n",
       " 'inclina,': 1,\n",
       " 'despidas,': 1,\n",
       " 'desobedi\\xeancia,': 1,\n",
       " 'pegada': 1,\n",
       " 'Tomando-nos': 1,\n",
       " 'Circe': 1,\n",
       " 'sumptuosos,': 1,\n",
       " 'Dizendo': 6,\n",
       " 'implac\\xe1vel': 1,\n",
       " 'Sojuga': 1,\n",
       " 'Catual': 7,\n",
       " 'fix': 1,\n",
       " 'ensaio': 1,\n",
       " 'Escuros': 1,\n",
       " '\"Aquele': 1,\n",
       " 'fia': 3,\n",
       " '\"Aquela': 1,\n",
       " '(Ensina-lo': 1,\n",
       " 'ensaia': 1,\n",
       " 'fio': 4,\n",
       " 'Habita,': 1,\n",
       " 'fim': 20,\n",
       " 'Sete': 1,\n",
       " 'Sigue-me': 1,\n",
       " 'piedosas.': 1,\n",
       " 'h\\xf3spedes': 2,\n",
       " '\\xe2nimos': 3,\n",
       " 'arrebatado': 1,\n",
       " 'Lusitana:': 1,\n",
       " 'Lusitana;': 1,\n",
       " 'Climene': 1,\n",
       " 'ad\\xfaltero': 1,\n",
       " 'necess\\xe1rio': 2,\n",
       " 'julgar': 1,\n",
       " 'Lusitana,': 9,\n",
       " 'obedecem.': 1,\n",
       " 'Lusitana.': 1,\n",
       " 'necess\\xe1ria': 1,\n",
       " 'desobede\\xe7a;': 1,\n",
       " 'excel\\xeancia.': 1,\n",
       " 'ele;': 1,\n",
       " 'exerc\\xedcio': 2,\n",
       " 'Mostra-se': 1,\n",
       " 'esteira': 1,\n",
       " 'pedia,': 1,\n",
       " 'Suspeitas': 1,\n",
       " 'Mahamede.': 1,\n",
       " 'l\\xe1cteas': 1,\n",
       " 'at\\xe9': 7,\n",
       " 'escrava': 3,\n",
       " 'representa': 1,\n",
       " 'Nalgum': 1,\n",
       " 'organized': 1,\n",
       " 'descendentes': 3,\n",
       " 'melhores:': 1,\n",
       " 'focas': 1,\n",
       " 'Curso': 1,\n",
       " 'guardadora,': 1,\n",
       " 'causaram;': 1,\n",
       " 'crueldade,': 1,\n",
       " 'melhores.': 1,\n",
       " 'melhores,': 2,\n",
       " 'Melindano:': 1,\n",
       " 'baxa': 1,\n",
       " 'array': 1,\n",
       " 'fingida;': 1,\n",
       " 'avara,': 1,\n",
       " 'imp\\xe9rio': 5,\n",
       " 'temor,': 1,\n",
       " 'Dafne': 1,\n",
       " 'Rodeados': 1,\n",
       " 'int\\xe9rprete': 1,\n",
       " 'acendido': 2,\n",
       " 'vingueis': 1,\n",
       " 'perigosas': 1,\n",
       " 'ri': 1,\n",
       " 'amea\\xe7o': 1,\n",
       " 'puderas,': 1,\n",
       " '\"Estes': 1,\n",
       " 'written': 3,\n",
       " 'Calatrava;': 1,\n",
       " 'trezeno.': 1,\n",
       " 'sagazes,': 1,\n",
       " 'transformaram;': 1,\n",
       " 'piedosa': 1,\n",
       " 'p\\xe1tria,': 5,\n",
       " 'feia': 5,\n",
       " 'piedoso': 2,\n",
       " 'bastardo)': 1,\n",
       " 'p\\xe9rfido': 4,\n",
       " 'adere\\xe7am;': 1,\n",
       " 'ati\\xe7a:': 1,\n",
       " 'perigosa,': 1,\n",
       " 'ANYTHING': 1,\n",
       " 'laranjeira': 1,\n",
       " 'Eux\\xednio,': 1,\n",
       " 'deixam': 4,\n",
       " 'ferindo,': 1,\n",
       " 'p\\xe9rfida': 4,\n",
       " 'Reinos,': 1,\n",
       " 'defective': 2,\n",
       " 'sustentasse,': 1,\n",
       " 'seguran\\xe7a': 4,\n",
       " 'humanidade': 2,\n",
       " '(available': 1,\n",
       " 'p\\xe1ssaros': 1,\n",
       " 'entendemos': 1,\n",
       " 'resfria.': 1,\n",
       " 'batel': 7,\n",
       " 'murmurando': 4,\n",
       " '\"Porque': 6,\n",
       " 'imensa': 1,\n",
       " 'tantos': 15,\n",
       " 'est\\xe1': 62,\n",
       " 'prosseguindo': 1,\n",
       " 'elmo': 2,\n",
       " 'disse:': 1,\n",
       " 'mem\\xf3ria.': 2,\n",
       " 'mem\\xf3ria,': 5,\n",
       " 'imenso': 5,\n",
       " 'Gutenberg\"),': 1,\n",
       " 'asselo,': 1,\n",
       " 'polido': 1,\n",
       " 'Ceres,': 2,\n",
       " 'mem\\xf3ria;': 1,\n",
       " 'Lampetusa': 1,\n",
       " 'triunfos': 2,\n",
       " '\"Fernando,': 1,\n",
       " 'levaram': 2,\n",
       " 'Responde-lhe': 1,\n",
       " 'incerta': 2,\n",
       " 'Virg\\xedlios': 1,\n",
       " 'mandada.': 2,\n",
       " 'incerto': 2,\n",
       " 'movido': 3,\n",
       " 'Dr.': 2,\n",
       " 'r\\xe9deas': 4,\n",
       " 'v\\xeaem': 4,\n",
       " 'edif\\xedcio': 1,\n",
       " 'Buscam': 1,\n",
       " 'fa\\xe7anha': 1,\n",
       " 'inocentes': 1,\n",
       " 'com\\xe9dias': 1,\n",
       " 'tiranos;': 1,\n",
       " 'cease': 1,\n",
       " 'P\\xf3lo': 8,\n",
       " 'entregar-se,': 1,\n",
       " 'c\\xe3es': 2,\n",
       " 'entregar-se.': 1,\n",
       " 'interpreta.': 1,\n",
       " 'hosp\\xedcios': 1,\n",
       " 'expend': 1,\n",
       " 'tesouro.': 1,\n",
       " 'mem\\xf3rias': 3,\n",
       " 'deitaram.': 1,\n",
       " 'val.': 1,\n",
       " 'derribadas,': 1,\n",
       " 'seus,': 6,\n",
       " 'Oriente,': 7,\n",
       " 'Oriente.': 6,\n",
       " 'tanto,': 11,\n",
       " 'tanto.': 3,\n",
       " 'entre': 44,\n",
       " 'L\\xe1grimas': 3,\n",
       " 'Muitas': 3,\n",
       " 'procuro,': 1,\n",
       " 'pl\\xfambea': 1,\n",
       " 'sedas,': 1,\n",
       " 'creias': 1,\n",
       " 'novidade;': 1,\n",
       " 'estrago!': 1,\n",
       " 'Ostras,': 1,\n",
       " 'elementos': 2,\n",
       " 'derived': 1,\n",
       " 'estrago.': 1,\n",
       " 'estrago,': 1,\n",
       " 'corno': 4,\n",
       " 'este': 41,\n",
       " 'igualavam.': 1,\n",
       " 'esta': 51,\n",
       " 'pesada': 3,\n",
       " 'fingimento': 1,\n",
       " 'roubar-lhe': 1,\n",
       " 'vir-se': 1,\n",
       " 'conheceram;': 1,\n",
       " 'tesouro;': 1,\n",
       " 'arrancaram': 1,\n",
       " 'longo': 18,\n",
       " 'dor,': 1,\n",
       " 'longa': 9,\n",
       " 'desejada': 8,\n",
       " 'concede.': 1,\n",
       " 'longe': 31,\n",
       " 'Hirc\\xednia': 1,\n",
       " 'inieo,': 1,\n",
       " 'atravessa': 1,\n",
       " 'instructo': 1,\n",
       " 'that': 13,\n",
       " '--\"Rei': 1,\n",
       " 'Pega': 1,\n",
       " 'recebem': 3,\n",
       " 'recebes': 1,\n",
       " '\"Prometido': 1,\n",
       " 'Venham': 1,\n",
       " 'desfazer': 1,\n",
       " 'v\\xeam,': 2,\n",
       " 'Samori': 1,\n",
       " 'Ocultos': 1,\n",
       " 'pediam:': 1,\n",
       " 'roubarem,': 1,\n",
       " 'ignota': 1,\n",
       " 'sonho,': 1,\n",
       " 'soam,': 1,\n",
       " 'concedeu': 1,\n",
       " 'shall': 2,\n",
       " 'Nereidas,': 2,\n",
       " 'aventuraram': 1,\n",
       " 'Ulisseus.': 1,\n",
       " 'doze:': 1,\n",
       " 'ignoto': 1,\n",
       " 'merecesse,': 1,\n",
       " 'fees,': 1,\n",
       " 'obedi\\xeancia': 2,\n",
       " 'soam;': 1,\n",
       " 'letter': 1,\n",
       " 'dois': 12,\n",
       " '\"Disse': 1,\n",
       " 'id\\xf3neas': 1,\n",
       " 'doze,': 2,\n",
       " 'Bra\\xe7os,': 1,\n",
       " 'peca': 1,\n",
       " 'recebe.': 1,\n",
       " 'ouvir-te': 1,\n",
       " 'Netunina.': 1,\n",
       " 'rutilante,': 2,\n",
       " 'senhorio': 7,\n",
       " 'constantes,': 2,\n",
       " 'recebe;': 2,\n",
       " 'tece': 1,\n",
       " 'Sexto': 1,\n",
       " 'Lusit\\xe2nicas': 1,\n",
       " 'sobra\\xe7ados:': 1,\n",
       " '\"Br\\xe2menes': 1,\n",
       " 'Ven\\xe7a': 1,\n",
       " 'Torna': 6,\n",
       " 'estais': 5,\n",
       " 'modo:': 1,\n",
       " 'sentidos': 2,\n",
       " 'doutras': 1,\n",
       " 'Ficou-lhe': 1,\n",
       " 'Cunha': 1,\n",
       " '\\xfaltima,': 1,\n",
       " 'modo.': 1,\n",
       " 'Chiamai': 1,\n",
       " 'doido': 1,\n",
       " 'apanha': 1,\n",
       " 'infinito,': 1,\n",
       " 'Ciniras': 1,\n",
       " 'vedado.': 1,\n",
       " 'rico': 9,\n",
       " '\"Passavam': 1,\n",
       " 'concerto,': 1,\n",
       " 'toma;': 1,\n",
       " 'espalhado': 2,\n",
       " 'ir\\xe1': 5,\n",
       " 'rica': 15,\n",
       " 'surda': 1,\n",
       " 'sentido;': 1,\n",
       " 'bom,': 1,\n",
       " 'enganada': 1,\n",
       " 'elemento.': 1,\n",
       " 'valente': 2,\n",
       " 'sentido,': 1,\n",
       " 'surdo': 1,\n",
       " 'rudeza': 1,\n",
       " \"C'um\": 6,\n",
       " 'Loto;': 1,\n",
       " 'for\\xe7osos,': 1,\n",
       " 'estacada,': 1,\n",
       " 'magoa.': 1,\n",
       " 'sobejam': 1,\n",
       " 'perros': 1,\n",
       " 'negava': 1,\n",
       " 'Leteia.': 1,\n",
       " 'triagas.': 1,\n",
       " 'desatam': 1,\n",
       " 'Imp\\xe9rio,': 4,\n",
       " 'peixe': 1,\n",
       " 'manadas.': 1,\n",
       " '\"Posto': 1,\n",
       " 'desemparando,': 1,\n",
       " 'acabou': 1,\n",
       " 'manceba': 1,\n",
       " 'golpes': 7,\n",
       " 'conhe\\xe7a;': 1,\n",
       " 'Orlando,': 1,\n",
       " 'guerra': 22,\n",
       " 'Volvendo,': 1,\n",
       " 'Sofala': 2,\n",
       " 'aventureira.': 1,\n",
       " 'mancebo': 8,\n",
       " 'In\\xeas,': 1,\n",
       " 'Algumas,': 1,\n",
       " '\"Estas': 3,\n",
       " 'Feita': 1,\n",
       " 'faia': 1,\n",
       " '\\xcdndia': 15,\n",
       " 'Areturo,': 1,\n",
       " 'lama,': 1,\n",
       " 'Heliogabalo,': 1,\n",
       " 'pesar': 1,\n",
       " 'rainha': 1,\n",
       " 'consci\\xeancia': 3,\n",
       " 'puseram,': 1,\n",
       " 'T\\xe3o': 20,\n",
       " 'patente,': 1,\n",
       " 'vivendo,': 1,\n",
       " 'cintilava': 1,\n",
       " 'Descobridor': 1,\n",
       " 'Aonde': 3,\n",
       " 'movendo': 1,\n",
       " 'Vedes': 1,\n",
       " 'mel': 1,\n",
       " 'for\\xe7ando;': 1,\n",
       " 'ira': 12,\n",
       " 'Igreja': 1,\n",
       " 'Armadas': 1,\n",
       " 'preserve': 1,\n",
       " 'purp\\xfarea': 1,\n",
       " 'natura': 5,\n",
       " 'Quimera': 1,\n",
       " 'nossas': 2,\n",
       " 'Falar': 1,\n",
       " 'defens\\xe3o': 3,\n",
       " 'conhe\\xe7am': 1,\n",
       " 'extent': 1,\n",
       " 'disciplina': 1,\n",
       " 'abertos,': 1,\n",
       " 'camar\\xf5es': 1,\n",
       " 'pre\\xe7o': 9,\n",
       " 'belas,': 2,\n",
       " 'incenso': 1,\n",
       " 'embaixador,': 1,\n",
       " 'arn\\xeas,': 3,\n",
       " 'V\\xea,': 1,\n",
       " 'esperan\\xe7as.': 2,\n",
       " 'country': 2,\n",
       " 'Povo': 2,\n",
       " 'mandar': 4,\n",
       " 'Eles,': 1,\n",
       " 'soberb\\xedssimo': 2,\n",
       " 'Menon': 1,\n",
       " 'Dem\\xf3nio': 2,\n",
       " '109': 3,\n",
       " 'ruminando.': 1,\n",
       " 'sublime': 14,\n",
       " 'escuridade,': 1,\n",
       " 'Logo': 7,\n",
       " 'tinge': 1,\n",
       " 'Branda': 1,\n",
       " 'visitava': 2,\n",
       " 'dariam': 1,\n",
       " 'alternate': 1,\n",
       " 'Ocidente.': 1,\n",
       " 'sua.': 4,\n",
       " 'Ocidente,': 3,\n",
       " 'sua,': 9,\n",
       " 'Delis,': 1,\n",
       " 'active': 2,\n",
       " 'camisa': 1,\n",
       " 'cobre': 4,\n",
       " 'Concertam-se': 1,\n",
       " 'D\\xeaem-lhe': 2,\n",
       " 'faleceu.': 1,\n",
       " 'pagaram': 1,\n",
       " 'Nhaia': 1,\n",
       " 'queria,': 4,\n",
       " 'queria.': 2,\n",
       " 'Sumano': 1,\n",
       " 'Ofir': 1,\n",
       " 'Z\\xe9firo': 2,\n",
       " 'much': 1,\n",
       " 'povoa\\xe7\\xe3o': 1,\n",
       " 'navegarem': 1,\n",
       " 'beija': 1,\n",
       " 'Veloso,': 3,\n",
       " 'avisado': 1,\n",
       " 'ajudar': 6,\n",
       " 'daria.': 2,\n",
       " 'daria,': 1,\n",
       " 'Ampaza,': 1,\n",
       " 'vai,': 3,\n",
       " \"d'altos\": 1,\n",
       " 'vai.': 1,\n",
       " 'Taprobana': 1,\n",
       " 'Costumados': 1,\n",
       " 'Centimano;': 1,\n",
       " 'coalhados:': 1,\n",
       " 'socorrer-lhe': 1,\n",
       " 'dote': 1,\n",
       " 'suas': 20,\n",
       " 'ca\\xeddo': 2,\n",
       " 'vai;': 1,\n",
       " 'Destru\\xeddos,': 1,\n",
       " 'prometer\\xe1s?': 1,\n",
       " 'queriam': 1,\n",
       " 'roubadas': 1,\n",
       " 'passados.': 1,\n",
       " 'passados,': 4,\n",
       " 'linguagem': 2,\n",
       " 'visit': 1,\n",
       " 'ignorantes': 1,\n",
       " 'Menino': 1,\n",
       " 'desta': 27,\n",
       " 'formas': 1,\n",
       " 'Cuidam': 1,\n",
       " 'deste': 24,\n",
       " 'abundosos': 1,\n",
       " 'Muito': 5,\n",
       " 'lavradores,': 1,\n",
       " 'rodear-se:': 1,\n",
       " 'Sobre': 14,\n",
       " 'amestramos.': 1,\n",
       " 'cobrir': 1,\n",
       " 'cobriu': 1,\n",
       " 'fruto,': 1,\n",
       " 'fiquei': 1,\n",
       " 'damaged': 1,\n",
       " 'fiquem': 1,\n",
       " '\"Dambos': 1,\n",
       " 'Tra': 1,\n",
       " 'things': 2,\n",
       " 'obedeceram:': 1,\n",
       " 'any': 31,\n",
       " 'vingar-te': 1,\n",
       " 'musgo': 1,\n",
       " 'sortes,': 2,\n",
       " 'Abrolhos': 1,\n",
       " 'fruto;': 1,\n",
       " 'eBooks': 3,\n",
       " 'outside': 3,\n",
       " 'hum\\xedlima': 1,\n",
       " 'business@pglaf.org.': 1,\n",
       " 'buscando': 7,\n",
       " 'Magalh\\xe3es,': 1,\n",
       " 'entregavam,': 1,\n",
       " 'venenos,': 1,\n",
       " 'd\\xeas': 1,\n",
       " 'Fartar': 1,\n",
       " 'trazido': 1,\n",
       " 'trato.': 1,\n",
       " 'merecia,': 2,\n",
       " 'morrendo.': 1,\n",
       " 'ouvir-me': 1,\n",
       " 'ocidentais,': 1,\n",
       " 'fareis': 3,\n",
       " 'Traces': 1,\n",
       " 'trato,': 1,\n",
       " '\"Chegado': 2,\n",
       " 'eBook,': 1,\n",
       " 'virtuoso.': 1,\n",
       " 'Nau': 1,\n",
       " 'fique.': 1,\n",
       " 'demande': 1,\n",
       " 'algum': 26,\n",
       " 'editions': 3,\n",
       " 'Ad\\xe3o,': 1,\n",
       " 'institu\\xeddo,': 1,\n",
       " 'achar\\xe3o': 1,\n",
       " 'Cinireia,': 1,\n",
       " 'est\\xe1tua': 1,\n",
       " '\\xe1ureo': 1,\n",
       " 'insens\\xedbil;': 1,\n",
       " 'devastando': 1,\n",
       " 'PLEASE': 1,\n",
       " '\\xe1urea': 2,\n",
       " 'Sampaio': 2,\n",
       " 'addresses.': 1,\n",
       " 'promete': 1,\n",
       " 'fabulosos,': 1,\n",
       " 'manifestaram.': 1,\n",
       " 'main': 1,\n",
       " 'cometerdes': 1,\n",
       " 'distribute': 5,\n",
       " 'esconde.': 2,\n",
       " 'esconde,': 5,\n",
       " 'firme,': 2,\n",
       " 'Andando,': 1,\n",
       " 'desaparecem': 1,\n",
       " 'Gon\\xe7alo': 2,\n",
       " 'esp\\xedritos': 2,\n",
       " 'fizer': 2,\n",
       " 'lasso': 2,\n",
       " 'Golpes': 1,\n",
       " 'disposto,': 1,\n",
       " 'estouro,': 1,\n",
       " 'sonho;': 1,\n",
       " 'taxes.': 1,\n",
       " 'Vaticinando,': 1,\n",
       " 'possan\\xe7a': 2,\n",
       " 'Conciliam': 1,\n",
       " 'escolhido': 1,\n",
       " 'vossos': 16,\n",
       " 'arrependido': 1,\n",
       " 'BEFORE': 1,\n",
       " 'punham': 1,\n",
       " 'limites;': 1,\n",
       " 'Demodoco,': 1,\n",
       " 'corte:': 1,\n",
       " 'escondem': 1,\n",
       " 'invoco': 1,\n",
       " 'imposed': 1,\n",
       " 'invoca': 1,\n",
       " 'val,': 1,\n",
       " 'coube': 1,\n",
       " 'contentamento': 2,\n",
       " 'gado': 6,\n",
       " 'alt\\xedssona': 1,\n",
       " 'disformemente': 1,\n",
       " 'vosso,': 1,\n",
       " 'amea\\xe7os': 1,\n",
       " 'afronta': 1,\n",
       " 'Hispanos.': 1,\n",
       " 'profundas': 2,\n",
       " 'vosso:': 1,\n",
       " 'moram': 1,\n",
       " 'Escolheu': 1,\n",
       " 'pede;': 2,\n",
       " 'pendem': 1,\n",
       " 'Ali,': 2,\n",
       " 'proa.': 1,\n",
       " 'Castelhana': 1,\n",
       " 'proa,': 1,\n",
       " 'Castelhano': 5,\n",
       " 'dan\\xe7as': 2,\n",
       " 'logo:--\"\\xd3': 1,\n",
       " 'Fazem': 5,\n",
       " 'culpas': 1,\n",
       " 'Cambaica,': 1,\n",
       " 'Fazes': 1,\n",
       " 'Fazer': 3,\n",
       " 'Estas': 7,\n",
       " 'arreceosos,': 1,\n",
       " 'Batalha': 1,\n",
       " 'reparo': 1,\n",
       " 'cruas;': 1,\n",
       " 'p\\xe9s': 8,\n",
       " 'Troianos': 1,\n",
       " 'tornada': 1,\n",
       " 'for': 31,\n",
       " 'banda;': 2,\n",
       " 'fabricados': 1,\n",
       " 'Latindo': 1,\n",
       " 's\\xe1bios': 4,\n",
       " 'alongavam.': 1,\n",
       " '\\xc1s': 1,\n",
       " 'docemente': 1,\n",
       " 'Cassiopeia': 1,\n",
       " 'Hesp\\xe9ridas': 1,\n",
       " 'muito': 52,\n",
       " 'maneira': 13,\n",
       " 'uma': 38,\n",
       " 'entretanto': 1,\n",
       " 'feito!)': 1,\n",
       " 'Pole\\xe1s': 1,\n",
       " 'foi': 93,\n",
       " 'muita': 6,\n",
       " 'conhecida': 2,\n",
       " 'fragoso,': 1,\n",
       " 'jocundo.': 1,\n",
       " 'cores;': 1,\n",
       " 'pedras,': 1,\n",
       " 'conhecido': 6,\n",
       " 'Tigre': 1,\n",
       " 'culpa,': 1,\n",
       " 'B\\xe1rbaro': 2,\n",
       " 'tomar;': 1,\n",
       " 'Abrandar': 1,\n",
       " 'amar': 1,\n",
       " 'barata;': 1,\n",
       " 'proas': 4,\n",
       " 'alterado': 1,\n",
       " '\"Queimou': 1,\n",
       " 'cores.': 2,\n",
       " 'esquadr\\xf5es,': 1,\n",
       " 'cores,': 6,\n",
       " 'crian\\xe7as': 1,\n",
       " 'ordenando,': 1,\n",
       " 'geral': 2,\n",
       " 'OS': 2,\n",
       " 'pe\\xe7as': 5,\n",
       " 'o': 1571,\n",
       " 'espalharei': 1,\n",
       " 's\\xe1bio,': 2,\n",
       " 'fabricado,': 1,\n",
       " 'um,': 5,\n",
       " 'cobi\\xe7osas': 1,\n",
       " '\"Terra': 1,\n",
       " '\"Project': 5,\n",
       " 'soa': 2,\n",
       " 'Use': 2,\n",
       " 'primores;': 1,\n",
       " 'soe': 2,\n",
       " 'choro,': 1,\n",
       " 'Austrina': 1,\n",
       " 'som': 9,\n",
       " 'sol': 2,\n",
       " 'Quirino,': 1,\n",
       " 'vagando': 1,\n",
       " 'sou': 6,\n",
       " 'of\\xedcio,': 4,\n",
       " 'Destes,': 1,\n",
       " 'Fez': 3,\n",
       " 'Anfi\\xf3neas': 1,\n",
       " 'recebem,': 1,\n",
       " 'novo': 21,\n",
       " 'chegavam,': 1,\n",
       " 'Rainha': 2,\n",
       " 'peso,': 1,\n",
       " 'support': 3,\n",
       " 'vencedor,': 4,\n",
       " 'imaginando,': 1,\n",
       " 'nova': 16,\n",
       " 'Doris': 1,\n",
       " 'despir,': 1,\n",
       " '\"Aves': 1,\n",
       " 'deleitava': 1,\n",
       " 'humanos': 5,\n",
       " 'cajado;': 1,\n",
       " 'amoroso,': 1,\n",
       " 'seguia': 2,\n",
       " 'vontade': 11,\n",
       " 'of\\xedcios': 2,\n",
       " '\"Ver\\xe1s': 1,\n",
       " 'Entende': 1,\n",
       " 'atroam;': 1,\n",
       " 'Batical\\xe1,': 1,\n",
       " 'caro;': 1,\n",
       " 'inflamado': 1,\n",
       " 'Lisboa,': 5,\n",
       " 'seguir': 2,\n",
       " 'seguiu': 1,\n",
       " 'survive': 1,\n",
       " 'veias;': 1,\n",
       " 'tirou;': 1,\n",
       " 'chupava;': 1,\n",
       " 'vaporzinho': 1,\n",
       " 'amorosos': 1,\n",
       " 'capuzes': 1,\n",
       " 'pese': 1,\n",
       " 'ajuntam': 2,\n",
       " 'humano,': 9,\n",
       " 'humano.': 2,\n",
       " 'costume,': 1,\n",
       " 'peso': 8,\n",
       " 'daquilo': 2,\n",
       " 'pensamento': 8,\n",
       " 'Saber\\xe1,': 1,\n",
       " 'adiante,': 1,\n",
       " 'desesperar': 1,\n",
       " 'pesos': 1,\n",
       " 'vencedores': 3,\n",
       " 'agasalhar-te,': 1,\n",
       " 'agasalhar-te.': 1,\n",
       " 'Celeste': 1,\n",
       " 'humano;': 1,\n",
       " 'humano:': 1,\n",
       " '151': 1,\n",
       " '150': 1,\n",
       " '153': 1,\n",
       " '152': 1,\n",
       " '155': 1,\n",
       " 'montanha.': 1,\n",
       " 'montanha,': 1,\n",
       " 'adormece:': 1,\n",
       " 'cometas': 1,\n",
       " 'ornou.': 1,\n",
       " 'devo,': 1,\n",
       " 'mora;': 2,\n",
       " 'visit:': 1,\n",
       " 'visitado,': 1,\n",
       " 'dessossegado:': 1,\n",
       " 'p\\xe9,': 1,\n",
       " 'proeminente,': 1,\n",
       " 'prosperado': 1,\n",
       " 'Gabelo.': 1,\n",
       " 'adormece,': 2,\n",
       " '--\"Imaginai': 1,\n",
       " 'Francisco': 1,\n",
       " 'solicitation': 1,\n",
       " 'duro,': 5,\n",
       " '\"Sublime': 1,\n",
       " 'vencido,': 1,\n",
       " 'vencido.': 3,\n",
       " 'parida': 1,\n",
       " 'duro;': 1,\n",
       " 'duro:': 1,\n",
       " 'Espanha': 6,\n",
       " 'inverno': 1,\n",
       " 'vencido:': 1,\n",
       " '\"P\\xf5es-te': 1,\n",
       " 'Cil\\xedcios,': 1,\n",
       " 'pudestes': 1,\n",
       " 'entendo,': 1,\n",
       " 'E': 380,\n",
       " 'Gambeia': 1,\n",
       " 'possu\\xeda,': 1,\n",
       " 'possu\\xeda.': 2,\n",
       " 'ser\\xe1': 21,\n",
       " 'condena.': 1,\n",
       " 'condena,': 3,\n",
       " 'palma': 8,\n",
       " 'aparelha;': 2,\n",
       " 'Viemos': 1,\n",
       " 'Austro': 6,\n",
       " '[EBook': 1,\n",
       " 'estrangeiros.': 1,\n",
       " 'logra': 2,\n",
       " 'd\\xe1diva': 1,\n",
       " 'formosos,': 1,\n",
       " 'mostrar': 5,\n",
       " 'perguntando': 2,\n",
       " 'vencidos': 3,\n",
       " 'Qual,': 3,\n",
       " 'duros': 9,\n",
       " 'inteiro': 2,\n",
       " 'Cuida': 2,\n",
       " 'nome,': 5,\n",
       " 'Volvem': 1,\n",
       " 'Web': 3,\n",
       " 'apercebia,': 1,\n",
       " 'people': 3,\n",
       " 'Pluma': 1,\n",
       " 'maldito': 1,\n",
       " 'Troiano.': 1,\n",
       " 'coitados': 1,\n",
       " '\\xc1frica,': 3,\n",
       " 'destruiu': 1,\n",
       " 'Indiana': 1,\n",
       " 'corpo': 20,\n",
       " 'Troiano,': 1,\n",
       " 'Logo,': 1,\n",
       " 'esteio.\"--': 1,\n",
       " 'Perimal:': 1,\n",
       " 'subindo': 2,\n",
       " 'ver': 51,\n",
       " 'determina\\xe7\\xe3o,': 1,\n",
       " 'esposo,': 1,\n",
       " '\"Tempo': 1,\n",
       " 'irm\\xe3,': 1,\n",
       " 'vez': 5,\n",
       " 'pelo': 35,\n",
       " 'livros,': 1,\n",
       " ...}"
      ]
     },
     "execution_count": 6,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dict"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "import numpy as np\n",
    "oco=dict.values()\n",
    "oco.sort()\n",
    "x= np.array(range(len(oco)))+1\n",
    "y = np.array(oco)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x7f205c911450>"
      ]
     },
     "execution_count": 8,
     "metadata": {
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": ""
     },
     "execution_count": 8,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "fig = plt.figure(figsize=(10,10))\n",
    "ax = fig.gca()\n",
    "x = fig.gca()\n",
    "plt.plot(oco)\n",
    "ax.set_title('Frequencia de palavras')\n",
    "ax.set_xlabel('rank')\n",
    "ax.set_ylabel('Frank')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "oco=dict.values()\n",
    "oco.sort()\n",
    "oco.reverse()\n",
    "x=np.array(range(len(oco)))+1\n",
    "y=np.array(oco)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x7f205c855910>"
      ]
     },
     "execution_count": 10,
     "metadata": {
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": ""
     },
     "execution_count": 10,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logx=np.log(x)\n",
    "logy=np.log(y)\n",
    "fig = plt.figure(figsize=(10, 10)) # define plot area\n",
    "ax = fig.gca() # define axis\n",
    "x=fig.gca()\n",
    "plt.plot(logx,logy)\n",
    "ax.set_title('frequencia de palavras das Lusiadas') # Título Principal\n",
    "ax.set_xlabel('rank') # Eixo x\n",
    "ax.set_ylabel('Freq')# Eixo y"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "### Exercicio 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "def read_auto_data(fileName = \"Automobile price data.csv\"):\n",
    "    'Function to load the auto price data set from a .csv file' \n",
    "    import pandas as pd\n",
    "    import numpy as np\n",
    "\n",
    "    ## Read the .csv file with the pandas read_csv method\n",
    "    auto_prices = pd.read_csv(fileName)\n",
    "    \n",
    "    ## Remove rows with missing values, accounting for mising values coded as '?'\n",
    "    cols = ['price', 'bore', 'stroke', \n",
    "          'horsepower', 'peak-rpm']\n",
    "    for column in cols:\n",
    "        auto_prices.loc[auto_prices[column] == '?', column] = np.nan\n",
    "    auto_prices.dropna(axis = 0, inplace = True)\n",
    "\n",
    "    ## Convert some columns to numeric values\n",
    "    for column in cols:\n",
    "        auto_prices[column] = pd.to_numeric(auto_prices[column])\n",
    "#    auto_prices[cols] = auto_prices[cols].as_type(int64)\n",
    "        \n",
    "    return auto_prices\n",
    "auto_prices = read_auto_data()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x7f2056b99cd0>"
      ]
     },
     "execution_count": 12,
     "metadata": {
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": ""
     },
     "execution_count": 12,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "fig = plt.figure(figsize=(8,8)) # define plot area\n",
    "ax = fig.gca() # define axis                   \n",
    "auto_prices.plot(kind = 'scatter', x = 'engine-size', y = 'price', ax = ax)\n",
    "ax.set_title('Scatter plot de preco vs tamanho do motor') # Give the plot a main title\n",
    "ax.set_xlabel('Tamanho do motor') # Set text for the x axis\n",
    "ax.set_ylabel('Preco')# Set text for y axis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 0,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2 (SageMath)",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
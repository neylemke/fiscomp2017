{"kernelspec":{"display_name":"Python 2 (SageMath)","language":"python","name":"python2"},"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.13"}}
{"cell_type":"code","execution_count":54,"metadata":{"trusted":true},"outputs":[],"source":"#Exercicio 1\nimport sys\nreload(sys)\nsys.setdefaultencoding(\"utf-8\")"}
{"cell_type":"code","execution_count":55,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"import numpy as np\nimport matplotlib.pyplot as plt"}
{"cell_type":"code","execution_count":56,"metadata":{"trusted":true},"outputs":[],"source":"file= open(\"lusiadas.txt\",\"r\")"}
{"cell_type":"code","execution_count":57,"metadata":{"trusted":true},"outputs":[],"source":"texto = file.readlines()"}
{"cell_type":"code","execution_count":58,"metadata":{"trusted":true},"outputs":[],"source":"dict={}\nfor line in texto:\n    for word in line.split():\n        if word in dict:\n               dict[word]=dict[word]+1\n        else:\n            dict[word]=1\n                "}
{"cell_type":"code","execution_count":59,"metadata":{"trusted":true},"outputs":[],"source":"oco=dict.values()\noco.sort()\nX=np.array(range(len(oco)))+1\nY=np.array(oco)"}
{"cell_type":"code","execution_count":60,"metadata":{"trusted":true},"outputs":[{"data":{"text/plain":"<matplotlib.text.Text at 0x7f42da16b390>"},"execution_count":60,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"smc-blob::54feeefa-cbd1-43fc-a2da-546dc77ddcbd","text/plain":"<matplotlib.figure.Figure at 0x7f42d80989d0>"},"metadata":{},"output_type":"display_data"}],"source":"fig = plt.figure(figsize=(10, 10)) # define plot area\nax = fig.gca() # define axis\nx=fig.gca()\nplt.plot(X,Y)\nax.set_title('frequencia de palavras das Lusiadas') # Título Principal\nax.set_xlabel('rank') # Eixo x\nax.set_ylabel('Freq')# Eixo y"}
{"cell_type":"code","execution_count":68,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"oco=dict.values()\noco.sort()\noco.reverse()\nX=np.array(range(len(oco)))+1\nY=np.array(oco)"}
{"cell_type":"code","execution_count":69,"metadata":{"trusted":true},"outputs":[{"data":{"text/plain":"<matplotlib.text.Text at 0x7f42d3ce8910>"},"execution_count":69,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"smc-blob::c7f0e686-a5d0-48af-b6e4-136c9e5a6160","text/plain":"<matplotlib.figure.Figure at 0x7f42d3ea1150>"},"metadata":{},"output_type":"display_data"}],"source":"logx=np.log(X)\nlogy=np.log(Y)\nfig = plt.figure(figsize=(10, 10)) # define plot area\nax = fig.gca() # define axis\nx=fig.gca()\nplt.plot(logx,logy)\nax.set_title('frequencia de palavras das Lusiadas') # Título Principal\nax.set_xlabel('rank') # Eixo x\nax.set_ylabel('Freq')# Eixo y"}
{"cell_type":"code","execution_count":70,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"#Exercicio 2\n"}
{"cell_type":"code","execution_count":71,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"def read_auto_data(fileName = \"Automobile price data.csv\"):\n    'Function to load the auto price data set from a .csv file' \n    import pandas as pd\n    import numpy as np\n\n    ## Read the .csv file with the pandas read_csv method\n    auto_prices = pd.read_csv(fileName)\n    \n    ## Remove rows with missing values, accounting for mising values coded as '?'\n    cols = ['price', 'bore', 'stroke', \n          'horsepower', 'peak-rpm']\n    for column in cols:\n        auto_prices.loc[auto_prices[column] == '?', column] = np.nan\n    auto_prices.dropna(axis = 0, inplace = True)\n\n    ## Convert some columns to numeric values\n    for column in cols:\n        auto_prices[column] = pd.to_numeric(auto_prices[column])\n#    auto_prices[cols] = auto_prices[cols].as_type(int64)\n        \n    return auto_prices\nauto_prices = read_auto_data()\n\n"}
{"cell_type":"code","execution_count":74,"metadata":{"trusted":true},"outputs":[{"data":{"text/plain":"<matplotlib.text.Text at 0x7f42d3c19b50>"},"execution_count":74,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"smc-blob::3daf1fe6-60f6-4f25-bb0d-f43da39381ac","text/plain":"<matplotlib.figure.Figure at 0x7f42cdfb7fd0>"},"metadata":{},"output_type":"display_data"}],"source":"import matplotlib.pyplot as plt\nfig = plt.figure(figsize=(8, 8)) # define plot area\nax = fig.gca() # define axis                   \nauto_prices.plot(kind = 'scatter', x = 'engine-size', y = 'price', ax = ax)\nax.set_title('Scatter plot de tamanho do motor vs preco') # Give the plot a main title\nax.set_xlabel('tamanho do motor') # Set text for the x axis\nax.set_ylabel('Preco (US/$)')# Set text for y axis"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":""}
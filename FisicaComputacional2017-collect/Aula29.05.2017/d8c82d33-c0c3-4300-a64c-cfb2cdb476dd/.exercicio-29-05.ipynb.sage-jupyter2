{"type":"settings","kernel":"python2","backend_state":"ready","trust":true,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.13"}},"kernel_state":"idle"}
{"type":"file","last_load":1497288943822}
{"type":"cell","id":"e97b6a","pos":3,"input":"import numpy as np\noco=dict.values()\noco.sort()\nx= np.array(range(len(oco)))+1\ny = np.array(oco)","cell_type":"code","exec_count":18}
{"type":"cell","id":"26d6fb","pos":0,"input":"file=open(\"livro.txt\",\"r\")","cell_type":"code","exec_count":8}
{"type":"cell","id":"0248ae","pos":5,"input":"def read_auto_data(fileName = \"Automobile price data.csv\"):\n    'Function to load the auto price data set from a .csv file' \n    import pandas as pd\n    import numpy as np\n\n    ## Read the .csv file with the pandas read_csv method\n    auto_prices = pd.read_csv(fileName)\n    \n    ## Remove rows with missing values, accounting for mising values coded as '?'\n    cols = ['price', 'bore', 'stroke', \n          'horsepower', 'peak-rpm']\n    for column in cols:\n        auto_prices.loc[auto_prices[column] == '?', column] = np.nan\n    auto_prices.dropna(axis = 0, inplace = True)\n\n    ## Convert some columns to numeric values\n    for column in cols:\n        auto_prices[column] = pd.to_numeric(auto_prices[column])\n#    auto_prices[cols] = auto_prices[cols].as_type(int64)\n        \n    return auto_prices\nauto_prices = read_auto_data()\n","cell_type":"code","exec_count":21}
{"type":"cell","id":"09a706","pos":1,"input":"texto=file.readlines()","cell_type":"code","exec_count":9}
{"type":"cell","id":"047b52","pos":7,"input":"","cell_type":"code","exec_count":0}
{"type":"cell","id":"221262","pos":6,"input":"","output":{"0":{"data":{"text/plain":"<matplotlib.text.Text at 0x7f4abfe41fd0>"},"output_type":"execute_result","exec_count":25},"1":{"data":{"image/png":"38786f8f0296828f01ad9629a46bf00925e71634"},"output_type":"execute_result","exec_count":25}},"cell_type":"code","exec_count":25}
{"type":"cell","id":"c6be1d","pos":2,"input":"dict={}\nfor line in texto:\n    for word in line.split():\n        if word in dict:\n            dict [word]=dict[word]+1\n        else:\n            dict[word]=1","cell_type":"code","exec_count":17}
{"type":"cell","id":"f5beec","pos":4,"input":"import matplotlib.pyplot as plt\nfig = plt.figure(figsize=(10,10))\nax = fig.gca()\nx = fig.gca()\nplt.plot(oco)\nax.set_title('frequencia de palavras')\nax.set_xlabel('rank')\nax.set_ylabel('Frank')","output":{"0":{"data":{"text/plain":"<matplotlib.text.Text at 0x7f4accdca9d0>"},"output_type":"execute_result","exec_count":20},"1":{"data":{"image/png":"0954f7b817fed1a63f9e976bc807b8aec3ef0213"},"output_type":"execute_result","exec_count":20}},"cell_type":"code","exec_count":20}
{"type":"settings","kernel":"python3","backend_state":"running","trust":true,"kernel_state":"idle"}
{"type":"file","last_load":1495472934586}
{"exec_count":1,"input":"#### Exercicio 1\n- Gere uma lista com 100 números aleatórios, em seguida o aluno deverá deverá encontrar os intervalos médios dos elementos da lista.","state":"done","pos":1,"cell_type":"markdown","type":"cell","id":"bc15d5","kernel":"python3"}
{"type":"cell","id":"f96ee4","pos":0.5,"input":"### Exercícios de Revisão","cell_type":"markdown"}
{"exec_count":1,"start":1497228100560,"input":"import random","state":"done","pos":5,"type":"cell","end":1497228100564,"id":"7c9fce","kernel":"python3"}
{"exec_count":2,"start":1497228102605,"input":"L=random.sample(range(0,100),100)","state":"done","pos":6,"type":"cell","end":1497228102662,"id":"a48198","kernel":"python3"}
{"output":{"0":{"data":{"text/plain":"[47,\n 17,\n 12,\n 0,\n 32,\n 6,\n 46,\n 77,\n 21,\n 96,\n 48,\n 71,\n 25,\n 4,\n 37,\n 62,\n 87,\n 65,\n 36,\n 34,\n 33,\n 45,\n 31,\n 68,\n 99,\n 15,\n 64,\n 97,\n 28,\n 11,\n 43,\n 69,\n 56,\n 49,\n 76,\n 54,\n 66,\n 1,\n 72,\n 52,\n 2,\n 35,\n 79,\n 61,\n 23,\n 83,\n 59,\n 42,\n 98,\n 90,\n 88,\n 78,\n 63,\n 89,\n 14,\n 38,\n 44,\n 20,\n 9,\n 86,\n 27,\n 53,\n 19,\n 75,\n 40,\n 94,\n 84,\n 57,\n 8,\n 67,\n 26,\n 51,\n 22,\n 41,\n 60,\n 13,\n 16,\n 58,\n 93,\n 7,\n 74,\n 29,\n 82,\n 80,\n 73,\n 81,\n 39,\n 50,\n 24,\n 95,\n 70,\n 30,\n 18,\n 55,\n 10,\n 85,\n 5,\n 91,\n 92,\n 3]"},"exec_count":3}},"exec_count":3,"start":1497228103859,"input":"L","state":"done","pos":7,"type":"cell","end":1497228103874,"id":"8cd49f","kernel":"python3"}
{"output":{"0":{"text":"[30, 5, 12, -32, 26, -40, -31, 56, -75, 48, -23, 46, 21, -33, -25, -25, 22, 29, 2, 1, -12, 14, -37, -31, 84, -49, -33, 69, 17, -32, -26, 13, 7, -27, 22, -12, 65, -71, 20, 50, -33, -44, 18, 38, -60, 24, 17, -56, 8, 2, 10, 15, -26, 75, -24, -6, 24, 11, -77, 59, -26, 34, -56, 35, -54, 10, 27, 49, -59, 41, -25, 29, -19, -19, 47, -3, -42, -35, 86, -67, 45, -53, 2, 7, -8, 42, -11, 26, -71, 25, 40, 12, -37, 45, -75, 80, -86, -1, 89]\nO interlavo médio sera de: 0.4444444444444444\n","name":"stdout"}},"exec_count":4,"start":1497228105359,"input":"soma=0\nL1=[]\nfor i in range(0,99):\n    L1.append((L[i]-L[i+1]))\n    soma=soma+(L[i]-L[i+1])\nmedia=soma/99\nprint(L1)\nprint(\"O interlavo médio sera de:\",media)","state":"done","pos":8,"type":"cell","end":1497228105372,"id":"285d3e","kernel":"python3"}
{"type":"cell","id":"5d93fb","pos":9,"input":"#### Exercicio 2\nFaça um programa que leia um número indeterminado de valores, correspondentes a notas, encerrando a entrada de dados quando for informado um valor igual a -1 (que não deve ser armazenado). Após esta entrada de dados, faça:\n- Mostre a quantidade de valores que foram lidos;\n- Exiba todos os valores na ordem em que foram informados, um ao lado do outro;\n- Exiba todos os valores na ordem inversa à que foram informados, um abaixo do outro;\n- Calcule e mostre a soma dos valores;\n- Calcule e mostre a média dos valores;\n- Calcule e mostre a quantidade de valores acima da média calculada;\n- Calcule e mostre a quantidade de valores abaixo de sete;\n- Encerre o programa com uma mensagem;","cell_type":"markdown"}
{"output":{"0":{"name":"input","opts":{"prompt":"Insira a nota:","password":false},"value":"2"},"1":{"name":"input","opts":{"prompt":"Insira a nota:","password":false},"value":"3"},"2":{"name":"input","opts":{"prompt":"Insira a nota:","password":false},"value":"5"},"3":{"name":"input","opts":{"prompt":"Insira a nota:","password":false},"value":"-1"},"4":{"text":"foram lidos: 3\nAs notas que foram inseridas:\n2.0\n3.0\n5.0\n\nAs notas em ordem inversa será:\n5.0\n3.0\n2.0\n\nA soma será: 10.0\nA media sera: 3.3333333333333335\nA quatidade de notas acima da media sera: 1\nA quatidade de notas abaixo da media e de: 2\nO aluno foi reprovado na materia!\n","name":"stdout"}},"exec_count":7,"start":1497228190043,"input":"N=[]\nNum=0\nwhile Num!=-1:\n    Num=float(input(\"Insira a nota:\"))\n    if Num!=-1:\n        N=N+[Num]\nprint(\"foram lidos:\",len(N))\n\n\ni=0\nprint(\"As notas que foram inseridas:\")\nN1=\"\"\nfor elem in N:\n    N1=N1+str(elem)+\"\\n\"\nprint (N1)\n\nNr=[]\ni=0\nprint(\"As notas em ordem inversa será:\")\nwhile i<len(N):\n    Nr=Nr+[N[len(N)-1-i]]\n    i+=1\n\nN2=\"\"\nfor elem in Nr:\n    N2=N2+str(elem)+\"\\n\"\nprint(N2)\n\n\ni=0\nsoma=0\nwhile i<len(N):\n    soma=soma+N[i]\n    i+=1\nprint(\"A soma será:\", soma)\nmd=soma/len(N)\nprint(\"A media sera:\", md)\n\n\n\ni=0\nA=[]\nwhile i<len(N):\n    if N[i]>md:\n        A=A+[N[i]]\n    i+=1\nprint(\"A quatidade de notas acima da media sera:\", len(A))\n\n\ni=0\nbaixas=[]\nwhile i<len(N):\n    if N[i]<md:\n        baixas=baixas+[N[i]]\n    i+=1\nprint(\"A quatidade de notas abaixo da media e de:\", len(baixas))\n\n\nif md>=5:\n    print(\"O aluno foi aprovado na materia!\")\nelse:\n    print(\"O aluno foi reprovado na materia!\")","state":"done","pos":10,"type":"cell","end":1497228265574,"id":"1defa0","kernel":"python3"}
{"type":"cell","id":"25163f","pos":12,"input":"#### Exercicio 3\n- Calcule as raízes da equação do 2◦ grau ($Ax^2 + Bx + C = 0$) sendo os valores de A, B e C fornecidos pelo usuário, levando em consideração a existência de raízes complexas.**","cell_type":"markdown"}
{"output":{"0":{"text":"A cara da equacao e de: A*x**2 + B*x + C = 0.\n","name":"stdout"},"1":{"name":"input","opts":{"prompt":"Insira o valor de A.","password":false},"value":"1"},"2":{"name":"input","opts":{"prompt":"Insira o valor de B.","password":false},"value":"2"},"3":{"name":"input","opts":{"prompt":"Insira o valor de C.","password":false},"value":"3"},"4":{"text":"A primeira raiz sera: (-0.9999999999999999+1.4142135623730951j)\nA segunda raiz sera: (-1-1.4142135623730951j)\n","name":"stdout"}},"exec_count":9,"start":1497228328559,"input":"print(\"A cara da equacao e de: A*x**2 + B*x + C = 0.\")\nA=float(input(\"Insira o valor de A.\"))\nB=float(input(\"Insira o valor de B.\"))\nC=float(input(\"Insira o valor de C.\"))\ndelta=(B**2-4*A*C)**(1/2)\nX1=(-B+delta)/(2*A)\nprint (\"A primeira raiz sera:\", X1)\nX2=(-B-delta)/(2*A)\nprint(\"A segunda raiz sera:\", X2)","state":"done","pos":15,"type":"cell","end":1497228335077,"id":"e059a1","kernel":"python3"}
{"type":"cell","id":"7fa7e8","pos":16,"input":"#### Exercícios 4\n- Crie 12 arquivos, chamados de 'arq_mes_estação.txt'. Cada um deles contendo a frase: \"A minha estação predileta é 'estação', especialmente 'mês'\"  repetida um número aleatório de vezes, entre 5 e 20. Comprima essas arquivos usando o comando gzip. Faça isso utilizando o conceito de dicionários.","cell_type":"markdown"}
{"output":{"0":{"text":"Overwriting arq_janeiro_verão.txt\n","name":"stdout"}},"exec_count":11,"start":1497228342369,"input":"%%writefile arq_janeiro_verão.txt\nA minha estação predileta é o Verão, especialmente em janeiro.","state":"done","pos":17,"type":"cell","end":1497228342394,"id":"41795a","kernel":"python3"}
{"output":{"0":{"text":"A minha estação predileta é o Verão, especialmente em janeiro.\nA minha estação predileta é o Verão, especialmente em janeiro.\nA minha estação predileta é o Verão, especialmente em janeiro.\nA minha estação predileta é o Verão, especialmente em janeiro.\nA minha estação predileta é o Verão, especialmente em janeiro.\nA minha estação predileta é o Verão, especialmente em janeiro.\nA minha estação predileta é o Verão, especialmente em janeiro.\n","name":"stdout"}},"exec_count":12,"start":1497228344359,"input":"r=random.randint(5,20)\ni=0\nwhile i<r:\n    with open('arq_janeiro_verão.txt', 'r') as f:\n        print(f.read())\n    i+=1","state":"done","pos":18,"type":"cell","end":1497228344376,"id":"6e4d1c","kernel":"python3"}
{"exec_count":10,"start":1497228340607,"input":"import random","state":"done","pos":16.5,"type":"cell","end":1497228340664,"id":"82eb0f","kernel":"python3"}
{"output":{"0":{"text":"Overwriting arq_fevereiro_verão.txt\n","name":"stdout"}},"exec_count":13,"start":1497228345827,"input":"%%writefile arq_fevereiro_verão.txt\nA minha estação predileta é o verão, especialmente o mês de Fevereiro.","state":"done","pos":22,"type":"cell","end":1497228345873,"id":"834308","kernel":"python3"}
{"output":{"0":{"text":"A minha estação predileta é o verão, especialmente o mês de Fevereiro.\nA minha estação predileta é o verão, especialmente o mês de Fevereiro.\nA minha estação predileta é o verão, especialmente o mês de Fevereiro.\nA minha estação predileta é o verão, especialmente o mês de Fevereiro.\nA minha estação predileta é o verão, especialmente o mês de Fevereiro.\nA minha estação predileta é o verão, especialmente o mês de Fevereiro.\n","name":"stdout"}},"exec_count":14,"start":1497228346340,"input":"r=random.randint(5,20)\nfor i in range(0,r):\n    with open('arq_fevereiro_verão.txt','r') as f:\n        print(f.read())","state":"done","pos":23,"type":"cell","end":1497228346375,"id":"5ab7cd","kernel":"python3"}
{"output":{"0":{"text":"Overwriting arq_março_outono.txt\n","name":"stdout"}},"exec_count":15,"start":1497228346859,"input":"%%writefile arq_março_outono.txt\nA minha estação predileta é o outono, especialmente o mês de Março.","state":"done","pos":24,"type":"cell","end":1497228346875,"id":"2606be","kernel":"python3"}
{"output":{"0":{"text":"A minha estação predileta é o outono, especialmente o mês de Março.\nA minha estação predileta é o outono, especialmente o mês de Março.\nA minha estação predileta é o outono, especialmente o mês de Março.\nA minha estação predileta é o outono, especialmente o mês de Março.\nA minha estação predileta é o outono, especialmente o mês de Março.\nA minha estação predileta é o outono, especialmente o mês de Março.\nA minha estação predileta é o outono, especialmente o mês de Março.\n","name":"stdout"}},"exec_count":16,"start":1497228347359,"input":"r=random.randint(5,20)\nfor i in range(0,r):\n    with open('arq_março_outono.txt','r') as f:\n        print(f.read())","state":"done","pos":25,"type":"cell","end":1497228347370,"id":"b6550b","kernel":"python3"}
{"output":{"0":{"text":"Overwriting arq_abril_outono.txt\n","name":"stdout"}},"exec_count":17,"start":1497228347839,"input":"%%writefile arq_abril_outono.txt\nA minha estação predileta é o outono, especialmente o mês de abril","state":"done","pos":26,"type":"cell","end":1497228347843,"id":"8984e6","kernel":"python3"}
{"output":{"0":{"text":"A minha estação predileta é o outono, especialmente o mês de abril\nA minha estação predileta é o outono, especialmente o mês de abril\nA minha estação predileta é o outono, especialmente o mês de abril\nA minha estação predileta é o outono, especialmente o mês de abril\nA minha estação predileta é o outono, especialmente o mês de abril\nA minha estação predileta é o outono, especialmente o mês de abril\nA minha estação predileta é o outono, especialmente o mês de abril\nA minha estação predileta é o outono, especialmente o mês de abril\nA minha estação predileta é o outono, especialmente o mês de abril\nA minha estação predileta é o outono, especialmente o mês de abril\n","name":"stdout"}},"exec_count":18,"start":1497228349677,"input":"r=random.randint(5,20)\nfor i in range(0,r):\n    with open('arq_abril_outono.txt','r') as f:\n        print(f.read())","state":"done","pos":27,"type":"cell","end":1497228349777,"id":"4dc3ef","kernel":"python3"}
{"output":{"0":{"text":"Overwriting arq_maio_outono.txt\n","name":"stdout"}},"exec_count":19,"start":1497228351514,"input":"%%writefile arq_maio_outono.txt\nA minha estação predileta é o outono, especialmente o mês de maio.","state":"done","pos":28,"type":"cell","end":1497228351570,"id":"c7b106","kernel":"python3"}
{"output":{"0":{"text":"A minha estação predileta é o outono, especialmente o mês de maio.\nA minha estação predileta é o outono, especialmente o mês de maio.\nA minha estação predileta é o outono, especialmente o mês de maio.\nA minha estação predileta é o outono, especialmente o mês de maio.\nA minha estação predileta é o outono, especialmente o mês de maio.\nA minha estação predileta é o outono, especialmente o mês de maio.\nA minha estação predileta é o outono, especialmente o mês de maio.\n","name":"stdout"}},"exec_count":20,"start":1497228353017,"input":"r=random.randint(5,20)\nfor i in range(0,r):\n    with open('arq_maio_outono.txt','r') as f:\n        print(f.read())","state":"done","pos":29,"type":"cell","end":1497228353076,"id":"cc9285","kernel":"python3"}
{"output":{"0":{"text":"Overwriting arq_junho_outono.txt\n","name":"stdout"}},"exec_count":21,"start":1497228354559,"input":"%%writefile arq_junho_outono.txt\nA minha estação predileta é a outono, especialmente o mês de junho. ","state":"done","pos":30,"type":"cell","end":1497228354572,"id":"efd9bd","kernel":"python3"}
{"output":{"0":{"text":"A minha estação predileta é a outono, especialmente o mês de junho.\nA minha estação predileta é a outono, especialmente o mês de junho.\nA minha estação predileta é a outono, especialmente o mês de junho.\nA minha estação predileta é a outono, especialmente o mês de junho.\nA minha estação predileta é a outono, especialmente o mês de junho.\nA minha estação predileta é a outono, especialmente o mês de junho.\nA minha estação predileta é a outono, especialmente o mês de junho.\nA minha estação predileta é a outono, especialmente o mês de junho.\nA minha estação predileta é a outono, especialmente o mês de junho.\nA minha estação predileta é a outono, especialmente o mês de junho.\nA minha estação predileta é a outono, especialmente o mês de junho.\n","name":"stdout"}},"exec_count":22,"start":1497228355559,"input":"r=random.randint(5,20)\nfor i in range(0,r):\n    with open('arq_junho_outono.txt','r') as f:\n        print(f.read())","state":"done","pos":31,"type":"cell","end":1497228355579,"id":"e0b9a5","kernel":"python3"}
{"output":{"0":{"text":"Overwriting arq_julho_inverno.txt\n","name":"stdout"}},"exec_count":23,"start":1497228356523,"input":"%%writefile arq_julho_inverno.txt\nA minha estação predileta é o inverno, especialmente o mês de julho. ","state":"done","pos":32,"type":"cell","end":1497228356526,"id":"a4c399","kernel":"python3"}
{"output":{"0":{"text":"A minha estação predileta é o inverno, especialmente o mês de julho.\nA minha estação predileta é o inverno, especialmente o mês de julho.\nA minha estação predileta é o inverno, especialmente o mês de julho.\nA minha estação predileta é o inverno, especialmente o mês de julho.\nA minha estação predileta é o inverno, especialmente o mês de julho.\nA minha estação predileta é o inverno, especialmente o mês de julho.\nA minha estação predileta é o inverno, especialmente o mês de julho.\nA minha estação predileta é o inverno, especialmente o mês de julho.\nA minha estação predileta é o inverno, especialmente o mês de julho.\n","name":"stdout"}},"exec_count":24,"start":1497228356530,"input":"r=random.randint(5,20)\nfor i in range(0,r):\n    with open('arq_julho_inverno.txt','r') as f:\n        print(f.read())","state":"done","pos":33,"type":"cell","end":1497228356535,"id":"9f28c2","kernel":"python3"}
{"output":{"0":{"text":"Overwriting arq_agosto_inverno.txt\n","name":"stdout"}},"exec_count":25,"start":1497228357523,"input":"%%writefile arq_agosto_inverno.txt\nA minha estação predileta é o inverno, especialmente o mês de agosto.","state":"done","pos":34,"type":"cell","end":1497228357574,"id":"be7c6c","kernel":"python3"}
{"output":{"0":{"text":"A minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\nA minha estação predileta é o inverno, especialmente o mês de agosto.\n","name":"stdout"}},"exec_count":26,"start":1497228358559,"input":"r=random.randint(5,20)\nfor i in range(0,r):\n    with open('arq_agosto_inverno.txt','r') as f:\n        print(f.read())","state":"done","pos":35,"type":"cell","end":1497228358575,"id":"cb4144","kernel":"python3"}
{"output":{"0":{"text":"Overwriting arq_setembro_inverno.txt\n","name":"stdout"}},"exec_count":27,"start":1497228358579,"input":"%%writefile arq_setembro_inverno.txt\nA minha estação predileta é o inverno, especialmente o mês de setembro.","state":"done","pos":36,"type":"cell","end":1497228358582,"id":"757c4a","kernel":"python3"}
{"output":{"0":{"text":"A minha estação predileta é o inverno, especialmente o mês de setembro.\nA minha estação predileta é o inverno, especialmente o mês de setembro.\nA minha estação predileta é o inverno, especialmente o mês de setembro.\nA minha estação predileta é o inverno, especialmente o mês de setembro.\nA minha estação predileta é o inverno, especialmente o mês de setembro.\nA minha estação predileta é o inverno, especialmente o mês de setembro.\nA minha estação predileta é o inverno, especialmente o mês de setembro.\nA minha estação predileta é o inverno, especialmente o mês de setembro.\n","name":"stdout"}},"exec_count":28,"start":1497228359035,"input":"r=random.randint(5,20)\nfor i in range(0,r):\n    with open('arq_setembro_inverno.txt','r') as f:\n        print(f.read())","state":"done","pos":37,"type":"cell","end":1497228359063,"id":"5bf6b3","kernel":"python3"}
{"output":{"0":{"text":"Overwriting arq_outubro_primavera.txt\n","name":"stdout"}},"exec_count":29,"start":1497228360059,"input":"%%writefile arq_outubro_primavera.txt\nA minha estação predileta é a primavera, especialmente o mês de outubro.","state":"done","pos":38,"type":"cell","end":1497228360062,"id":"ce1991","kernel":"python3"}
{"output":{"0":{"text":"A minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\nA minha estação predileta é a primavera, especialmente o mês de outubro.\n","name":"stdout"}},"exec_count":30,"start":1497228361933,"input":"r=random.randint(5,20)\nfor i in range(0,r):\n    with open('arq_outubro_primavera.txt','r') as f:\n        print(f.read())","state":"done","pos":39,"type":"cell","end":1497228361953,"id":"e0ee2c","kernel":"python3"}
{"output":{"0":{"text":"Overwriting arq_novembro_primavera.txt\n","name":"stdout"}},"exec_count":31,"start":1497228362933,"input":"%%writefile arq_novembro_primavera.txt\nA minha estação predileta é a primavera, especialmente o mês de novembro.","state":"done","pos":40,"type":"cell","end":1497228362977,"id":"102070","kernel":"python3"}
{"output":{"0":{"text":"A minha estação predileta é a primavera, especialmente o mês de novembro.\nA minha estação predileta é a primavera, especialmente o mês de novembro.\nA minha estação predileta é a primavera, especialmente o mês de novembro.\nA minha estação predileta é a primavera, especialmente o mês de novembro.\nA minha estação predileta é a primavera, especialmente o mês de novembro.\nA minha estação predileta é a primavera, especialmente o mês de novembro.\nA minha estação predileta é a primavera, especialmente o mês de novembro.\nA minha estação predileta é a primavera, especialmente o mês de novembro.\n","name":"stdout"}},"exec_count":32,"start":1497228363959,"input":"r=random.randint(5,20)\nfor i in range(0,r):\n    with open('arq_novembro_primavera.txt','r') as f:\n        print(f.read())","state":"done","pos":41,"type":"cell","end":1497228363977,"id":"d6cd07","kernel":"python3"}
{"output":{"0":{"text":"Overwriting arq_dezembro_verão.txt\n","name":"stdout"}},"exec_count":33,"start":1497228363980,"input":"%%writefile arq_dezembro_verão.txt\nA minha estação predileta é o verão, especialmente o mês de Dezembro.","state":"done","pos":42,"type":"cell","end":1497228363984,"id":"930950","kernel":"python3"}
{"output":{"0":{"text":"A minha estação predileta é o verão, especialmente o mês de Dezembro.\nA minha estação predileta é o verão, especialmente o mês de Dezembro.\nA minha estação predileta é o verão, especialmente o mês de Dezembro.\nA minha estação predileta é o verão, especialmente o mês de Dezembro.\nA minha estação predileta é o verão, especialmente o mês de Dezembro.\nA minha estação predileta é o verão, especialmente o mês de Dezembro.\nA minha estação predileta é o verão, especialmente o mês de Dezembro.\nA minha estação predileta é o verão, especialmente o mês de Dezembro.\nA minha estação predileta é o verão, especialmente o mês de Dezembro.\n","name":"stdout"}},"exec_count":34,"start":1497228364959,"input":"r=random.randint(5,20)\nfor i in range(0,r):\n    with open('arq_dezembro_verão.txt','r') as f:\n        print(f.read())","state":"done","pos":43,"type":"cell","end":1497228364964,"id":"f4d23c","kernel":"python3"}
{"type":"cell","id":"3ccfd4","pos":44,"input":"#### Exercícios 5\n1. Com base nos dados de https://pt.wikipedia.org/wiki/Lista_de_epis%C3%B3dios_de_Pok%C3%A9mon Construa um  dataframe para armazenar \nas informações sobre os episódios de Pokemon, contendo: \n- Série\n- Geração\n- Temporada\n- Primeiro Episódio\n- Último Episódio\n- Região\n2. Descubra qual a geração mais longeva\n3. Descubra quantas temporadas durou cada série","cell_type":"markdown"}
{"exec_count":35,"start":1497228365460,"input":"import pandas as pd","state":"done","pos":45,"type":"cell","end":1497228365658,"id":"f9d5e5","kernel":"python3"}
{"output":{"0":{"data":{"text/html":"<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Série</th>\n      <th>Geração</th>\n      <th>Temporada</th>\n      <th>Primeiro Episódio</th>\n      <th>Último Episódio</th>\n      <th>Região</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Série Original</td>\n      <td>Primeira</td>\n      <td>Liga Índigo</td>\n      <td>000</td>\n      <td>083</td>\n      <td>Kanto</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Série Original</td>\n      <td>Primeira</td>\n      <td>Aventuras na Ilha Laranja</td>\n      <td>084</td>\n      <td>118</td>\n      <td>Ilhas Laranjas</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Séria Original</td>\n      <td>Segunda</td>\n      <td>A Jornada de Johto</td>\n      <td>119</td>\n      <td>159</td>\n      <td>Johyo</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Séria Original</td>\n      <td>Segunda</td>\n      <td>Campeões da Liga de Jhoto</td>\n      <td>160</td>\n      <td>211</td>\n      <td>Johyo</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Séria Original</td>\n      <td>Segunda</td>\n      <td>Master Quest</td>\n      <td>212</td>\n      <td>276</td>\n      <td>Johyo</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Geração Avançada</td>\n      <td>Terçeira</td>\n      <td>Pokémon: Avançado</td>\n      <td>277</td>\n      <td>316</td>\n      <td>Hoenn</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Geração Avançada</td>\n      <td>Terçeira</td>\n      <td>Desafio Avançado</td>\n      <td>317</td>\n      <td>368</td>\n      <td>Hoenn</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Geração Avançada</td>\n      <td>Terçeira</td>\n      <td>Batalha Avançada</td>\n      <td>369</td>\n      <td>421</td>\n      <td>Hoenn</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Geração Avançada</td>\n      <td>Terçeira</td>\n      <td>Batalha da Fronteira</td>\n      <td>422</td>\n      <td>468</td>\n      <td>Kanto</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Diamante e Pérola</td>\n      <td>Qarta</td>\n      <td>Diamante e Pérola</td>\n      <td>469</td>\n      <td>520</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Diamante e Pérola</td>\n      <td>Qarta</td>\n      <td>Batalha Dimensional</td>\n      <td>521</td>\n      <td>572</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Diamante e Pérola</td>\n      <td>Qarta</td>\n      <td>Batalha Glácticas</td>\n      <td>573</td>\n      <td>625</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Diamante e Pérola</td>\n      <td>Qarta</td>\n      <td>Vencedores da Liga Sinnoh</td>\n      <td>626</td>\n      <td>659</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Preto e Branco</td>\n      <td>Quinta</td>\n      <td>Preto e Branco</td>\n      <td>660</td>\n      <td>707</td>\n      <td>Unova</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Preto e Branco</td>\n      <td>Quinta</td>\n      <td>Destinos Rivais</td>\n      <td>708</td>\n      <td>756</td>\n      <td>Unova</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Preto e Branco</td>\n      <td>Quinta</td>\n      <td>Aventuras em Unova (e Mais Além)</td>\n      <td>757</td>\n      <td>803</td>\n      <td>Unova</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>XY</td>\n      <td>Sexta</td>\n      <td>A Série XY</td>\n      <td>804</td>\n      <td>852</td>\n      <td>Kalos</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>XY</td>\n      <td>Sexta</td>\n      <td>Kalos Quest</td>\n      <td>853</td>\n      <td>897</td>\n      <td>Kalos</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>XY</td>\n      <td>Sexta</td>\n      <td>XY e Z</td>\n      <td>898</td>\n      <td>946</td>\n      <td>Kalos</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Sun and Moon</td>\n      <td>Sétima</td>\n      <td>Sun and Moon</td>\n      <td>947</td>\n      <td>--</td>\n      <td>Alola</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":36}},"exec_count":36,"start":1497228367455,"input":"dict=[{'Série':'Série Original' , 'Geração':'Primeira' , 'Temporada':'Liga Índigo', 'Primeiro Episódio':'000' , 'Último Episódio':'083', 'Região':'Kanto'},\n      {'Série': 'Série Original' , 'Geração':'Primeira' , 'Temporada':'Aventuras na Ilha Laranja' , 'Primeiro Episódio':'084' , 'Último Episódio':'118' , 'Região':'Ilhas Laranjas'},\n     {'Série':'Séria Original' , 'Geração':'Segunda' , 'Temporada':'A Jornada de Johto' , 'Primeiro Episódio':'119' , 'Último Episódio':'159' , 'Região':'Johyo'},\n     {'Série':'Séria Original' , 'Geração':'Segunda' , 'Temporada':'Campeões da Liga de Jhoto' , 'Primeiro Episódio':'160' , 'Último Episódio':'211' , 'Região':'Johyo'},\n     {'Série':'Séria Original' , 'Geração':'Segunda' , 'Temporada':'Master Quest' , 'Primeiro Episódio':'212' , 'Último Episódio':'276' , 'Região':'Johyo'},\n     {'Série':'Geração Avançada' , 'Geração':'Terçeira' , 'Temporada':'Pokémon: Avançado' , 'Primeiro Episódio':'277' , 'Último Episódio':'316' , 'Região':'Hoenn'},\n     {'Série':'Geração Avançada' , 'Geração':'Terçeira' , 'Temporada':'Desafio Avançado' , 'Primeiro Episódio':'317' , 'Último Episódio':'368' , 'Região':'Hoenn'},\n     {'Série':'Geração Avançada' , 'Geração':'Terçeira' , 'Temporada':'Batalha Avançada' , 'Primeiro Episódio':'369' , 'Último Episódio':'421' , 'Região':'Hoenn'},\n     {'Série':'Geração Avançada' , 'Geração':'Terçeira' , 'Temporada':'Batalha da Fronteira' , 'Primeiro Episódio':'422' , 'Último Episódio':'468' , 'Região':'Kanto'},\n     {'Série':'Diamante e Pérola' , 'Geração':'Qarta' , 'Temporada':'Diamante e Pérola' , 'Primeiro Episódio':'469' , 'Último Episódio':'520' , 'Região':'Sinnoh'},\n     {'Série':'Diamante e Pérola' , 'Geração':'Qarta' , 'Temporada':'Batalha Dimensional' , 'Primeiro Episódio':'521' , 'Último Episódio':'572' , 'Região':'Sinnoh'},\n     {'Série':'Diamante e Pérola' , 'Geração':'Qarta' , 'Temporada':'Batalha Glácticas' , 'Primeiro Episódio':'573' , 'Último Episódio':'625' , 'Região':'Sinnoh'},\n     {'Série':'Diamante e Pérola' , 'Geração':'Qarta' , 'Temporada':'Vencedores da Liga Sinnoh' , 'Primeiro Episódio':'626' , 'Último Episódio':'659' , 'Região':'Sinnoh'},\n     {'Série':'Preto e Branco' , 'Geração':'Quinta' , 'Temporada':'Preto e Branco' , 'Primeiro Episódio':'660' , 'Último Episódio':'707' , 'Região':'Unova'},\n     {'Série':'Preto e Branco' , 'Geração':'Quinta' , 'Temporada':'Destinos Rivais' , 'Primeiro Episódio':'708' , 'Último Episódio':'756' , 'Região':'Unova'},\n     {'Série':'Preto e Branco' , 'Geração':'Quinta' , 'Temporada':'Aventuras em Unova (e Mais Além)' , 'Primeiro Episódio':'757' , 'Último Episódio':'803' , 'Região':'Unova'},\n     {'Série':'XY' , 'Geração':'Sexta' , 'Temporada':'A Série XY' , 'Primeiro Episódio':'804' , 'Último Episódio':'852' , 'Região':'Kalos'},\n     {'Série':'XY' , 'Geração':'Sexta' , 'Temporada':'Kalos Quest' , 'Primeiro Episódio':'853' , 'Último Episódio':'897' , 'Região':'Kalos'},\n     {'Série':'XY' , 'Geração':'Sexta' , 'Temporada':'XY e Z' , 'Primeiro Episódio':'898' , 'Último Episódio':'946' , 'Região':'Kalos'},\n     {'Série':'Sun and Moon' , 'Geração':'Sétima' , 'Temporada':'Sun and Moon' , 'Primeiro Episódio':'947' , 'Último Episódio':'--' , 'Região':'Alola'}]\ndf=pd.DataFrame(dict)\ndf[['Série' , 'Geração' , 'Temporada' , 'Primeiro Episódio' , 'Último Episódio', 'Região']]","state":"done","pos":46,"type":"cell","end":1497228367519,"id":"a38cf5","kernel":"python3"}
{"output":{"0":{"data":{"text/html":"<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Primeiro Episódio</th>\n      <th>Último Episódio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>000</td>\n      <td>083</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>084</td>\n      <td>118</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>119</td>\n      <td>159</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>160</td>\n      <td>211</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>212</td>\n      <td>276</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>277</td>\n      <td>316</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>317</td>\n      <td>368</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>369</td>\n      <td>421</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>422</td>\n      <td>468</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>469</td>\n      <td>520</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>521</td>\n      <td>572</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>573</td>\n      <td>625</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>626</td>\n      <td>659</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>660</td>\n      <td>707</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>708</td>\n      <td>756</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>757</td>\n      <td>803</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>804</td>\n      <td>852</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>853</td>\n      <td>897</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>898</td>\n      <td>946</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>947</td>\n      <td>--</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":37}},"exec_count":37,"start":1497228368965,"input":"df[['Primeiro Episódio' , 'Último Episódio']]","state":"done","pos":47,"type":"cell","end":1497228368978,"id":"1f85a7","kernel":"python3"}
{"output":{"0":{"data":{"text/html":"<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Diferença</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>84</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>34</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>64</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>39</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>52</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>46</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>52</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>33</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>47</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>48</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>46</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>48</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>44</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>48</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>--</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":38}},"exec_count":38,"start":1497228369479,"input":"dict1=[{'Diferença':'84'},{'Diferença':'34'},{'Diferença':'40'},{'Diferença':'51'},{'Diferença':'64'},{'Diferença':'39'},\n       {'Diferença':'51'},{'Diferença':'52'},{'Diferença':'46'},{'Diferença':'51'},{'Diferença':'51'},{'Diferença':'52'},\n       {'Diferença':'33'},{'Diferença':'47'},{'Diferença':'48'},{'Diferença':'46'},{'Diferença':'48'},{'Diferença':'44'},\n       {'Diferença':'48'},{'Diferença':'--'}]\ndf1=pd.DataFrame(dict1)\ndf1[['Diferença']]","state":"done","pos":48,"type":"cell","end":1497228369481,"id":"39c181","kernel":"python3"}
{"output":{"0":{"data":{"text/plain":"'84'"},"exec_count":39}},"exec_count":39,"start":1497228369483,"input":"df1['Diferença'].max()","state":"done","pos":49,"type":"cell","end":1497228369490,"id":"8d963b","kernel":"python3"}
{"output":{"0":{"data":{"text/plain":"Geração                    Primeira\nPrimeiro Episódio               000\nRegião                        Kanto\nSérie                Série Original\nTemporada               Liga Índigo\nÚltimo Episódio                 083\nName: 0, dtype: object"},"exec_count":40}},"exec_count":40,"start":1497228369969,"input":"df.ix[0]","state":"done","pos":50,"type":"cell","end":1497228369982,"id":"86bec8","kernel":"python3"}
{"output":{"0":{"data":{"text/html":"<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Série</th>\n      <th>Quantidade de temporadas</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Série Original</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Geração Avançada</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Diamante e Pérola</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Preto e Branco</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>XY</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Sun and Moon</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":41}},"exec_count":41,"start":1497228370967,"input":"series=[{'Série':'Série Original' , 'Quantidade de temporadas':'5'},\n        {'Série':'Geração Avançada' , 'Quantidade de temporadas':'4'},\n        {'Série':'Diamante e Pérola' , 'Quantidade de temporadas':'4'},\n        {'Série':'Preto e Branco' , 'Quantidade de temporadas':'3'},\n        {'Série':'XY' , 'Quantidade de temporadas':'3'},\n        {'Série': 'Sun and Moon' , 'Quantidade de temporadas':'1'}]\ndf3=pd.DataFrame(series)\ndf3[['Série' , 'Quantidade de temporadas']]","state":"done","pos":51,"type":"cell","end":1497228370989,"id":"5fe6ee","kernel":"python3"}
{"type":"cell","id":"911a1c","pos":52,"input":"#### Exercício 6\n- Passo 1: Gere um arquivo com 10 notas de cinco alunos (Deve conter o nome do aluno e as notas).\n- Passo 2: Em seguida crie uma array em numpy com essas notas.\n- Passo 3: Crie um DataFrame dessas notas.\n- Passo 4: Identifique qual menor nota e quem foi o aluno que obteve essa nota\n- Passo 5: Identifique o aluno que tirou as melhores notas.","cell_type":"markdown"}
{"exec_count":43,"start":1497228374424,"input":"Alunos=[{'Nome':'Carlos' , 'Nota 1':'9.9', 'Nota 2':'9.9'},\n       {'Nome':'André' , 'Nota 1':'1', 'Nota 2':'2'}, \n       {'Nome':'Paulo', 'Nota 1':'8', 'Nota 2':'7.5'},\n       {'Nome':'Gustavo' , 'Nota 1':'9', 'Nota 2':'9.5'},\n       {'Nome':'Daniela' , 'Nota 1':'2', 'Nota 2':'6'}]\nAlunosM=[['Carlos' , '9.9', '9.9'],\n       ['André' , '5', '7'], \n       ['Paulo', '8', '7.5'],\n       ['Gustavo' , '9', '9.5'],\n       ['Daniela' , '2', '6']]","state":"done","pos":53,"type":"cell","end":1497228374462,"id":"2a8be2","kernel":"python3"}
{"exec_count":44,"start":1497228376259,"input":"import numpy as np","state":"done","pos":54,"type":"cell","end":1497228376262,"id":"5b3443","kernel":"python3"}
{"exec_count":45,"start":1497228377739,"input":"import pandas as pd","state":"done","pos":55,"type":"cell","end":1497228377760,"id":"77968e","kernel":"python3"}
{"exec_count":46,"start":1497228378959,"input":"matriz=np.array(AlunosM)","state":"done","pos":56,"type":"cell","end":1497228378961,"id":"fca428","kernel":"python3"}
{"output":{"0":{"data":{"text/plain":"array([['Carlos', '9.9', '9.9'],\n       ['André', '5', '7'],\n       ['Paulo', '8', '7.5'],\n       ['Gustavo', '9', '9.5'],\n       ['Daniela', '2', '6']], \n      dtype='<U7')"},"exec_count":47}},"exec_count":47,"start":1497228382852,"input":"matriz","state":"done","pos":57,"type":"cell","end":1497228382867,"id":"7dbd99","kernel":"python3"}
{"output":{"0":{"data":{"text/html":"<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Nome</th>\n      <th>Nota 1</th>\n      <th>Nota 2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Carlos</td>\n      <td>9.9</td>\n      <td>9.9</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>André</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Paulo</td>\n      <td>8</td>\n      <td>7.5</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Gustavo</td>\n      <td>9</td>\n      <td>9.5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Daniela</td>\n      <td>2</td>\n      <td>6</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":48}},"exec_count":48,"start":1497228383365,"input":"df22=pd.DataFrame(Alunos)\ndf22[['Nome' , 'Nota 1' , 'Nota 2']]","state":"done","pos":58,"type":"cell","end":1497228383367,"id":"d2aa86","kernel":"python3"}
{"output":{"0":{"data":{"text/plain":"Nome      André\nNota 1        1\nNota 2        2\ndtype: object"},"exec_count":49}},"exec_count":49,"start":1497228383859,"input":"df22.min()","state":"done","pos":63,"type":"cell","end":1497228383872,"id":"cadbe4","kernel":"python3"}
{"type":"cell","id":"78248d","pos":66,"input":"#### Exercicio 7\n- O Jogo da Vida (The Game of Life) é um autômato celular (cellular automaton) introduzido por John Horton Conway em 1970. Um automato celular consiste de uma rede de células. Cada célula pode estar em um número finito de estados, como morta ou viva. O “jogo” é na verdade uma simulação que permite observar a evolução de um processo a partir de uma certa condição inicial.\n- O jogo se desenvolve sobre uma matriz bi-dimensional que pode ser tão grande quanto se queira. Vamos chamar essa matriz de mapa. Cada posição ou célula do mapa pode estar vazia (= célula morta) ou ocupada por um agente (= célula viva). Cada posição possui também até 8 posições vizinhas: imediatamente acima, abaixo, aos lados e nas diagonais. Em um determinado instante, o mapa contém uma geração de agentes. A geração no instante seguinte é determinada segundo as regras abaixo:\n- Novos agentes nascem em células vazias que possuam exatamente 3 agentes vizinhos;\n- **Agentes com 2 ou 3 agentes vizinhos sobrevivem;**\n- **Agentes com menos de 2 agentes vizinhos morrem for falta de recursos;**\n- **Agentes com mais de 3 agentes vizinhos morrem por excesso de competição.**","cell_type":"markdown"}
{"type":"cell","id":"d77e7f","pos":67,"input":""}
{"output":{"0":{"text":"Overwriting notas.txt\n","name":"stdout"}},"exec_count":42,"start":1497228372959,"input":"%%writefile notas.txt\nNey 10, 10 ","state":"done","pos":52.5,"type":"cell","end":1497228372973,"id":"7da3e2","kernel":"python3"}
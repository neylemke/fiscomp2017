{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[7, 4, 3, 6, 8, 2, 3, 7, 1, 3, 6, 9, 6, 6, 1, 7, 8, 3, 6, 9, 1, 5, 3, 2, 7, 1, 9, 5, 7, 3, 9, 4, 4, 2, 1, 3, 5, 9, 3, 0, 1, 3, 8, 1, 1, 8, 5, 5, 3, 6, 0, 9, 7, 6, 1, 9, 8, 7, 1, 4, 7, 0, 1, 8, 6, 7, 6, 2, 9, 8, 7, 9, 1, 0, 8, 0, 9, 0, 4, 3, 2, 3, 8, 1, 0, 4, 3, 5, 0, 7, 2, 4, 1, 7, 3, 0, 2, 1, 9, 3]\n",
      "Intervalo medio entre o numero 7 e 4 = -3\n",
      "Intervalo medio entre o numero 4 e 3 = -1\n",
      "Intervalo medio entre o numero 3 e 6 = 3\n",
      "Intervalo medio entre o numero 6 e 8 = 2\n",
      "Intervalo medio entre o numero 8 e 2 = -6\n",
      "Intervalo medio entre o numero 2 e 3 = 1\n",
      "Intervalo medio entre o numero 3 e 7 = 4\n",
      "Intervalo medio entre o numero 7 e 1 = -6\n",
      "Intervalo medio entre o numero 1 e 3 = 2\n",
      "Intervalo medio entre o numero 3 e 6 = 3\n",
      "Intervalo medio entre o numero 6 e 9 = 3\n",
      "Intervalo medio entre o numero 9 e 6 = -3\n",
      "Intervalo medio entre o numero 6 e 6 = 0\n",
      "Intervalo medio entre o numero 6 e 1 = -5\n",
      "Intervalo medio entre o numero 1 e 7 = 6\n",
      "Intervalo medio entre o numero 7 e 8 = 1\n",
      "Intervalo medio entre o numero 8 e 3 = -5\n",
      "Intervalo medio entre o numero 3 e 6 = 3\n",
      "Intervalo medio entre o numero 6 e 9 = 3\n",
      "Intervalo medio entre o numero 9 e 1 = -8\n",
      "Intervalo medio entre o numero 1 e 5 = 4\n",
      "Intervalo medio entre o numero 5 e 3 = -2\n",
      "Intervalo medio entre o numero 3 e 2 = -1\n",
      "Intervalo medio entre o numero 2 e 7 = 5\n",
      "Intervalo medio entre o numero 7 e 1 = -6\n",
      "Intervalo medio entre o numero 1 e 9 = 8\n",
      "Intervalo medio entre o numero 9 e 5 = -4\n",
      "Intervalo medio entre o numero 5 e 7 = 2\n",
      "Intervalo medio entre o numero 7 e 3 = -4\n",
      "Intervalo medio entre o numero 3 e 9 = 6\n",
      "Intervalo medio entre o numero 9 e 4 = -5\n",
      "Intervalo medio entre o numero 4 e 4 = 0\n",
      "Intervalo medio entre o numero 4 e 2 = -2\n",
      "Intervalo medio entre o numero 2 e 1 = -1\n",
      "Intervalo medio entre o numero 1 e 3 = 2\n",
      "Intervalo medio entre o numero 3 e 5 = 2\n",
      "Intervalo medio entre o numero 5 e 9 = 4\n",
      "Intervalo medio entre o numero 9 e 3 = -6\n",
      "Intervalo medio entre o numero 3 e 0 = -3\n",
      "Intervalo medio entre o numero 0 e 1 = 1\n",
      "Intervalo medio entre o numero 1 e 3 = 2\n",
      "Intervalo medio entre o numero 3 e 8 = 5\n",
      "Intervalo medio entre o numero 8 e 1 = -7\n",
      "Intervalo medio entre o numero 1 e 1 = 0\n",
      "Intervalo medio entre o numero 1 e 8 = 7\n",
      "Intervalo medio entre o numero 8 e 5 = -3\n",
      "Intervalo medio entre o numero 5 e 5 = 0\n",
      "Intervalo medio entre o numero 5 e 3 = -2\n",
      "Intervalo medio entre o numero 3 e 6 = 3\n",
      "Intervalo medio entre o numero 6 e 0 = -6\n",
      "Intervalo medio entre o numero 0 e 9 = 9\n",
      "Intervalo medio entre o numero 9 e 7 = -2\n",
      "Intervalo medio entre o numero 7 e 6 = -1\n",
      "Intervalo medio entre o numero 6 e 1 = -5\n",
      "Intervalo medio entre o numero 1 e 9 = 8\n",
      "Intervalo medio entre o numero 9 e 8 = -1\n",
      "Intervalo medio entre o numero 8 e 7 = -1\n",
      "Intervalo medio entre o numero 7 e 1 = -6\n",
      "Intervalo medio entre o numero 1 e 4 = 3\n",
      "Intervalo medio entre o numero 4 e 7 = 3\n",
      "Intervalo medio entre o numero 7 e 0 = -7\n",
      "Intervalo medio entre o numero 0 e 1 = 1\n",
      "Intervalo medio entre o numero 1 e 8 = 7\n",
      "Intervalo medio entre o numero 8 e 6 = -2\n",
      "Intervalo medio entre o numero 6 e 7 = 1\n",
      "Intervalo medio entre o numero 7 e 6 = -1\n",
      "Intervalo medio entre o numero 6 e 2 = -4\n",
      "Intervalo medio entre o numero 2 e 9 = 7\n",
      "Intervalo medio entre o numero 9 e 8 = -1\n",
      "Intervalo medio entre o numero 8 e 7 = -1\n",
      "Intervalo medio entre o numero 7 e 9 = 2\n",
      "Intervalo medio entre o numero 9 e 1 = -8\n",
      "Intervalo medio entre o numero 1 e 0 = -1\n",
      "Intervalo medio entre o numero 0 e 8 = 8\n",
      "Intervalo medio entre o numero 8 e 0 = -8\n",
      "Intervalo medio entre o numero 0 e 9 = 9\n",
      "Intervalo medio entre o numero 9 e 0 = -9\n",
      "Intervalo medio entre o numero 0 e 4 = 4\n",
      "Intervalo medio entre o numero 4 e 3 = -1\n",
      "Intervalo medio entre o numero 3 e 2 = -1\n",
      "Intervalo medio entre o numero 2 e 3 = 1\n",
      "Intervalo medio entre o numero 3 e 8 = 5\n",
      "Intervalo medio entre o numero 8 e 1 = -7\n",
      "Intervalo medio entre o numero 1 e 0 = -1\n",
      "Intervalo medio entre o numero 0 e 4 = 4\n",
      "Intervalo medio entre o numero 4 e 3 = -1\n",
      "Intervalo medio entre o numero 3 e 5 = 2\n",
      "Intervalo medio entre o numero 5 e 0 = -5\n",
      "Intervalo medio entre o numero 0 e 7 = 7\n",
      "Intervalo medio entre o numero 7 e 2 = -5\n",
      "Intervalo medio entre o numero 2 e 4 = 2\n",
      "Intervalo medio entre o numero 4 e 1 = -3\n",
      "Intervalo medio entre o numero 1 e 7 = 6\n",
      "Intervalo medio entre o numero 7 e 3 = -4\n",
      "Intervalo medio entre o numero 3 e 0 = -3\n",
      "Intervalo medio entre o numero 0 e 2 = 2\n",
      "Intervalo medio entre o numero 2 e 1 = -1\n",
      "Intervalo medio entre o numero 1 e 9 = 8\n",
      "Intervalo medio entre o numero 9 e 3 = -6\n"
     ]
    }
   ],
   "source": [
    "#Exercicio 1\n",
    "import random\n",
    "\n",
    "lista = []\n",
    "for i in range(100):\n",
    "    lista.append(random.randint(0,9))\n",
    "print(lista)\n",
    "for i in range(len(lista)-1):\n",
    "    print (\"Intervalo medio entre o numero \"+str(lista[i])+\" e \"+str(lista[1+i])+\" = \"+str(lista[i+1] - lista[i]))\n",
    "   \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 0,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "#Exercicios 2\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 0,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "#Exercicio 3\n",
    "\n",
    "import math \n",
    "     #De os valores para a, b e c respectivamente\n",
    "a = int(input(\"Digite um valor para A: \"))\n",
    "b = int(input(\"Digite um valor para B: \"))\n",
    "c = int(input(\"Digite um valor para C: \"))\n",
    "\n",
    "#Calculando o delta\n",
    "\n",
    "delta = b*b - 4 * a * c\n",
    "\n",
    "\n",
    "if delta < 0:\n",
    "    print(\"A equacao possui raizes imaginarias\")\n",
    "elif delta == 0:\n",
    "    raiz = (-1*b + math.sqrt(delta))/(2 * a)\n",
    "    print(\"A equacao possui apenas uma raiz \",raiz)\n",
    "elif delta > 0:\n",
    "    raiz1 =(-1*b + math.sqrt(delta))/(2 * a)\n",
    "    raiz2 =(-1*b - math.sqrt(delta))/(2 * a)\n",
    "    print(\"As raizes da equacao sao \",raiz1, \"e\",raiz2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  adding: arq_Janeiro_Verao.txt (deflated 86%)\r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "updating: arq_Janeiro_Verao.txt (deflated 86%)\r\n",
      "  adding: arq_Fevereiro_Verao.txt (deflated 86%)\r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "updating: arq_Janeiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Fevereiro_Verao.txt (deflated 86%)\r\n",
      "  adding: arq_Março_Verao.txt (deflated 84%)\r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "updating: arq_Janeiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Fevereiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Março_Verao.txt (deflated 84%)\r\n",
      "  adding: arq_Abril_Outono.txt (deflated 92%)\r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "updating: arq_Janeiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Fevereiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Março_Verao.txt (deflated 84%)\r\n",
      "updating: arq_Abril_Outono.txt (deflated 92%)\r\n",
      "  adding: arq_Maio_Outono.txt (deflated 86%)\r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "updating: arq_Janeiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Fevereiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Março_Verao.txt (deflated 84%)\r\n",
      "updating: arq_Abril_Outono.txt (deflated 92%)\r\n",
      "updating: arq_Maio_Outono.txt (deflated 86%)\r\n",
      "  adding: arq_Junho_Outono.txt (deflated 94%)\r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "updating: arq_Janeiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Fevereiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Março_Verao.txt (deflated 84%)\r\n",
      "updating: arq_Abril_Outono.txt (deflated 92%)\r\n",
      "updating: arq_Maio_Outono.txt (deflated 86%)\r\n",
      "updating: arq_Junho_Outono.txt (deflated 94%)\r\n",
      "  adding: arq_Julho_Inverno.txt (deflated 90%)\r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "updating: arq_Janeiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Fevereiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Março_Verao.txt (deflated 84%)\r\n",
      "updating: arq_Abril_Outono.txt (deflated 92%)\r\n",
      "updating: arq_Maio_Outono.txt (deflated 86%)\r\n",
      "updating: arq_Junho_Outono.txt (deflated 94%)\r\n",
      "updating: arq_Julho_Inverno.txt (deflated 90%)\r\n",
      "  adding: arq_Agosto_Inverno.txt (deflated 93%)\r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "updating: arq_Janeiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Fevereiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Março_Verao.txt (deflated 84%)\r\n",
      "updating: arq_Abril_Outono.txt (deflated 92%)\r\n",
      "updating: arq_Maio_Outono.txt (deflated 86%)\r\n",
      "updating: arq_Junho_Outono.txt (deflated 94%)\r\n",
      "updating: arq_Julho_Inverno.txt (deflated 90%)\r\n",
      "updating: arq_Agosto_Inverno.txt (deflated 93%)\r\n",
      "  adding: arq_Setembro_Inverno.txt (deflated 92%)\r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "updating: arq_Janeiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Fevereiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Março_Verao.txt (deflated 84%)\r\n",
      "updating: arq_Abril_Outono.txt (deflated 92%)\r\n",
      "updating: arq_Maio_Outono.txt (deflated 86%)\r\n",
      "updating: arq_Junho_Outono.txt (deflated 94%)\r\n",
      "updating: arq_Julho_Inverno.txt (deflated 90%)\r\n",
      "updating: arq_Agosto_Inverno.txt (deflated 93%)\r\n",
      "updating: arq_Setembro_Inverno.txt (deflated 92%)\r\n",
      "  adding: arq_Outubro_Primavera.txt (deflated 84%)\r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "updating: arq_Janeiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Fevereiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Março_Verao.txt (deflated 84%)\r\n",
      "updating: arq_Abril_Outono.txt (deflated 92%)\r\n",
      "updating: arq_Maio_Outono.txt (deflated 86%)\r\n",
      "updating: arq_Junho_Outono.txt (deflated 94%)\r\n",
      "updating: arq_Julho_Inverno.txt (deflated 90%)\r\n",
      "updating: arq_Agosto_Inverno.txt (deflated 93%)\r\n",
      "updating: arq_Setembro_Inverno.txt (deflated 92%)\r\n",
      "updating: arq_Outubro_Primavera.txt (deflated 84%)\r\n",
      "  adding: arq_Novembro_Primavera.txt (deflated 91%)\r\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "updating: arq_Janeiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Fevereiro_Verao.txt (deflated 86%)\r\n",
      "updating: arq_Março_Verao.txt (deflated 84%)\r\n",
      "updating: arq_Abril_Outono.txt (deflated 92%)\r\n",
      "updating: arq_Maio_Outono.txt (deflated 86%)\r\n",
      "updating: arq_Junho_Outono.txt (deflated 94%)\r\n",
      "updating: arq_Julho_Inverno.txt (deflated 90%)\r\n",
      "updating: arq_Agosto_Inverno.txt (deflated 93%)\r\n",
      "updating: arq_Setembro_Inverno.txt (deflated 92%)\r\n",
      "updating: arq_Outubro_Primavera.txt (deflated 84%)\r\n",
      "updating: arq_Novembro_Primavera.txt (deflated 91%)\r\n",
      "  adding: arq_Dezembro_Primavera.txt (deflated 94%)\r\n"
     ]
    }
   ],
   "source": [
    "#Exercicio 4\n",
    "import random\n",
    "mes=[\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"]\n",
    "estacao=[\"Verao\", \"Outono\", \"Inverno\", \"Primavera\"]\n",
    "for i in range(12):\n",
    "    if i<3:\n",
    "        n=0\n",
    "    elif 3<=i<6:\n",
    "        n=1\n",
    "    elif 6<=i<9:\n",
    "        n=2\n",
    "    else:\n",
    "        n=3\n",
    "    arq=open(\"arq_\"+str(mes[i])+\"_\"+str(estacao[n])+\".txt\",\"w\")\n",
    "    arq.write(random.randint(5,20)*(\"A minha estacao predileta e\"+str(estacao[n])+\"especialmente em\"+str(mes[i])+\"\\n\"))\n",
    "    arq.close()\n",
    "    !zip file.zip arq*.txt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 0,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "#Exercicio 7\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2 (SageMath)",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
{"type":"settings","kernel":"python2","backend_state":"running","trust":true,"kernel_state":"idle"}
{"type":"file","last_load":1495473005363}
{"type":"cell","id":"4c84e2","pos":0,"input":"#### Exercicio 1\n\n- Gere uma lista com 100 números aleatórios, em seguida o aluno deverá deverá encontrar os intervalos médios dos elementos da lista.","cell_type":"markdown"}
{"output":{"0":{"data":{"text/plain":"[1,\n 69,\n 24,\n 92,\n 20,\n 25,\n 83,\n 31,\n 62,\n 50,\n 71,\n 65,\n 79,\n 11,\n 96,\n 35,\n 58,\n 33,\n 63,\n 9,\n 86,\n 30,\n 91,\n 39,\n 52,\n 22,\n 6,\n 94,\n 55,\n 34,\n 36,\n 4,\n 43,\n 53,\n 77,\n 78,\n 75,\n 29,\n 54,\n 82,\n 2,\n 48,\n 57,\n 15,\n 90,\n 68,\n 73,\n 19,\n 26,\n 41,\n 89,\n 70,\n 3,\n 13,\n 66,\n 14,\n 28,\n 21,\n 64,\n 0,\n 47,\n 59,\n 12,\n 16,\n 46,\n 56,\n 93,\n 44,\n 87,\n 5,\n 27,\n 97,\n 38,\n 76,\n 37,\n 80,\n 84,\n 23,\n 95,\n 99,\n 18,\n 85,\n 32,\n 51,\n 45,\n 67,\n 74,\n 17,\n 40,\n 72,\n 88,\n 81,\n 10,\n 61,\n 98,\n 8,\n 60,\n 49,\n 7,\n 42]"},"exec_count":38}},"exec_count":38,"start":1495474878080,"input":"import random \nlista= random.sample(range(0, 100), 100)\nlista\n","state":"done","pos":1,"type":"cell","end":1495474878096,"id":"df1e00","kernel":"python2"}
{"exec_count":11,"input":"#### Exercicio 3\n- Calcule as raízes da equação do 2◦ grau ($Ax^2 + Bx + C = 0$) sendo os valores de A, B e C fornecidos pelo usuário, levando em consideração a existência de raízes complexas.**","state":"done","pos":16,"cell_type":"markdown","type":"cell","id":"8ee07c","kernel":"python2"}
{"type":"cell","id":"4353d6","pos":3,"input":"#### Exercicio 2\nFaça um programa que leia um número indeterminado de valores, correspondentes a notas, encerrando a entrada de dados quando for informado um valor igual a -1 (que não deve ser armazenado). Após esta entrada de dados, faça:\n- Mostre a quantidade de valores que foram lidos; (ok)\n- Exiba todos os valores na ordem em que foram informados, um ao lado do outro; (ok)\n- Exiba todos os valores na ordem inversa à que foram informados, um abaixo do outro; (não feito)\n- Calcule e mostre a soma dos valores; (ok)\n- Calcule e mostre a média dos valores; (ok)\n- Calcule e mostre a quantidade de valores acima da média calculada; (ok)\n- Calcule e mostre a quantidade de valores abaixo de sete; (ok)\n- Encerre o programa com uma mensagem; (ok)","cell_type":"markdown"}
{"output":{"0":{"name":"input","opts":{"password":false,"prompt":"Insira A: "},"value":"2"},"1":{"name":"input","opts":{"password":false,"prompt":"Insira B: "},"value":"2."},"2":{"name":"input","opts":{"password":false,"prompt":"Insira C: "},"value":"2.0"}},"exec_count":89,"start":1495886488440,"input":"A= float(input(\"Insira A: \"))\nB= float(input(\"Insira B: \") )\nC= float(input(\"Insira C: \"))\n","state":"done","pos":17,"type":"cell","end":1495886492939,"id":"560d53","kernel":"python2"}
{"output":{"0":{"name":"input","opts":{"password":false,"prompt":"Insira as notas dos alunos"},"value":"5.5"},"1":{"name":"input","opts":{"password":false,"prompt":"Insira as notas dos alunos"},"value":"9"},"2":{"name":"input","opts":{"password":false,"prompt":"Insira as notas dos alunos"},"value":"4.6"},"3":{"name":"input","opts":{"password":false,"prompt":"Insira as notas dos alunos"},"value":"7"},"4":{"name":"input","opts":{"password":false,"prompt":"Insira as notas dos alunos"},"value":"3"},"5":{"name":"input","opts":{"password":false,"prompt":"Insira as notas dos alunos"},"value":"-1"}},"exec_count":7,"start":1495844102696,"input":"    nota= input('Insira as notas dos alunos')\nn=[]\nn.append(nota)\nwhile nota !=(-1):\n    nota= input('Insira as notas dos alunos')\n    n.append(nota)\n    if nota == -1:\n        n.remove(nota)\n        break;","state":"done","pos":4,"type":"cell","end":1495844118750,"id":"b9de7e","kernel":"python2"}
{"start":1495476721434,"input":"imedio=[]\n\nfor i in range(0,99):\n    imedio.append((lista[i]+lista[i+1])/2.)\n\nprint imedio","state":"done","pos":2,"type":"cell","end":1495476721434,"id":"bcd70c","kernel":"python2"}
{"output":{"0":{"name":"input","opts":{"password":false,"prompt":"insira o nome do aluno"},"value":"Vanessa"},"1":{"name":"input","opts":{"password":false,"prompt":"insira o nome do aluno"},"value":"Felipe"},"2":{"name":"input","opts":{"password":false,"prompt":"insira o nome do aluno"},"value":"Elian"},"3":{"name":"input","opts":{"password":false,"prompt":"insira o nome do aluno"},"value":"Ana"},"4":{"name":"input","opts":{"password":false,"prompt":"insira o nome do aluno"},"value":"Joao"},"5":{"name":"input","opts":{"password":false,"prompt":"Insira as notas aqui"},"value":"10"},"6":{"name":"input","opts":{"password":false,"prompt":"Insira as notas aqui"},"value":"9"},"7":{"name":"input","opts":{"password":false,"prompt":"Insira as notas aqui"},"value":"8"},"8":{"name":"input","opts":{"password":false,"prompt":"Insira as notas aqui"},"value":"7"},"9":{"name":"input","opts":{"password":false,"prompt":"Insira as notas aqui"},"value":"3.4"},"10":{"name":"input","opts":{"password":false,"prompt":"Insira as notas aqui"},"value":"4.2"},"11":{"name":"input","opts":{"password":false,"prompt":"Insira as notas aqui"},"value":"5.7"},"12":{"name":"input","opts":{"password":false,"prompt":"Insira as notas aqui"},"value":"6.1"},"13":{"name":"input","opts":{"password":false,"prompt":"Insira as notas aqui"},"value":"5.5"},"14":{"name":"input","opts":{"password":false,"prompt":"Insira as notas aqui"},"value":"4.9"}},"exec_count":282,"start":1495890681140,"input":"aluno=[]\nnota=[]\nfor i in range(5):\n    aluno.append(raw_input ('insira o nome do aluno'))\nfor i in aluno:\n    nota.append(input ('Insira as notas aqui'))\n    nota.append(input ('Insira as notas aqui'))\n","state":"done","pos":19,"type":"cell","end":1495890711777,"id":"f032c2","kernel":"python2"}
{"type":"cell","id":"3b5388","pos":18,"input":"#### Exercício 6\n- Passo 1: Gere um arquivo com 10 notas de cinco alunos (Deve conter o nome do aluno e as notas). (ok)\n- Passo 2: Em seguida crie uma array em numpy com essas notas. (ok)\n- Passo 3: Crie um DataFrame dessas notas. (ok)\n- Passo 4: Identifique qual menor nota e quem foi o aluno que obteve essa nota (ok)\n- Passo 5: Identifique o aluno que tirou as melhores notas. (ok)","cell_type":"markdown"}
{"output":{"0":{"text":"A quantidade de valores lidos foram: 5\n","name":"stdout"}},"exec_count":8,"start":1495844119752,"input":"print 'A quantidade de valores lidos foram:', len(n)","state":"done","pos":5,"type":"cell","end":1495844119766,"id":"7e7593","kernel":"python2"}
{"output":{"0":{"text":"[5.5, 9, 4.6, 7, 3]\n","name":"stdout"}},"exec_count":9,"start":1495844121255,"input":"import numpy as np\nprint n","state":"done","pos":6,"type":"cell","end":1495844121271,"id":"9086a3","kernel":"python2"}
{"output":{"0":{"text":"[ 5.5  9.   4.6  7.   3. ]\n","name":"stdout"}},"exec_count":84,"start":1495478287401,"input":"print np.ravel(n)","state":"done","pos":7,"type":"cell","end":1495478287404,"id":"1183b6","kernel":"python2"}
{"output":{"0":{"data":{"text/plain":"' 5.5 9 4.6 7 3 '"},"exec_count":10}},"exec_count":10,"start":1495844123449,"input":"\nstrn=\" \"\nfor i in n:\n    strn = strn+str(i)+\" \"\nstrn","state":"done","pos":8,"type":"cell","end":1495844123463,"id":"ca29a7","kernel":"python2"}
{"output":{"0":{"text":" 5.5\n9\n4.6\n7\n3\n\n","name":"stdout"}},"exec_count":138,"start":1495479592378,"input":"#precisa ser inverso!!\nstrn=\" \"\nfor i in n:\n    strn = strn+str(i)+\"\\n\"\nprint strn","state":"done","pos":9,"type":"cell","end":1495479592402,"id":"fd9dd2","kernel":"python2"}
{"output":{"0":{"text":"A soma dos valores de [5.5, 9, 4.6, 7, 3] é: 29.1\n","name":"stdout"}},"exec_count":22,"start":1495844324750,"input":"soma=sum(n)\nprint 'A soma dos valores de' , n, 'é:', soma","state":"done","pos":10,"type":"cell","end":1495844324766,"id":"7e7da1","kernel":"python2"}
{"output":{"0":{"text":"A média dos valores de [5.5, 9, 4.6, 7, 3] é: 5.82\n","name":"stdout"}},"exec_count":25,"start":1495844435649,"input":"media= soma/len(n)\nprint 'A média dos valores de', n, 'é:', media","state":"done","pos":11,"type":"cell","end":1495844435669,"id":"e0c13c","kernel":"python2"}
{"output":{"0":{"text":"9\n7\n","name":"stdout"}},"exec_count":34,"start":1495844694850,"input":"for elem in n:\n    if elem> media:\n        print elem","state":"done","pos":12,"type":"cell","end":1495844694870,"id":"71ed8e","kernel":"python2"}
{"output":{"0":{"text":"5.5\n4.6\n3\n","name":"stdout"}},"exec_count":35,"start":1495844773251,"input":"for elem in n:\n    if elem<7:\n        print elem","state":"done","pos":13,"type":"cell","end":1495844773273,"id":"98140c","kernel":"python2"}
{"output":{"0":{"text":"O programa termina aqui. Até mais e obrigado pelos peixes!\n","name":"stdout"}},"exec_count":37,"start":1495844957667,"input":"print 'O programa termina aqui. Até mais e obrigado pelos peixes!'","state":"done","pos":14,"cell_type":"code","type":"cell","end":1495844957769,"id":"720116","kernel":"python2"}
{"output":{"0":{"text":"[10, 9, 8, 7, 3.4, 4.2, 5.7, 6.1, 5.5, 4.9]\n['Vanessa', 'Felipe', 'Elian', 'Ana', 'Joao']\n","name":"stdout"}},"exec_count":283,"start":1495890712954,"input":"print nota\nprint aluno\n","state":"done","pos":20,"cell_type":"code","type":"cell","end":1495890713015,"id":"e64724","kernel":"python2"}
{"output":{"0":{"text":"Os alunos e suas respectivas notas são:\n[('Vanessa', [10, 9]), ('Felipe', [8, 7]), ('Elian', [3.4, 4.2]), ('Ana', [5.7, 6.1]), ('Joao', [5.5, 4.9])]\n","name":"stdout"}},"exec_count":284,"start":1495890715242,"input":"import pandas as pd\nnotaal=range(9)\nfor i in range(9):\n    notaal[i]=[nota[i],nota[i+1]]\n\ndel notaal[1::2]\n\nnotaealu=zip(aluno,notaal)\nprint 'Os alunos e suas respectivas notas são:\\n', notaealu\nnotss=str(notaealu)\n\nwith open('notaealu','w')as arq:\n    arq.write(notss)","state":"done","pos":23,"type":"cell","end":1495890715292,"id":"33af6d","kernel":"python2"}
{"output":{"0":{"text":"[ 10.    9.    8.    7.    3.4   4.2   5.7   6.1   5.5   4.9]\n","name":"stdout"}},"exec_count":285,"start":1495890717640,"input":"import numpy as np\nnots=np.array(nota)\nprint nots\n","state":"done","pos":24,"type":"cell","end":1495890717692,"id":"2a89f3","kernel":"python2"}
{"output":{"0":{"text":"     Aluno       Notas\n0  Vanessa     [10, 9]\n1   Felipe      [8, 7]\n2    Elian  [3.4, 4.2]\n3      Ana  [5.7, 6.1]\n4     Joao  [5.5, 4.9]\n","name":"stdout"},"1":{"data":{"text/html":"<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Aluno</th>\n      <th>Maior nota</th>\n      <th>Menor nota</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Vanessa</td>\n      <td>10.0</td>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Felipe</td>\n      <td>8.0</td>\n      <td>7.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Elian</td>\n      <td>4.2</td>\n      <td>3.4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Ana</td>\n      <td>6.1</td>\n      <td>5.7</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Joao</td>\n      <td>5.5</td>\n      <td>4.9</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":405}},"exec_count":405,"start":1495895096756,"input":"import pandas as pd \ndf=pd.DataFrame(nots)\ndff=pd.DataFrame(notaealu)#,index=['Nota e Aluno', 'Nota e Aluno', 'Nota e Aluno', 'Nota e Aluno','Nota e Aluno'])\ndff['Aluno']=dff[0]\ndff['Notas']=dff[1]\ndff=dff.drop(0,axis=1)\ndff=dff.drop(1,axis=1)\nprint dff\ndff['Maior nota']=[max(elem) for elem in notaal]\ndff['Menor nota']=[min(elem) for elem in notaal]\ndff=dff.drop('Notas', axis=1)\ndff","state":"done","pos":25,"type":"cell","end":1495895096854,"id":"13b78f","kernel":"python2"}
{"output":{"0":{"text":"Delta menor que zero, raízes complexas. Por favor, insira outros valores de A, B e C: \n","name":"stdout"},"1":{"name":"input","opts":{"password":false,"prompt":"Insira A: "},"value":"2."},"2":{"name":"input","opts":{"password":false,"prompt":"Insira B: "},"value":"4.8"},"3":{"name":"input","opts":{"password":false,"prompt":"Insira C: "},"value":"9"},"4":{"text":"Delta menor que zero, raízes complexas. Por favor, insira outros valores de A, B e C: \n","name":"stdout"},"5":{"name":"input","opts":{"password":false,"prompt":"Insira A: "},"value":"9."},"6":{"name":"input","opts":{"password":false,"prompt":"Insira B: "},"value":"-3"},"7":{"name":"input","opts":{"password":false,"prompt":"Insira C: "},"value":"2"},"8":{"name":"input","opts":{"password":false,"prompt":"Insira A: "}},"9":{"text":"Delta menor que zero, raízes complexas. Por favor, insira outros valores de A, B e C: \n","name":"stdout","value":"1."},"10":{"name":"input","opts":{"password":false,"prompt":"Insira B: "},"value":"4"},"11":{"name":"input","opts":{"password":false,"prompt":"Insira C: "},"value":"5."},"12":{"text":"Delta menor que zero, raízes complexas. Por favor, insira outros valores de A, B e C: \n","name":"stdout"},"13":{"name":"input","opts":{"password":false,"prompt":"Insira A: "},"value":"7."},"14":{"name":"input","opts":{"password":false,"prompt":"Insira B: "},"value":"4."},"15":{"name":"input","opts":{"password":false,"prompt":"Insira C: "},"value":"-3."},"16":{"text":"x1: -0.214285714286\nx2: -0.357142857143\n","name":"stdout"}},"exec_count":90,"start":1495886494943,"input":"## from math import sqrt\ndelta= (B**2)-4*A*C\nwhile delta<0:\n    print (\"Delta menor que zero, raízes complexas. Por favor, insira outros valores de A, B e C: \")\n    A= input(\"Insira A: \")\n    B= input(\"Insira B: \") \n    C= input(\"Insira C: \")\n    float(A), float(B), float(C)\n    delta= (B**2)-4*A*C\n\nx1= (-B+(delta)**(1/2))/(2*A)\nx2= (-B-(delta)**(1/2))/(2*A)\nprint \"x1:\",x1\nprint \"x2:\",x2  ","state":"done","pos":17.5,"cell_type":"code","type":"cell","end":1495886522673,"id":"dc1d94","kernel":"python2"}
{"output":{"0":{"text":"O aluno com menor nota é: Elian e a nota é 3.4\n","name":"stdout"}},"exec_count":479,"start":1495897215080,"input":"for elem in dff['Menor nota']:\n    for i in range(len(dff['Menor nota'])):\n        if elem == dff['Menor nota'].min():\n            if dff.loc[i]['Menor nota']== dff['Menor nota'].min():\n                print 'O aluno com menor nota é:', dff.loc[i]['Aluno'], 'e a nota é', dff.loc[i]['Menor nota']\n           ","state":"done","pos":27,"type":"cell","end":1495897215169,"id":"6c0d9b","kernel":"python2"}
{"output":{"0":{"text":"O aluno com maior nota é: Vanessa e a nota é 10.0\n","name":"stdout"}},"exec_count":482,"start":1495897362499,"input":"for elem in dff['Maior nota']:\n    for i in range(len(dff['Maior nota'])):\n        if elem == dff['Maior nota'].max():\n            if dff.loc[i]['Maior nota']== dff['Maior nota'].max():\n                print 'O aluno com maior nota é:', dff.loc[i]['Aluno'], 'e a nota é', dff.loc[i]['Maior nota']\n           ","state":"done","pos":30,"type":"cell","end":1495897362589,"id":"64706d","kernel":"python2"}
{"type":"cell","id":"66ae46","pos":31,"input":"#### Exercicio 8\nConsidere um conjunto de 10 triplets descrevendo 10 triângulos (com vértices compartilhados), encontrar o conjunto de segmentos de linha única compondo todos os triângulos ","cell_type":"markdown"}
{"type":"cell","id":"dff1c7","pos":32,"input":""}
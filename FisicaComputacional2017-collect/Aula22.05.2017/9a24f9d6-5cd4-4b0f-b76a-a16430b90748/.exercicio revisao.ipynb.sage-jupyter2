{"type":"settings","kernel":"python2","backend_state":"ready","trust":true,"kernel_state":"idle"}
{"type":"file","last_load":1495473475278}
{"output":{"0":{"data":{"text/html":"<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Série</th>\n      <th>Geração</th>\n      <th>Temporada</th>\n      <th>Primeiro Episódio</th>\n      <th>Último Episódio</th>\n      <th>Regiao</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Série Original</td>\n      <td>Primeira</td>\n      <td>Liga Indigo</td>\n      <td>001</td>\n      <td>083</td>\n      <td>Kanto</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Série Original</td>\n      <td>Primeira</td>\n      <td>Aventuras nas Ilhas Laranja</td>\n      <td>084</td>\n      <td>118</td>\n      <td>Ilhas Laranja</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Série Original</td>\n      <td>Segunda</td>\n      <td>A Jornada Johto</td>\n      <td>119</td>\n      <td>159</td>\n      <td>Johto</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Série Original</td>\n      <td>Segunda</td>\n      <td>Campeões da Liga Johto</td>\n      <td>160</td>\n      <td>211</td>\n      <td>Johto</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Série Original</td>\n      <td>Segunda</td>\n      <td>Master Quest</td>\n      <td>212</td>\n      <td>276</td>\n      <td>Johto</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Geração Avançada</td>\n      <td>Terceira</td>\n      <td>Pokémon: Avançado</td>\n      <td>277</td>\n      <td>316</td>\n      <td>Hoenn</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Geração Avançada</td>\n      <td>Terceira</td>\n      <td>Desafio Avançado</td>\n      <td>317</td>\n      <td>368</td>\n      <td>Hoenn</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Geração Avançada</td>\n      <td>Terceira</td>\n      <td>Batalha Avançado</td>\n      <td>369</td>\n      <td>421</td>\n      <td>Hoenn</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Geração Avançada</td>\n      <td>Terceira</td>\n      <td>Batalha da Fronteira</td>\n      <td>422</td>\n      <td>468</td>\n      <td>Kanto</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Diamante e Pérola</td>\n      <td>Quarta</td>\n      <td>Diamante e Pérola</td>\n      <td>469</td>\n      <td>520</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Diamante e Pérola</td>\n      <td>Quarta</td>\n      <td>Batalha Dimensional</td>\n      <td>521</td>\n      <td>572</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Diamante e Pérola</td>\n      <td>Quarta</td>\n      <td>Batalhas Galácticas</td>\n      <td>573</td>\n      <td>625</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Diamante e Pérola</td>\n      <td>Quarta</td>\n      <td>Vencedores da Liga Sinnoh</td>\n      <td>626</td>\n      <td>659</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Preto e Branco</td>\n      <td>Quinta</td>\n      <td>Preto e Branco</td>\n      <td>660</td>\n      <td>707</td>\n      <td>Unova</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Preto e Branco</td>\n      <td>Quinta</td>\n      <td>Destinos Rivais</td>\n      <td>708</td>\n      <td>756</td>\n      <td>Unova</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Preto e Branco</td>\n      <td>Quinta</td>\n      <td>Aventuras em Unova (e Mais Além)</td>\n      <td>757</td>\n      <td>803</td>\n      <td>Unova</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>XY</td>\n      <td>Sexta</td>\n      <td>A Séria XY</td>\n      <td>804</td>\n      <td>852</td>\n      <td>Kalos</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>XY</td>\n      <td>Sexta</td>\n      <td>Kalos Quest</td>\n      <td>853</td>\n      <td>897</td>\n      <td>Kalos</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>XY</td>\n      <td>Sexta</td>\n      <td>XY &amp; Z</td>\n      <td>898</td>\n      <td>946</td>\n      <td>Kalos</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Sun and Moon</td>\n      <td>Sétima</td>\n      <td>Sun and Moon</td>\n      <td>947</td>\n      <td>Em Andamento</td>\n      <td>Alola</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":2}},"exec_count":2,"input":"#exercicio pokemon\nimport pandas as pd\ndict=[{'Série': 'Série Original', 'Geração':'Primeira', 'Temporada': 'Liga Indigo', 'Primeiro Episódio': '001' , 'Último Episódio': '083', 'Regiao': 'Kanto'},    \n      {'Série': 'Série Original', 'Geração':'Primeira', 'Temporada': 'Aventuras nas Ilhas Laranja', 'Primeiro Episódio': '084' , 'Último Episódio': '118', 'Regiao': 'Ilhas Laranja'},\n      {'Série': 'Série Original', 'Geração':'Segunda', 'Temporada': 'A Jornada Johto', 'Primeiro Episódio': '119' , 'Último Episódio': '159', 'Regiao': 'Johto'},\n      {'Série': 'Série Original', 'Geração':'Segunda', 'Temporada': 'Campeões da Liga Johto', 'Primeiro Episódio': '160' , 'Último Episódio': '211', 'Regiao': 'Johto'},\n      {'Série': 'Série Original', 'Geração':'Segunda', 'Temporada': 'Master Quest', 'Primeiro Episódio': '212' , 'Último Episódio': '276', 'Regiao': 'Johto'},\n      {'Série': 'Geração Avançada', 'Geração':'Terceira', 'Temporada': 'Pokémon: Avançado', 'Primeiro Episódio': '277' , 'Último Episódio': '316', 'Regiao': 'Hoenn'},\n      {'Série': 'Geração Avançada', 'Geração':'Terceira', 'Temporada': 'Desafio Avançado', 'Primeiro Episódio': '317' , 'Último Episódio': '368', 'Regiao': 'Hoenn'},\n      {'Série': 'Geração Avançada', 'Geração':'Terceira', 'Temporada': 'Batalha Avançado', 'Primeiro Episódio': '369' , 'Último Episódio': '421', 'Regiao': 'Hoenn'},\n      {'Série': 'Geração Avançada', 'Geração':'Terceira', 'Temporada': 'Batalha da Fronteira', 'Primeiro Episódio': '422' , 'Último Episódio': '468', 'Regiao': 'Kanto'},\n      {'Série': 'Diamante e Pérola', 'Geração':'Quarta', 'Temporada': 'Diamante e Pérola', 'Primeiro Episódio': '469' , 'Último Episódio': '520', 'Regiao': 'Sinnoh'},\n      {'Série': 'Diamante e Pérola', 'Geração':'Quarta', 'Temporada': 'Batalha Dimensional', 'Primeiro Episódio': '521' , 'Último Episódio': '572', 'Regiao': 'Sinnoh'},\n      {'Série': 'Diamante e Pérola', 'Geração':'Quarta', 'Temporada': 'Batalhas Galácticas', 'Primeiro Episódio': '573' , 'Último Episódio': '625', 'Regiao': 'Sinnoh'},\n      {'Série': 'Diamante e Pérola', 'Geração':'Quarta', 'Temporada': 'Vencedores da Liga Sinnoh', 'Primeiro Episódio': '626' , 'Último Episódio': '659', 'Regiao': 'Sinnoh'},\n      {'Série': 'Preto e Branco', 'Geração':'Quinta', 'Temporada': 'Preto e Branco', 'Primeiro Episódio': '660' , 'Último Episódio': '707', 'Regiao': 'Unova'},\n      {'Série': 'Preto e Branco', 'Geração':'Quinta', 'Temporada': 'Destinos Rivais', 'Primeiro Episódio': '708' , 'Último Episódio': '756', 'Regiao': 'Unova'},\n      {'Série': 'Preto e Branco', 'Geração':'Quinta', 'Temporada': 'Aventuras em Unova (e Mais Além)', 'Primeiro Episódio': '757' , 'Último Episódio': '803', 'Regiao': 'Unova'},\n      {'Série': 'XY', 'Geração':'Sexta', 'Temporada': 'A Séria XY', 'Primeiro Episódio': '804' , 'Último Episódio': '852', 'Regiao': 'Kalos'},\n      {'Série': 'XY', 'Geração':'Sexta', 'Temporada': 'Kalos Quest', 'Primeiro Episódio': '853' , 'Último Episódio': '897', 'Regiao': 'Kalos'},\n      {'Série': 'XY', 'Geração':'Sexta', 'Temporada': 'XY & Z', 'Primeiro Episódio': '898' , 'Último Episódio': '946', 'Regiao': 'Kalos'},\n      {'Série': 'Sun and Moon', 'Geração':'Sétima', 'Temporada': 'Sun and Moon', 'Primeiro Episódio': '947' , 'Último Episódio': 'Em Andamento', 'Regiao': 'Alola'}]\ndf=pd.DataFrame(dict)\ndf[['Série','Geração', 'Temporada', 'Primeiro Episódio', 'Último Episódio', 'Regiao']]","state":"done","pos":0,"type":"cell","id":"26a722","kernel":"python2"}
{"output":{"0":{"text":"Quantidade de temporadas que durou a Série Original: 5\nQuantidade de temporadas que durou a Geração Avançada: 4\nQuantidade de temporadas que durou a Diamante e Pérola: 4\nQuantidade de temporadas que durou a Preto e Branco: 3\nQuantidade de temporadas que durou a XY: 3\nQuantidade de temporadas que durou a Sun and Moon: 1\n","name":"stdout"}},"exec_count":3,"start":1495473536782,"input":"print 'Quantidade de temporadas que durou a Série Original:',len([serie1 for serie1  in df['Série'] if serie1=='Série Original'])\nprint 'Quantidade de temporadas que durou a Geração Avançada:',len([serie2 for serie2  in df['Série'] if serie2=='Geração Avançada'])\nprint 'Quantidade de temporadas que durou a Diamante e Pérola:',len([serie3 for serie3  in df['Série'] if serie3=='Diamante e Pérola'])\nprint 'Quantidade de temporadas que durou a Preto e Branco:',len([serie4 for serie4  in df['Série'] if serie4=='Preto e Branco'])\nprint 'Quantidade de temporadas que durou a XY:',len([serie5 for serie5  in df['Série'] if serie5=='XY'])\nprint 'Quantidade de temporadas que durou a Sun and Moon:',len([serie6 for serie6  in df['Série'] if serie6=='Sun and Moon'])","state":"done","pos":1,"type":"cell","end":1495473536789,"id":"15d7a1","kernel":"python2"}
{"output":{"0":{"text":"A geração que é mais longeva, ou seja que tem mais episódios é: Geracao Terceira com 192 episodios\n","name":"stdout"}},"exec_count":1,"start":1495473525987,"input":"Primeira=119-1\nSegunda=277-119\nTerceira=469-277\nQuarta=660-469\nQuinta=804-660\nSexta=947-804\nEpisodios={'Geracao Primeira': Primeira, 'Geracao Segunda' : Segunda, 'Geracao Terceira' : Terceira, 'Geracao Quarta' : Quarta, \n           'Geracao Quinta' : Quinta, 'Geracao Sexta' : Sexta}\nprint 'A geração que é mais longeva, ou seja que tem mais episódios é:',max(Episodios), 'com', Episodios[max(Episodios)], 'episodios'\n","state":"done","pos":2,"type":"cell","end":1495473525996,"id":"12e207","kernel":"python2"}
{"output":{"0":{"text":"Writing Janeiro_verão.txt\n","name":"stdout"}},"exec_count":6,"start":1495474074789,"input":"%%writefile Janeiro_verão.txt\n'A minha estação predileta é verão, especialmente janeiro'\n'A minha estação predileta é verão, especialmente janeiro'\n'A minha estação predileta é verão, especialmente janeiro'\n'A minha estação predileta é verão, especialmente janeiro'\n'A minha estação predileta é verão, especialmente janeiro'","state":"done","pos":5,"type":"cell","end":1495474074806,"id":"b19374","kernel":"python2"}
{"output":{"0":{"text":"Writing fevereiro_verão.txt\n","name":"stdout"}},"exec_count":7,"start":1495474117811,"input":"%%writefile fevereiro_verão.txt\n'A minha estação predileta é verão, especialmente fevereiro'\n'A minha estação predileta é verão, especialmente fevereiro'\n'A minha estação predileta é verão, especialmente fevereiro'\n'A minha estação predileta é verão, especialmente fevereiro'\n'A minha estação predileta é verão, especialmente fevereiro'\n'A minha estação predileta é verão, especialmente fevereiro'","state":"done","pos":6,"type":"cell","end":1495474117817,"id":"14d7a3","kernel":"python2"}
{"type":"cell","id":"7e86e6","pos":3.5,"input":"#exercicio estações"}
{"output":{"0":{"text":"Writing março_verão.txt\n","name":"stdout"}},"exec_count":8,"start":1495474134300,"input":"%%writefile março_verão.txt\n'A minha estação predileta é verão, especialmente março'\n'A minha estação predileta é verão, especialmente março'\n'A minha estação predileta é verão, especialmente março'\n'A minha estação predileta é verão, especialmente março'\n'A minha estação predileta é verão, especialmente março'\n'A minha estação predileta é verão, especialmente março'","state":"done","pos":7,"type":"cell","end":1495474134313,"id":"2fe824","kernel":"python2"}
{"output":{"0":{"text":"Writing abril_outono.txt\n","name":"stdout"}},"exec_count":9,"start":1495474151478,"input":"%%writefile abril_outono.txt\n'A minha estação predileta é outono, especialmente abril'\n'A minha estação predileta é outono, especialmente abril'\n'A minha estação predileta é outono, especialmente abril'\n'A minha estação predileta é outono, especialmente abril'\n'A minha estação predileta é outono, especialmente abril'\n'A minha estação predileta é outono, especialmente abril'\n'A minha estação predileta é outono, especialmente abril'\n'A minha estação predileta é outono, especialmente abril'\n'A minha estação predileta é outono, especialmente abril'\n'A minha estação predileta é outono, especialmente abril'","state":"done","pos":8,"type":"cell","end":1495474151487,"id":"ab2da4","kernel":"python2"}
{"output":{"0":{"text":"Writing maio_outono.txt\n","name":"stdout"}},"exec_count":10,"start":1495474178880,"input":"%%writefile maio_outono.txt\n'A minha estação predileta é outono, especialmente maio'\n'A minha estação predileta é outono, especialmente maio'\n'A minha estação predileta é outono, especialmente maio'\n'A minha estação predileta é outono, especialmente maio'\n'A minha estação predileta é outono, especialmente maio'\n'A minha estação predileta é outono, especialmente maio'\n'A minha estação predileta é outono, especialmente maio'\n'A minha estação predileta é outono, especialmente maio'\n'A minha estação predileta é outono, especialmente maio'\n'A minha estação predileta é outono, especialmente maio'","state":"done","pos":9,"type":"cell","end":1495474178894,"id":"43a5a4","kernel":"python2"}
{"output":{"0":{"text":"Writing junho_outono.txt\n","name":"stdout"}},"exec_count":11,"start":1495474193681,"input":"%%writefile junho_outono.txt\n'A minha estação predileta é outono, especialmente junho'\n'A minha estação predileta é outono, especialmente junho'\n'A minha estação predileta é outono, especialmente junho'\n'A minha estação predileta é outono, especialmente junho'\n'A minha estação predileta é outono, especialmente junho'\n'A minha estação predileta é outono, especialmente junho'\n'A minha estação predileta é outono, especialmente junho'\n'A minha estação predileta é outono, especialmente junho'\n'A minha estação predileta é outono, especialmente junho'\n'A minha estação predileta é outono, especialmente junho'","state":"done","pos":10,"type":"cell","end":1495474193688,"id":"8d6efd","kernel":"python2"}
{"output":{"0":{"text":"Writing julho_inverno.txt\n","name":"stdout"}},"exec_count":12,"start":1495474219580,"input":"%%writefile julho_inverno.txt\n'A minha estação predileta é irverno, especialmente julho'\n'A minha estação predileta é inverno, especialmente julho'\n'A minha estação predileta é irverno, especialmente julho'\n'A minha estação predileta é irverno, especialmente julho'\n'A minha estação predileta é irverno, especialmente julho'\n'A minha estação predileta é irverno, especialmente julho'\n'A minha estação predileta é irverno, especialmente julho'\n'A minha estação predileta é irverno, especialmente julho'\n'A minha estação predileta é irverno, especialmente julho'\n'A minha estação predileta é irverno, especialmente julho'\n'A minha estação predileta é irverno, especialmente julho'\n'A minha estação predileta é irverno, especialmente julho'","state":"done","pos":11,"type":"cell","end":1495474219601,"id":"9a0884","kernel":"python2"}
{"output":{"0":{"text":"Writing agosto_inverno.txt\n","name":"stdout"}},"exec_count":13,"start":1495474235666,"input":"%%writefile agosto_inverno.txt\n'A minha estação predileta é irverno, especialmente agosto'\n'A minha estação predileta é inverno, especialmente agosto'\n'A minha estação predileta é irverno, especialmente agosto'\n'A minha estação predileta é irverno, especialmente agosto'\n'A minha estação predileta é irverno, especialmente agosto'\n'A minha estação predileta é irverno, especialmente agosto'\n'A minha estação predileta é irverno, especialmente agosto'\n'A minha estação predileta é irverno, especialmente agosto'\n'A minha estação predileta é irverno, especialmente agosto'\n'A minha estação predileta é irverno, especialmente agosto'\n'A minha estação predileta é irverno, especialmente agosto'\n'A minha estação predileta é irverno, especialmente agosto'\n'A minha estação predileta é irverno, especialmente agosto'","state":"done","pos":12,"type":"cell","end":1495474235702,"id":"582b6e","kernel":"python2"}
{"output":{"0":{"text":"Writing setembro_primavera.txt\n","name":"stdout"}},"exec_count":14,"start":1495474251580,"input":"%%writefile setembro_primavera.txt\n'A minha estação predileta é primavera, especialmente setembro'\n'A minha estação predileta é primavera, especialmente setembro'\n'A minha estação predileta é primavera, especialmente setembro'\n'A minha estação predileta é primavera, especialmente setembro'\n'A minha estação predileta é primavera, especialmente setembro'\n'A minha estação predileta é primavera, especialmente setembro'\n'A minha estação predileta é primavera, especialmente setembro'\n'A minha estação predileta é primavera, especialmente setembro'\n'A minha estação predileta é primavera, especialmente setembro'\n","state":"done","pos":13,"type":"cell","end":1495474251607,"id":"1ab32b","kernel":"python2"}
{"output":{"0":{"text":"Writing outubro_primavera.txt\n","name":"stdout"}},"exec_count":15,"start":1495474279189,"input":"%%writefile outubro_primavera.txt\n'A minha estação predileta é primavera, especialmente outubro'\n'A minha estação predileta é primavera, especialmente outubro'\n'A minha estação predileta é primavera, especialmente outubro'\n'A minha estação predileta é primavera, especialmente outubro'\n'A minha estação predileta é primavera, especialmente outubro'\n'A minha estação predileta é primavera, especialmente outubro'\n'A minha estação predileta é primavera, especialmente outubro'\n'A minha estação predileta é primavera, especialmente outubro'\n'A minha estação predileta é primavera, especialmente outubro'\n","state":"done","pos":14,"type":"cell","end":1495474279210,"id":"587898","kernel":"python2"}
{"output":{"0":{"text":"Writing novembro_primavera.txt\n","name":"stdout"}},"exec_count":16,"start":1495474297495,"input":"%%writefile novembro_primavera.txt\n'A minha estação predileta é primavera, especialmente novembro'\n'A minha estação predileta é primavera, especialmente novembro'\n'A minha estação predileta é primavera, especialmente novembro'\n'A minha estação predileta é primavera, especialmente novembro'\n'A minha estação predileta é primavera, especialmente novembro'\n'A minha estação predileta é primavera, especialmente novembro'\n'A minha estação predileta é primavera, especialmente novembro'\n'A minha estação predileta é primavera, especialmente novembro'\n","state":"done","pos":15,"type":"cell","end":1495474297588,"id":"6d1f68","kernel":"python2"}
{"output":{"0":{"text":"Writing dezembro_verão.txt\n","name":"stdout"}},"exec_count":17,"start":1495474312881,"input":"%%writefile dezembro_verão.txt\n'A minha estação predileta é verão, especialmente dezembro'\n'A minha estação predileta é verão, especialmente dezembro'\n'A minha estação predileta é verão, especialmente dezembro'\n'A minha estação predileta é verão, especialmente dezembro'\n'A minha estação predileta é verão, especialmente dezembro'\n'A minha estação predileta é verão, especialmente dezembro'\n'A minha estação predileta é verão, especialmente dezembro'\n'A minha estação predileta é verão, especialmente dezembro'\n'A minha estação predileta é verão, especialmente dezembro'","state":"done","pos":16,"type":"cell","end":1495474312895,"id":"eea646","kernel":"python2"}
{"output":{"0":{"text":"abril_outono.txt\t fevereiro_verão.txt  março_verão.txt\r\nagosto_inverno.txt\t Janeiro_verão.txt    novembro_primavera.txt\r\nCronograma.ipynb\t julho_inverno.txt    outubro_primavera.txt\r\ndezembro_verão.txt\t junho_outono.txt     Revisão.ipynb\r\nexercicio revisao.ipynb  maio_outono.txt      setembro_primavera.txt\r\n","name":"stdout"}},"exec_count":18,"start":1495474347890,"input":"!ls","state":"done","pos":17,"type":"cell","end":1495474348031,"id":"c98f80","kernel":"python2"}
{"output":{"0":{"text":"  adding: Janeiro_verão.txt (deflated 79%)\r\n  adding: abril_outono.txt (deflated 89%)\r\n  adding: agosto_inverno.txt (deflated 90%)\r\n  adding: dezembro_verão.txt (deflated 88%)\r\n  adding: fevereiro_verão.txt (deflated 82%)\r\n  adding: julho_inverno.txt (deflated 89%)\r\n  adding: junho_outono.txt (deflated 89%)\r\n  adding: maio_outono.txt (deflated 88%)\r\n  adding: março_verão.txt (deflated 82%)\r\n  adding: novembro_primavera.txt (deflated 86%)\r\n  adding: outubro_primavera.txt (deflated 88%)\r\n  adding: setembro_primavera.txt (deflated 88%)\r\n","name":"stdout"}},"exec_count":19,"start":1495474348378,"input":"!zip arq.zip *.txt","state":"done","pos":18,"type":"cell","end":1495474348552,"id":"5a8755","kernel":"python2"}
{"type":"cell","id":"ed4fa2","pos":19,"input":"#exercico 1"}
{"type":"cell","id":"75e3b3","pos":2.75,"input":"#exercicio 3 "}
{"output":{"0":{"name":"input","opts":{"password":false,"prompt":"Digite o coeficiente 'a'= "}}},"exec_count":20,"start":1495475725278,"input":"a=int(input(\"Digite o coeficiente 'a'= \"))\nb=int(input(\"Digite o coeficiente 'b'= \"))\nc=int(input(\"Digite o coeficiente 'c'= \"))\n\n\ndelta = ((pow(b,2))-4*a*c)\nprint(delta)\n\nif delta < 0:\n    print (\"Equacao sem solucao real\")\n    import sys\n\nelif delta == 0:  \n    print (\"Delta nulo. Equação apresenta apenas uma solução real.\")\n    print (-b,a)\n    print (-b,a,(-b)/2*a)\nelse:\n    import math\n    print(a,b,c)\n    float(delta)\n    delta_quadrado = math.sqrt(delta)\n    raiz_pos=(-b+raiz_quadrada)\n    raiz_neg=(-b-raiz_quadrada)\n    baixo_bsk=(2*a)\n    resultado_raiz_pos= (raiz_pos,raiz_neg)\n    resultado_raiz_neg= (raiz_pos,baixo_bsk)\n    print (b,raiz_pos,raiz_neg)\n    print (b,raiz_pos,raiz_neg)\n    print (\"Recomendo tomar duas casas apos a virgula.\")","state":"done","pos":3.125,"type":"cell","id":"e82a79","kernel":"python2"}
{"type":"cell","id":"171145","pos":20,"input":"import numpy as np\n\nv = np.int_(np.random.rand(100,1)*10)\n\nfor i in range(len(v)-1):\n    print(str(i+1)+str(v[i+1])+\" - \"+str(v[i])+\")/2 = \"+str(float((v[i+1]-v[i])/2.0)))","state":"done","kernel":"python2"}
{"type":"cell","id":"4ef52b","pos":21,"input":"#exercicio.2"}
{"output":{"0":{"name":"input","opts":{"password":false,"prompt":"Insira um numero:"}},"1":{"text":"closed","name":"stderr"}},"exec_count":1,"start":1499103141439,"input":"cont=0\nnotas=[]\nwhile cont==0:\n    a=float(input(\"Insira um numero:\"))\n    if a==-1:\n        cont=1\n        break\n    else:\n        notas.append(a)\nprint(\"Vetor notas:\"+str(notas))\nnotasinversa=notas[::-1]\nprint(\"Vetor Inverso:\")\nfor i in range(len(notasinversa)):\n    print(notasinversa[i])\nprint(\"A soma dos valores e:\"+str(sum(notas)))\nprint(\"A media dos valores e:\"+str(float(sum(notas))/float(len(notas))))\nmedia = float(sum(notas))/float(len(notas))\nmaior=[]\nmenor=[]\nfor i in range(len(notas)):\n    if notas[i]>media:\n        maior.append(notas[i])\n    if notas[i]<7:\n        menor.append(notas[i])\nprint(\"Valores acima da media:\"+str(maior))\nprint(\"Valores menores que 7:\"+str(menor))\nprint(\"O mundo e maravilhoso!\")","state":"done","pos":22,"type":"cell","end":1499103472949,"id":"78e88e","kernel":"python2"}
{"type":"cell","id":"6f88c3","pos":23,"input":"","cell_type":"markdown"}
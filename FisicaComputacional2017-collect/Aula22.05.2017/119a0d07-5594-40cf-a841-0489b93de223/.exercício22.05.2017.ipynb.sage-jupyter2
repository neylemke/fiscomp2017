{"type":"settings","kernel":"python2","backend_state":"ready","trust":true,"kernel_state":"idle"}
{"type":"file","last_load":1495476093088}
{"output":{"0":{"text":"[526, 202, 930, 829, 409, 225, 501, 750, 132, 938, 354, 615, 129, 876, 656, 930, 420, 213, 124, 388, 939, 395, 574, 114, 480, 288, 187, 24, 131, 314, 519, 222, 314, 80, 152, 153, 129, 925, 878, 725, 841, 465, 685, 683, 425, 665, 460, 27, 19, 575, 153, 968, 375, 397, 156, 975, 502, 717, 568, 348, 525, 782, 544, 279, 390, 432, 846, 478, 161, 154, 658, 750, 770, 273, 604, 309, 260, 677, 70, 89, 137, 390, 847, 321, 895, 138, 637, 766, 534, 3, 495, 881, 718, 597, 284, 323, 507, 659, 182, 435]\n\n[364, 566, 879, 619, 317, 363, 625, 441, 535, 646, 484, 372, 502, 766, 793, 675, 316, 168, 256, 663, 667, 484, 344, 297, 384, 237, 105, 77, 222, 416, 370, 268, 197, 116, 152, 141, 527, 901, 801, 783, 653, 575, 684, 554, 545, 562, 243, 23, 297, 364, 560, 671, 386, 276, 565, 738, 609, 642, 458, 436, 653, 663, 411, 334, 411, 639, 662, 319, 157, 406, 704, 760, 521, 438, 456, 284, 468, 373, 79, 113, 263, 618, 584, 608, 516, 387, 701, 650, 268, 249, 688, 799, 657, 440, 303, 415, 583, 420, 308]\n","name":"stdout"}},"exec_count":6,"start":1495476488852,"input":"import random\n\nlista = []\nmedia = []\nfor i in range (100):\n    lista.append(random.randint(0,1000))\nprint lista\nprint\nfor i in range (len(lista) - 1):\n    media.append((lista[i]+lista[i+1])/2)\n\nprint media","state":"done","pos":0,"type":"cell","end":1495476488857,"id":"f382b8","kernel":"python2"}
{"type":"cell","id":"de3525","pos":1,"input":""}
{"output":{"0":{"name":"input","opts":{"password":false,"prompt":"Digite valor para 'a'= "}}},"exec_count":7,"start":1495479502373,"input":"a=int(input(\"Digite valor para 'a'= \"))\nb=int(input(\"Digite valor para 'b'= \"))\nc=int(input(\"Digite valor para 'c'= \"))\n\ndelta=((pow(b,2))-4*a*c)\nprint(delta)\n\nif delta<0:\n    print (\"Não possui solução real\")\n    import sys\n    \nelif delta ==0:\n    print (\"Delta nulo. Equação apresenta apenas uma solução real.\")\n    print (-b,a)\n    print (-b,a,(-b)/2*a)\n    \nelse:\n    import math\n    print(a,b,c)\n    float(delta)\n    delta_quadrado=math.sqrt(delta)\n    raiz_pos=(-b+raiz_quadrada)\n    raiz_neg=(-b-raiz_quadrada)\n    baixo_bsk=(2*a)\n    resultado_raiz_pos=(raiz_pos, raiz_neg)\n    resultado_raiz_neg=(raiz_pos, baixo_bsk)\n    print(b,raiz_pos,raiz_neg)\n    print(b,raiz_pos,raiz_neg)\n    print(\"Duas casas após a virgúla.\")","state":"done","pos":-1,"type":"cell","id":"ff107c","kernel":"python2"}
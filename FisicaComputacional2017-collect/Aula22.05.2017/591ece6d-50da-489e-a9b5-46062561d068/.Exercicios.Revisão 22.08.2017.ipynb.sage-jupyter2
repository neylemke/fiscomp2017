{"type":"settings","kernel":"python2","backend_state":"running","trust":true,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.13"}},"kernel_state":"idle"}
{"type":"file","last_load":1497387065971}
{"type":"cell","id":"ff7db9","pos":5,"input":"#Exercicio 5.\nimport pandas as pd\ndict=[{'Série': 'Série Original', 'Geração':'Primeira', 'Temporada': 'Liga Indigo', 'Primeiro Episódio': '001' , 'Último Episódio': '083', 'Regiao': 'Kanto'},    \n      {'Série': 'Série Original', 'Geração':'Primeira', 'Temporada': 'Aventuras nas Ilhas Laranja', 'Primeiro Episódio': '084' , 'Último Episódio': '118', 'Regiao': 'Ilhas Laranja'},\n      {'Série': 'Série Original', 'Geração':'Segunda', 'Temporada': 'A Jornada Johto', 'Primeiro Episódio': '119' , 'Último Episódio': '159', 'Regiao': 'Johto'},\n      {'Série': 'Série Original', 'Geração':'Segunda', 'Temporada': 'Campeões da Liga Johto', 'Primeiro Episódio': '160' , 'Último Episódio': '211', 'Regiao': 'Johto'},\n      {'Série': 'Série Original', 'Geração':'Segunda', 'Temporada': 'Master Quest', 'Primeiro Episódio': '212' , 'Último Episódio': '276', 'Regiao': 'Johto'},\n      {'Série': 'Geração Avançada', 'Geração':'Terceira', 'Temporada': 'Pokémon: Avançado', 'Primeiro Episódio': '277' , 'Último Episódio': '316', 'Regiao': 'Hoenn'},\n      {'Série': 'Geração Avançada', 'Geração':'Terceira', 'Temporada': 'Desafio Avançado', 'Primeiro Episódio': '317' , 'Último Episódio': '368', 'Regiao': 'Hoenn'},\n      {'Série': 'Geração Avançada', 'Geração':'Terceira', 'Temporada': 'Batalha Avançado', 'Primeiro Episódio': '369' , 'Último Episódio': '421', 'Regiao': 'Hoenn'},\n      {'Série': 'Geração Avançada', 'Geração':'Terceira', 'Temporada': 'Batalha da Fronteira', 'Primeiro Episódio': '422' , 'Último Episódio': '468', 'Regiao': 'Kanto'},\n      {'Série': 'Diamante e Pérola', 'Geração':'Quarta', 'Temporada': 'Diamante e Pérola', 'Primeiro Episódio': '469' , 'Último Episódio': '520', 'Regiao': 'Sinnoh'},\n      {'Série': 'Diamante e Pérola', 'Geração':'Quarta', 'Temporada': 'Batalha Dimensional', 'Primeiro Episódio': '521' , 'Último Episódio': '572', 'Regiao': 'Sinnoh'},\n      {'Série': 'Diamante e Pérola', 'Geração':'Quarta', 'Temporada': 'Batalhas Galácticas', 'Primeiro Episódio': '573' , 'Último Episódio': '625', 'Regiao': 'Sinnoh'},\n      {'Série': 'Diamante e Pérola', 'Geração':'Quarta', 'Temporada': 'Vencedores da Liga Sinnoh', 'Primeiro Episódio': '626' , 'Último Episódio': '659', 'Regiao': 'Sinnoh'},\n      {'Série': 'Preto e Branco', 'Geração':'Quinta', 'Temporada': 'Preto e Branco', 'Primeiro Episódio': '660' , 'Último Episódio': '707', 'Regiao': 'Unova'},\n      {'Série': 'Preto e Branco', 'Geração':'Quinta', 'Temporada': 'Destinos Rivais', 'Primeiro Episódio': '708' , 'Último Episódio': '756', 'Regiao': 'Unova'},\n      {'Série': 'Preto e Branco', 'Geração':'Quinta', 'Temporada': 'Aventuras em Unova (e Mais Além)', 'Primeiro Episódio': '757' , 'Último Episódio': '803', 'Regiao': 'Unova'},\n      {'Série': 'XY', 'Geração':'Sexta', 'Temporada': 'A Séria XY', 'Primeiro Episódio': '804' , 'Último Episódio': '852', 'Regiao': 'Kalos'},\n      {'Série': 'XY', 'Geração':'Sexta', 'Temporada': 'Kalos Quest', 'Primeiro Episódio': '853' , 'Último Episódio': '897', 'Regiao': 'Kalos'},\n      {'Série': 'XY', 'Geração':'Sexta', 'Temporada': 'XY & Z', 'Primeiro Episódio': '898' , 'Último Episódio': '946', 'Regiao': 'Kalos'},\n      {'Série': 'Sun and Moon', 'Geração':'Sétima', 'Temporada': 'Sun and Moon', 'Primeiro Episódio': '947' , 'Último Episódio': 'Em Andamento', 'Regiao': 'Alola'}]\ndf=pd.DataFrame(dict)\ndf[['Série','Geração', 'Temporada', 'Primeiro Episódio', 'Último Episódio', 'Regiao']]","cell_type":"code","exec_count":0}
{"type":"cell","id":"acf6a7","pos":0,"input":"#Exercicio1.\nimport random\n\nlista = []\nmedia = []\n\nfor i in range (100):\n    lista.append(random.randint(0,1000))\nprint lista \nprint \nfor i in range (len(lista) - 1):\n    media.append((lista[i]+lista[i+1])/2)\n\nprint media\n\n","cell_type":"code","exec_count":0}
{"type":"cell","id":"415f65","pos":1,"input":"#Exercicio3.\nExercicio 3 - raizes da função quadrada (20/04)\na=int(input(\"Digite o coeficiente 'a'= \"))\nb=int(input(\"Digite o coeficiente 'b'= \"))\nc=int(input(\"Digite o coeficiente 'c'= \"))\n\n\ndelta = ((pow(b,2))-4*a*c)\nprint(delta)\n\nif delta < 0:\n    print (\"Equacao sem solucao real\")\n    import sys\n\nelif delta == 0:  \n    print (\"Delta nulo. Equação apresenta apenas uma solução real.\")\n    print (-b,a)\n    print (-b,a,(-b)/2*a)\nelse:\n    import math\n    print(a,b,c)\n    float(delta)\n    delta_quadrado = math.sqrt(delta)\n    raiz_pos=(-b+raiz_quadrada)\n    raiz_neg=(-b-raiz_quadrada)\n    baixo_bsk=(2*a)\n    resultado_raiz_pos= (raiz_pos,raiz_neg)\n    resultado_raiz_neg= (raiz_pos,baixo_bsk)\n    print (b,raiz_pos,raiz_neg)\n    print (b,raiz_pos,raiz_neg)\n    print (\"Recomendo tomar duas casas apos a virgula.\")","cell_type":"code","exec_count":0}
{"type":"cell","id":"f43c01","pos":2,"input":"","cell_type":"code","exec_count":0}
{"type":"cell","id":"caf0bb","pos":3,"input":"","cell_type":"code","exec_count":0}
{"type":"cell","id":"13014f","pos":4,"input":"#Exercicio 4.\n import random\nestacao=['verão', 'outono', 'inverno', 'primavera']\nmes= [\"janeiro\",'fevereiro','marco','abril','maio','junho','julho','agosto','setembro','outubro','novembro','dezembro']\nfor i in range(12):\n    arq=open(\"arq_\"+str(mes[i])+\"_\"+str(estacao[random.randint(0,3)])+\".txt\",\"w\")\n    arq.write(random.randint(5,20)*\"A minha estação predileta é \"+str(estacao[random.randint(0,3)])+\", especialmente o\"+str(mes[i])+\".\\n\")\n    arq.close()","cell_type":"code","exec_count":0}
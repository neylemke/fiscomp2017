{"type":"settings","backend_state":"running","trust":true,"kernel":"python2","kernel_state":"busy"}
{"type":"file","last_load":1495479639363}
{"output":{"0":{"text":"1:()[1] - [5])/2 = -2.0\n2:()[0] - [1])/2 = -0.5\n3:()[2] - [0])/2 = 1.0\n4:()[4] - [2])/2 = 1.0\n5:()[4] - [4])/2 = 0.0\n6:()[1] - [4])/2 = -1.5\n7:()[6] - [1])/2 = 2.5\n8:()[5] - [6])/2 = -0.5\n9:()[6] - [5])/2 = 0.5\n10:()[8] - [6])/2 = 1.0\n11:()[7] - [8])/2 = -0.5\n12:()[9] - [7])/2 = 1.0\n13:()[8] - [9])/2 = -0.5\n14:()[4] - [8])/2 = -2.0\n15:()[8] - [4])/2 = 2.0\n16:()[0] - [8])/2 = -4.0\n17:()[8] - [0])/2 = 4.0\n18:()[3] - [8])/2 = -2.5\n19:()[1] - [3])/2 = -1.0\n20:()[5] - [1])/2 = 2.0\n21:()[6] - [5])/2 = 0.5\n22:()[0] - [6])/2 = -3.0\n23:()[1] - [0])/2 = 0.5\n24:()[2] - [1])/2 = 0.5\n25:()[0] - [2])/2 = -1.0\n26:()[8] - [0])/2 = 4.0\n27:()[4] - [8])/2 = -2.0\n28:()[9] - [4])/2 = 2.5\n29:()[4] - [9])/2 = -2.5\n30:()[9] - [4])/2 = 2.5\n31:()[6] - [9])/2 = -1.5\n32:()[0] - [6])/2 = -3.0\n33:()[9] - [0])/2 = 4.5\n34:()[6] - [9])/2 = -1.5\n35:()[0] - [6])/2 = -3.0\n36:()[5] - [0])/2 = 2.5\n37:()[0] - [5])/2 = -2.5\n38:()[2] - [0])/2 = 1.0\n39:()[3] - [2])/2 = 0.5\n40:()[8] - [3])/2 = 2.5\n41:()[6] - [8])/2 = -1.0\n42:()[2] - [6])/2 = -2.0\n43:()[1] - [2])/2 = -0.5\n44:()[6] - [1])/2 = 2.5\n45:()[9] - [6])/2 = 1.5\n46:()[9] - [9])/2 = 0.0\n47:()[0] - [9])/2 = -4.5\n48:()[9] - [0])/2 = 4.5\n49:()[5] - [9])/2 = -2.0\n50:()[8] - [5])/2 = 1.5\n51:()[4] - [8])/2 = -2.0\n52:()[7] - [4])/2 = 1.5\n53:()[0] - [7])/2 = -3.5\n54:()[0] - [0])/2 = 0.0\n55:()[5] - [0])/2 = 2.5\n56:()[9] - [5])/2 = 2.0\n57:()[2] - [9])/2 = -3.5\n58:()[2] - [2])/2 = 0.0\n59:()[1] - [2])/2 = -0.5\n60:()[8] - [1])/2 = 3.5\n61:()[6] - [8])/2 = -1.0\n62:()[2] - [6])/2 = -2.0\n63:()[0] - [2])/2 = -1.0\n64:()[1] - [0])/2 = 0.5\n65:()[5] - [1])/2 = 2.0\n66:()[5] - [5])/2 = 0.0\n67:()[2] - [5])/2 = -1.5\n68:()[8] - [2])/2 = 3.0\n69:()[7] - [8])/2 = -0.5\n70:()[4] - [7])/2 = -1.5\n71:()[7] - [4])/2 = 1.5\n72:()[2] - [7])/2 = -2.5\n73:()[5] - [2])/2 = 1.5\n74:()[5] - [5])/2 = 0.0\n75:()[4] - [5])/2 = -0.5\n76:()[0] - [4])/2 = -2.0\n77:()[4] - [0])/2 = 2.0\n78:()[8] - [4])/2 = 2.0\n79:()[6] - [8])/2 = -1.0\n80:()[0] - [6])/2 = -3.0\n81:()[8] - [0])/2 = 4.0\n82:()[1] - [8])/2 = -3.5\n83:()[7] - [1])/2 = 3.0\n84:()[7] - [7])/2 = 0.0\n85:()[2] - [7])/2 = -2.5\n86:()[0] - [2])/2 = -1.0\n87:()[0] - [0])/2 = 0.0\n88:()[8] - [0])/2 = 4.0\n89:()[0] - [8])/2 = -4.0\n90:()[3] - [0])/2 = 1.5\n91:()[0] - [3])/2 = -1.5\n92:()[1] - [0])/2 = 0.5\n93:()[9] - [1])/2 = 4.0\n94:()[3] - [9])/2 = -3.0\n95:()[6] - [3])/2 = 1.5\n96:()[2] - [6])/2 = -2.0\n97:()[5] - [2])/2 = 1.5\n98:()[7] - [5])/2 = 1.0\n99:()[0] - [7])/2 = -3.5\n","name":"stdout"}},"exec_count":2,"start":1495479666757,"input":"#Exercício 1\n\nimport numpy as np\n\nv = np.int_(np.random.rand(100,1)*10)\n\nfor i in range(len(v)-1):\n    print(str(i+1)+\":()\"+str(v[i+1])+\" - \"+str(v[i])+\")/2 = \"+str(float((v[i+1]-v[i])/2.0)))\n","state":"done","pos":0,"type":"cell","end":1495479666874,"id":"604bee","kernel":"python2"}
{"output":{"0":{"name":"input","opts":{"password":false,"prompt":"Digite valor para 'a'= "}}},"exec_count":4,"start":1495479736861,"input":"#Exercício 3\n\na=int(input(\"Digite valor para 'a'= \"))\nb=int(input(\"Digite valor para 'b'= \"))\nc=int(input(\"Digite valor para 'c'= \"))\n\ndelta=((pow(b,2))-4*a*c)\nprint(delta)\n\nif delta<0:\n    print (\"Não possui solução real\")\n    import sys\n    \nelif delta ==0:\n    print (\"Delta nulo. Equação apresenta apenas uma solução real.\")\n    print (-b,a)\n    print (-b,a,(-b)/2*a)\n    \nelse:\n    import math\n    print(a,b,c)\n    float(delta)\n    delta_quadrado=math.sqrt(delta)\n    raiz_pos=(-b+raiz_quadrada)\n    raiz_neg=(-b-raiz_quadrada)\n    baixo_bsk=(2*a)\n    resultado_raiz_pos=(raiz_pos, raiz_neg)\n    resultado_raiz_neg=(raiz_pos, baixo_bsk)\n    print(b,raiz_pos,raiz_neg)\n    print(b,raiz_pos,raiz_neg)\n    print(\"Duas casas após a virgúla.\")","state":"busy","pos":1,"type":"cell","id":"55a1a2","kernel":"python2"}
{"type":"cell","id":"a19ae6","pos":2,"input":""}
{"type":"settings","kernel":"anaconda3","backend_state":"ready","trust":true,"kernel_state":"idle"}
{"type":"file","last_load":1495472752332}
{"output":{"0":{"text":"8\n0\n3\n6\n0\n9\n2\n9\n2\n0\n1\n2\n2\n3\n9\n5\n0\n6\n2\n5\n2\n0\n3\n8\n0\n8\n7\n9\n2\n7\n7\n2\n7\n2\n5\n7\n9\n4\n5\n0\n1\n8\n6\n6\n1\n8\n5\n8\n3\n5\n0\n8\n4\n6\n5\n2\n8\n1\n6\n3\n3\n2\n9\n2\n8\n0\n7\n2\n4\n1\n5\n0\n0\n8\n8\n2\n1\n6\n0\n0\n7\n9\n4\n6\n8\n2\n5\n4\n6\n7\n1\n0\n6\n2\n4\n4\n9\n6\n6\n3\n","name":"stdout"}},"exec_count":1,"input":"#Exercicio 01\n\nfrom random import randint\nfor x in range(100):\n    print(randint(0,9))\n","scrolled":true,"state":"done","pos":0,"collapsed":true,"type":"cell","id":"8bf007","kernel":"anaconda3"}
{"output":{"0":{"text":"Manipulação de notas:\n","name":"stdout"},"1":{"name":"input","opts":{"prompt":"Digite a nota do 1º aluno, quando terminar digite -1","password":false}}},"exec_count":1,"start":1497272357415,"input":"#Exercicio 02\n\nprint (\"Manipulação de notas:\")\nj=0\ni=0\nlistanotas=[]\nwhile (i!=-1):\n    i=(float(input(\"Digite a nota do \" +str(j+1)+ \"º aluno, quando terminar digite -1\")))\n    listanotas.append(i)\n    j=j+1\n    \nprint (\"O numero de notas digitadas foi:\")\nprint (j-1)\ndel listanotas[-1]\nprint (\"A lista de notas eh:\")\nprint (listanotas)\nprint (\"A lista de notas de tras pra frente eh:\")\nlistanotas.reverse()\nprint (listanotas)\nsoma=(sum(listanotas))\nmedia=soma/float(len(listanotas))\nprint (\"A soma das notas eh:\")\nprint(soma)\nprint (\"A media das notas eh:\")\nprint(media)\nacimadamedia=[]\nabaixodesete=[]\ni=0\nfor i in range(len(listanotas)):\n    if(listanotas[i]>media):\n        acimadamedia.append(listanotas[i])\n    if(listanotas[i]<7):\n        abaixodesete.append(listanotas[i])\nprint (\"existem \" +str(len(acimadamedia))+ \" notas acima da media, são:\")\nprint (acimadamedia)\nprint (\"existem \" +str(len(abaixodesete))+ \" notas abaixo de sete, são:\")\nprint (abaixodesete)\nprint (\"\\n\")\nprint (\"Obrigado por usar, volte sempre :D\")","scrolled":false,"state":"done","pos":1,"type":"cell","id":"794acc","kernel":"anaconda3"}
{"type":"cell","id":"b285df","pos":3,"input":"#Exercicio 03\na=input(\"Digite o coeficiente 'a'= \")\nif a == 0:\n    a=input(\"O valor de a não pode ser nulo, digite um valor maior ou menor que 0 = \")\nb=input(\"Digite o coeficiente 'b'= \")\nc=input(\"Digite o coeficiente 'c'= \")\nprint \"a = %s\" % (a)\nprint \"b = %s\" % (b)\nprint \"c = %s\" % (c)\ndelta = \"b^2-4ac = %d\" % ((pow(b,2))-4*a*c)\nprint delta\nresultado_delta = (pow(b,2))-4*a*c\nif resultado_delta < 0:\n    print \"Delta Negativo, Equação nao apresenta soluções reais.\"\n    import sys\n\nif resultado_delta == 0:  \n    print \"Delta nulo. Equação apresenta apenas uma solução real.\"\n    print \"%s / 2*%s\" % (-b,a)\n    print \"%s / 2*%s = %d\" % (-b,a,(-b)/2*a)\n           \nelse:\n    import math\n    print \"%sx^2 + (%s) + (%s) = 0\" % (a,b,c)\n    float(resultado_delta)\n    raiz_quadrada = math.sqrt(resultado_delta)\n    cima_bsk_pos=(-b+raiz_quadrada)\n    cima_bsk_neg=(-b-raiz_quadrada)\n    baixo_bsk=(2*a)\n    resultado_raiz_pos= \"%s / %s\" % (cima_bsk_pos,baixo_bsk)\n    resultado_raiz_neg= \"%s / %s\" % (cima_bsk_neg,baixo_bsk)\n    print \"Para -(%s) + %s / 2*a temos: %s\" % (b,raiz_quadrada,resultado_raiz_pos)\n    print \"Para -(%s) - %s / 2*a temos: %s\" % (b,raiz_quadrada,resultado_raiz_neg)\n    print \"Recomendo tomar duas casas apos a virgula.\"\n ","state":"done","kernel":"anaconda3"}
{"type":"cell","id":"cb3767","pos":4,"input":"#Exercicio 4\nest=['Primavera', 'Outono', 'Inverno', 'Verão']\nmes= ['Janeiro','Fevereiro','Março','Abril','Maio','Junho','Julho','Agosto','Setembro', 'Outubro', 'Novembro','Dezembro']\n\nfrom random import randrange\nfor i in range (1,13):\n    if i > 3 and i <=6:\n        j=1\n    elif i >=6 and i<=9:\n        j=2\n    elif i >=9 and i<=12:\n        j=3\n    else:\n        j=4\n\n    content = \"A minha estação predileta é \"+str(est[j-1])+\", especialmente o \"+str(mes[j-i])+\".\\n\"\n    with open('arq_'+str(mes[i-1])+'_'+str(est[j-1])+'.txt','w') as f:\n              for k in range (1,randrange(6,20)):\n                  f.write(content)\n    f.close()\n    !zip file.zip arq*.txt"}
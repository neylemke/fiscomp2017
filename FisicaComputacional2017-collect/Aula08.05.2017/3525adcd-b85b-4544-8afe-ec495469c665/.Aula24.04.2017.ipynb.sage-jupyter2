{"type":"cell","id":"1c94e7","pos":103,"input":"plt.plot_date(gb['start date'].max(), gb['dblfaults'].mean(), '-', lw=3)\nplt.plot_date(df['start date'], df['dblfaults'], alpha=.25, lw=0)\nplt.ylabel('Proportion of double faults per match.')\nplt.xlabel('Year')\nplt.show()","output":{"0":{"data":{"image/png":"24c4c1f68ec78ff5f3d70391bab9d9e85b900f5b"},"output_type":"display_data"}},"cell_type":"code","exec_count":43,"scrolled":true}
{"type":"cell","id":"cf50fd","pos":48,"input":" Estamos basicamente criando o conjunto de dados. Agora vamos usar a biblioteca pandas para exportar este conjunto de dados em um arquivo csv.\n- **df** será um objeto **DataFrame**. Você pode pensar neste objeto mantendo o conteúdo do listaindex  em um formato semelhante a uma tabela sql ou uma planilha do Excel. Vamos dar uma olhada abaixo no conteúdo dentro df .","cell_type":"markdown","collapsed":true}
{"type":"cell","id":"cde522","pos":41,"input":"obj2['a'] # acessando pela chave usando a notação de dicionários","output":{"0":{"data":{"text/plain":"-5"},"output_type":"execute_result","exec_count":9}},"cell_type":"code","exec_count":9}
{"type":"cell","id":"1d14df","pos":52,"input":"[{\"nome\": \"serie1\", hghg: }\n ,{\"nome\"}]","cell_type":"code","collapsed":true}
{"type":"cell","id":"f8aca0","pos":27,"input":"df2","output":{"0":{"data":{"text/plain":"  day       filename  filesize group   hour month        perm  \\\n9  22  cookbook-data      4096     4  01:09   Apr  drwxr-x---   \n\n                               user                          usercode  \n9  da4b09c773a74027ac2d5fed6d409acf  da4b09c773a74027ac2d5fed6d409acf  "},"output_type":"execute_result","exec_count":114}},"cell_type":"code","exec_count":114}
{"type":"cell","id":"d72c1e","pos":15,"input":"!more test.dat\n","output":{"0":{"name":"stdout","output_type":"stream","text":"Ola mundo!\r\nAdeus mundo...\r\n"}},"cell_type":"code","exec_count":50}
{"type":"cell","id":"d39330","pos":45,"input":"obj2 * 2","output":{"0":{"data":{"text/plain":"d     8\nb    14\na   -10\nc     6\ndtype: int64"},"output_type":"execute_result","exec_count":65}},"cell_type":"code","exec_count":65}
{"type":"cell","id":"8e5238","pos":30,"input":"** 1.1 `Series`**\n- A Series é um objeto de tipo matriz unidimensional contendo uma matriz de dados (de NumPy tipo de dados) e uma matriz associada de rótulos de dados, chamado seu índice. A série mais simples é formada apenas a partir de uma matriz de dados:","cell_type":"markdown"}
{"type":"cell","id":"8119e9","pos":22,"input":"with open(\"matriznum.csv\",\"r\") as f:\n    lines=f.readlines()","cell_type":"code","exec_count":55}
{"type":"cell","id":"f8c277","pos":96,"input":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplayer = 'Roger Federer'\nfilename = \"./cookbook-data/data/{name}.csv\".format(name=player.replace(' ', '-')) \ndf = pd.read_csv(filename)","cell_type":"code","exec_count":36,"collapsed":true}
{"type":"cell","id":"2bd5e4","pos":94,"input":"### Para baixar os programas use o comando (não será necessário no SageMathCloud)","cell_type":"markdown"}
{"type":"cell","id":"6bfc7f","pos":97,"input":"df","output":{"0":{"more_output":true}},"cell_type":"code","exec_count":37}
{"type":"cell","id":"de681b","pos":54,"input":"df=pd.DataFrame(dict)","cell_type":"code","exec_count":70,"collapsed":true}
{"type":"cell","id":"8b3633","pos":12,"input":"- Podemos definir o modo como esse arquivo pode ser aberto: Em **’r’**  temos somente leitura (arquivo deve já existir). No modo **’w’** escrita (se o arquivo já existir: remove o conteúdo) e **’a’** escrita (se o arquivo já existir: acrescenta ao final).\n- Veja o exemplo a seguir:","cell_type":"markdown","slide":"subslide"}
{"type":"cell","id":"289a59","pos":29,"input":"**1. Introdução a estrutura de dados**\n- Para começar com pandas, você precisará se sentir confortável com suas estruturas de dados: `Series` e `DataFrame`. Embora não sejam uma solução universal para problema, eles fornecem uma base sólida e fácil de usar para a maioria das aplicações.","cell_type":"markdown","slide":"subslide"}
{"type":"cell","id":"fb6cde","pos":20,"input":"**4. Diretórios**\n- Quando você cria um novo arquivo abrindo-o e escrevendo nele, o novo arquivo fica no diretório corrente (seja lá onde for que você esteja quando rodar o programa). Do mesmo modo, quando você abre um arquivo para leitura, Python procura por ele no diretório corrente.\n\n- Se você quiser abrir um arquivo que esteja em algum outro lugar, você tem que especificar o caminho (path) para o arquivo, o qual é o nome do diretório (ou folder) onde o arquivo está localizado:\n\n```python\n f = open(\"Documments/pasta/arquivo\", \"r\")\n   print f.readline()\n```","cell_type":"markdown"}
{"type":"cell","id":"c38ff9","pos":104,"input":"**Exercício:**\n\n1. Construa uma tabela com o número de vitórias e derrotas de Federer para cada tipo de terreno. ","cell_type":"markdown"}
{"type":"cell","id":"b1a44c","pos":73,"input":"!ls -la ","output":{"0":{"name":"stdout","output_type":"stream","text":"total 604\r\ndrwxr-x---  4 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   4096 Apr 27 14:42 .\r\ndrwx------ 19 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   4096 Apr 27 11:29 ..\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf  10949 Apr 24 19:04 2017-04-24-140938.ipynb\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   8972 Apr 24 18:58 .2017-04-24-140938.ipynb.sage-jupyter\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   7131 Apr 23 16:59 .Analisedados.ipynb.sage-jupyter\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf    406 Apr 24 18:53 arq_abr_outuno.txt\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   1121 Apr 24 18:53 arq_ago_inverno.txt\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   1220 Apr 24 18:53 arq_dez_primavera.txt\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf    684 Apr 24 18:53 arq_fev_verao.txt\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   1368 Apr 24 18:53 arq_jan_verao.txt\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf    885 Apr 24 18:53 arq_jul_inverno.txt\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   1276 Apr 24 18:53 arq_jun_outuno.txt\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   1102 Apr 24 18:53 arq_mai_outuno.txt\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf    342 Apr 24 18:53 arq_mar_verao.txt\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   1586 Apr 24 18:53 arq_nov_primavera.txt\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf    610 Apr 24 18:53 arq_out_primavera.txt\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf    610 Apr 24 18:53 arq_set_primavera.txt\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf  19129 Apr 24 00:13 .Aula21.04.2017.ipynb.sage-jupyter\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf  17908 Apr 23 17:38 .Aula24.03.2017.ipynb.sage-jupyter\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf 205847 Apr 27 14:42 Aula24.04.2017.ipynb\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf  30152 Apr 27 14:42 .Aula24.04.2017.ipynb.sage-jupyter\r\ndrwxr-x---  4 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   4096 Apr 22 01:09 cookbook-data\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   1133 Apr 24 18:14 dicchar.csv\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf    571 Apr 24 17:55 file.zip\r\ndrwxr-x---  2 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   4096 Apr 24 17:09 .ipynb_checkpoints\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf     74 Apr 24 17:22 matriznum2.csv\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf     74 Apr 24 17:21 matriznum.csv\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf 181342 Apr 27 12:51 python.dados.pandas.ipynb\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf  19127 Apr 23 19:48 .python.dados.pandas.ipynb.sage-jupyter\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf     24 Apr 24 16:57 test.append.dat\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf     40 Apr 24 17:37 test.dat\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf   3969 Apr 27 14:42 teste.txt\r\n-rw-r-----  1 da4b09c773a74027ac2d5fed6d409acf da4b09c773a74027ac2d5fed6d409acf    219 Apr 24 17:21 texto.txt\r\n"}},"cell_type":"code","exec_count":9}
{"type":"cell","id":"78ec32","pos":9,"input":"- Ao abrirmos o arquivo de matriznum, encontramos:","cell_type":"markdown","slide":"subslide"}
{"type":"cell","id":"91989f","pos":79,"input":"**- Qual é o maior arquivo? Qual é o menor?** ","cell_type":"markdown"}
{"type":"cell","id":"227e43","pos":90,"input":"df.ix[2]","output":{"0":{"data":{"text/plain":"day                                       24\nfilename             2017-04-24-140938.ipynb\nfilesize                               10949\ngroup                                      1\nhour                                   19:04\nmonth                                    Apr\nperm                              -rw-r-----\nuser        da4b09c773a74027ac2d5fed6d409acf\nusercode    da4b09c773a74027ac2d5fed6d409acf\nName: 2, dtype: object"},"output_type":"execute_result","exec_count":31}},"cell_type":"code","exec_count":31}
{"type":"cell","id":"460851","pos":25,"input":"## Pandas","cell_type":"markdown"}
{"type":"cell","id":"ba7d72","pos":43,"input":"obj.iloc[2] # acessando pela posição","output":{"0":{"data":{"text/plain":"-5"},"output_type":"execute_result","exec_count":11}},"cell_type":"code","exec_count":11}
{"type":"cell","id":"48b1d0","pos":67,"input":"**4. Obter dados**","cell_type":"markdown"}
{"type":"cell","id":"8520b9","pos":98,"input":"df['win'] = df['winner'] == player\ndf['win'].tail()","output":{"0":{"data":{"text/plain":"1174    False\n1175     True\n1176     True\n1177     True\n1178    False\nName: win, dtype: bool"},"output_type":"execute_result","exec_count":38}},"cell_type":"code","exec_count":38}
{"type":"cell","id":"b0feb4","pos":49,"input":"import pandas as pd","cell_type":"code","exec_count":4,"collapsed":true}
{"type":"cell","id":"d3cf7f","pos":81,"input":"(df['filesize'].max(),df['filesize'].min())","output":{"0":{"data":{"text/plain":"('8972', '0')"},"output_type":"execute_result","exec_count":14}},"cell_type":"code","exec_count":14}
{"output":{"0":{"text":"Overwriting texto.txt\n","name":"stdout"}},"exec_count":2,"start":1494268121911,"input":"%%writefile texto.txt\nMas o que quer dizer este poema? - perguntou-me alarmada a boa senhora.\nE o que quer dizer uma nuvem? - respondi triunfante.\nUma nuvem - disse ela - umas vezes quer dizer chuva, outras vezes bom tempo...\n\nMario Quintana","state":"done","pos":3,"cell_type":"code","type":"cell","end":1494268121923,"id":"8ef287","kernel":"python3"}
{"type":"cell","id":"1fb6f4","pos":5,"input":"with open('texto.txt', 'r') as f:\n    print(f.read())","output":{"0":{"name":"stdout","output_type":"stream","text":"Mas o que quer dizer este poema? - perguntou-me alarmada a boa senhora.\nE o que quer dizer uma nuvem? - respondi triunfante.\nUma nuvem - disse ela - umas vezes quer dizer chuva, outras vezes bom tempo...\n\nMario Quintana\n"}},"cell_type":"code","exec_count":24}
{"type":"cell","id":"2c68e1","pos":62,"input":"df.ix[2]","output":{"0":{"data":{"text/plain":"char              2\nnum              50\nbinario    0b110010\nName: 2, dtype: object"},"output_type":"execute_result","exec_count":79}},"cell_type":"code","exec_count":79}
{"type":"cell","id":"978834","pos":74,"input":"df['filename']","output":{"0":{"data":{"text/plain":"0                                           .\n1                                          ..\n2                     2017-04-24-140938.ipynb\n3       .2017-04-24-140938.ipynb.sage-jupyter\n4            .Analisedados.ipynb.sage-jupyter\n5                          arq_abr_outuno.txt\n6                         arq_ago_inverno.txt\n7                       arq_dez_primavera.txt\n8                           arq_fev_verao.txt\n9                           arq_jan_verao.txt\n10                        arq_jul_inverno.txt\n11                         arq_jun_outuno.txt\n12                         arq_mai_outuno.txt\n13                          arq_mar_verao.txt\n14                      arq_nov_primavera.txt\n15                      arq_out_primavera.txt\n16                      arq_set_primavera.txt\n17         .Aula21.04.2017.ipynb.sage-jupyter\n18         .Aula24.03.2017.ipynb.sage-jupyter\n19                       Aula24.04.2017.ipynb\n20         .Aula24.04.2017.ipynb.sage-jupyter\n21                              cookbook-data\n22                                dicchar.csv\n23                                   file.zip\n24                         .ipynb_checkpoints\n25                             matriznum2.csv\n26                              matriznum.csv\n27                  python.dados.pandas.ipynb\n28    .python.dados.pandas.ipynb.sage-jupyter\n29                            test.append.dat\n30                                   test.dat\n31                                  teste.txt\n32                                  texto.txt\nName: filename, dtype: object"},"output_type":"execute_result","exec_count":10}},"cell_type":"code","exec_count":10}
{"type":"cell","id":"48ac2d","pos":63,"input":"**3. Exportar arquivos em csv com pandas**\n- Exporte o dataframe para um arquivo csv . Podemos nomear o arquivo dicchar.csv . A função to_csv será usada para exportar o arquivo. O arquivo será salvo no mesmo local do notebook, a menos que especificado de outra forma.","cell_type":"markdown"}
{"type":"cell","id":"088019","pos":89,"input":"df[df['day']=='22']","output":{"0":{"data":{"text/html":"<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>day</th>\n      <th>filename</th>\n      <th>filesize</th>\n      <th>group</th>\n      <th>hour</th>\n      <th>month</th>\n      <th>perm</th>\n      <th>user</th>\n      <th>usercode</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>21</th>\n      <td>22</td>\n      <td>cookbook-data</td>\n      <td>4096</td>\n      <td>4</td>\n      <td>01:09</td>\n      <td>Apr</td>\n      <td>drwxr-x---</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":28}},"cell_type":"code","exec_count":28}
{"type":"cell","id":"273c14","pos":64,"input":"df.to_csv ( 'dicchar.csv' , index = False , header = True)","cell_type":"code","exec_count":84,"collapsed":true}
{"type":"cell","id":"607c88","pos":65,"input":"!more dicchar.csv\n","output":{"0":{"name":"stdout","output_type":"stream","text":"char,num,binario\n0,48,0b110000\n1,49,0b110001\n2,50,0b110010\n3,51,0b110011\n4,52,0b110100\n5,53,0b110101\n6,54,0b110110\n7,55,0b110111\n8,56,0b111000\n9,57,0b111001\n:,58,0b111010\n;,59,0b111011\n<,60,0b111100\n=,61,0b111101\n>,62,0b111110\n?,63,0b111111\n@,64,0b1000000\nA,65,0b1000001\nB,66,0b1000010\nC,67,0b1000011\nD,68,0b1000100\nE,69,0b1000101\n\u001b[K"}},"cell_type":"code","exec_count":85}
{"type":"cell","id":"e8b8b8","pos":37,"input":"- Muitas vezes, será desejável criar uma Série com um índice identificando cada ponto de dados:","cell_type":"markdown","slide":"subslide"}
{"type":"cell","id":"579f1c","pos":72,"input":"**- Quantos arquivos são escondidos?**","cell_type":"markdown"}
{"type":"cell","id":"6b2028","pos":86,"input":"len([filename for filename  in df['filename'] if filename[-6:]==\".ipynb\"])","output":{"0":{"data":{"text/plain":"3"},"output_type":"execute_result","exec_count":103}},"cell_type":"code","exec_count":103}
{"type":"cell","id":"4f9cc7","pos":8,"input":"more ","cell_type":"code","collapsed":true}
{"type":"cell","id":"038aa0","pos":40,"input":"- Existem pelo menos 3 maneiras de acessar os elementos de uma série:","cell_type":"markdown"}
{"type":"cell","id":"2fda3b","pos":19,"input":"**3. arquivos de texto vs. binários**\n\n- arquivos de texto: contêm apenas caracteres imprimíveis e espaços, tabulação, etc.\n- arquivos binários: imagens JPEG, audio MP3, programas, etc.\n- Por omissão: open assume que o arquivos é de texto\n- Em linux/unix: não há diferença essencial entre os arquivos de texto e binários; ambos podem ser processados – abertos, lidos, escritos. . . – da mesma forma.","cell_type":"markdown","slide":"subslide"}
{"type":"cell","id":"dcd2bb","pos":87,"input":"df","output":{"0":{"data":{"text/html":"<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>day</th>\n      <th>filename</th>\n      <th>filesize</th>\n      <th>group</th>\n      <th>hour</th>\n      <th>month</th>\n      <th>perm</th>\n      <th>user</th>\n      <th>usercode</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>27</td>\n      <td>.</td>\n      <td>4096</td>\n      <td>4</td>\n      <td>14:42</td>\n      <td>Apr</td>\n      <td>drwxr-x---</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>27</td>\n      <td>..</td>\n      <td>4096</td>\n      <td>19</td>\n      <td>11:29</td>\n      <td>Apr</td>\n      <td>drwx------</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>24</td>\n      <td>2017-04-24-140938.ipynb</td>\n      <td>10949</td>\n      <td>1</td>\n      <td>19:04</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>24</td>\n      <td>.2017-04-24-140938.ipynb.sage-jupyter</td>\n      <td>8972</td>\n      <td>1</td>\n      <td>18:58</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>23</td>\n      <td>.Analisedados.ipynb.sage-jupyter</td>\n      <td>7131</td>\n      <td>1</td>\n      <td>16:59</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>24</td>\n      <td>arq_abr_outuno.txt</td>\n      <td>406</td>\n      <td>1</td>\n      <td>18:53</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>24</td>\n      <td>arq_ago_inverno.txt</td>\n      <td>1121</td>\n      <td>1</td>\n      <td>18:53</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>24</td>\n      <td>arq_dez_primavera.txt</td>\n      <td>1220</td>\n      <td>1</td>\n      <td>18:53</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>24</td>\n      <td>arq_fev_verao.txt</td>\n      <td>684</td>\n      <td>1</td>\n      <td>18:53</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>24</td>\n      <td>arq_jan_verao.txt</td>\n      <td>1368</td>\n      <td>1</td>\n      <td>18:53</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>24</td>\n      <td>arq_jul_inverno.txt</td>\n      <td>885</td>\n      <td>1</td>\n      <td>18:53</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>24</td>\n      <td>arq_jun_outuno.txt</td>\n      <td>1276</td>\n      <td>1</td>\n      <td>18:53</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>24</td>\n      <td>arq_mai_outuno.txt</td>\n      <td>1102</td>\n      <td>1</td>\n      <td>18:53</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>24</td>\n      <td>arq_mar_verao.txt</td>\n      <td>342</td>\n      <td>1</td>\n      <td>18:53</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>24</td>\n      <td>arq_nov_primavera.txt</td>\n      <td>1586</td>\n      <td>1</td>\n      <td>18:53</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>24</td>\n      <td>arq_out_primavera.txt</td>\n      <td>610</td>\n      <td>1</td>\n      <td>18:53</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>24</td>\n      <td>arq_set_primavera.txt</td>\n      <td>610</td>\n      <td>1</td>\n      <td>18:53</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>24</td>\n      <td>.Aula21.04.2017.ipynb.sage-jupyter</td>\n      <td>19129</td>\n      <td>1</td>\n      <td>00:13</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>23</td>\n      <td>.Aula24.03.2017.ipynb.sage-jupyter</td>\n      <td>17908</td>\n      <td>1</td>\n      <td>17:38</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>27</td>\n      <td>Aula24.04.2017.ipynb</td>\n      <td>205847</td>\n      <td>1</td>\n      <td>14:42</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>27</td>\n      <td>.Aula24.04.2017.ipynb.sage-jupyter</td>\n      <td>30152</td>\n      <td>1</td>\n      <td>14:42</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>22</td>\n      <td>cookbook-data</td>\n      <td>4096</td>\n      <td>4</td>\n      <td>01:09</td>\n      <td>Apr</td>\n      <td>drwxr-x---</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>24</td>\n      <td>dicchar.csv</td>\n      <td>1133</td>\n      <td>1</td>\n      <td>18:14</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>24</td>\n      <td>file.zip</td>\n      <td>571</td>\n      <td>1</td>\n      <td>17:55</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>24</td>\n      <td>.ipynb_checkpoints</td>\n      <td>4096</td>\n      <td>2</td>\n      <td>17:09</td>\n      <td>Apr</td>\n      <td>drwxr-x---</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>24</td>\n      <td>matriznum2.csv</td>\n      <td>74</td>\n      <td>1</td>\n      <td>17:22</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>24</td>\n      <td>matriznum.csv</td>\n      <td>74</td>\n      <td>1</td>\n      <td>17:21</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>27</td>\n      <td>python.dados.pandas.ipynb</td>\n      <td>181342</td>\n      <td>1</td>\n      <td>12:51</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>23</td>\n      <td>.python.dados.pandas.ipynb.sage-jupyter</td>\n      <td>19127</td>\n      <td>1</td>\n      <td>19:48</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>24</td>\n      <td>test.append.dat</td>\n      <td>24</td>\n      <td>1</td>\n      <td>16:57</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>24</td>\n      <td>test.dat</td>\n      <td>40</td>\n      <td>1</td>\n      <td>17:37</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>27</td>\n      <td>teste.txt</td>\n      <td>0</td>\n      <td>1</td>\n      <td>14:42</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>24</td>\n      <td>texto.txt</td>\n      <td>219</td>\n      <td>1</td>\n      <td>17:21</td>\n      <td>Apr</td>\n      <td>-rw-r-----</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n      <td>da4b09c773a74027ac2d5fed6d409acf</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":15}},"cell_type":"code","exec_count":15}
{"type":"cell","id":"c43c4a","pos":99,"input":"(\"{player} has won {vic:.0f}% \"\n               \"of his ATP matches.\").format(\n                player=player, vic=100*df['win'].mean())","output":{"0":{"data":{"text/plain":"'Roger Federer has won 82% of his ATP matches.'"},"output_type":"execute_result","exec_count":39}},"cell_type":"code","exec_count":39}
{"type":"cell","id":"b7726b","pos":92,"input":"## Exercícios (0.25 pts)\n\n1. Com base nos dados de https://pt.wikipedia.org/w/index.php?title=Lista_de_epis%C3%B3dios_de_Pok%C3%A9mon&action=edit construa um dataframe para armazenar \nas informações sobre os episódios de Pokemon, contendo: \n- Série\n- Geração\n- Temporada\n- Primeiro Episódio\n- Último Episódio\n- Região\n2. Descubra qual a geração mais longeva\n3. Descubra quantas temporadas durou cada série\n","cell_type":"markdown"}
{"type":"cell","id":"4bb785","pos":2,"input":"**1.  Métodos sobre arquivos**\n- Inicialmente, como já foi ensinado em aulas anteriores, vamos criar um arquivo de texto que será utilizado nos próximos exemplos.","cell_type":"markdown","slide":"subslide"}
{"type":"cell","id":"2d509e","pos":88,"input":"(df['day'].min())","output":{"0":{"data":{"text/plain":"'22'"},"output_type":"execute_result","exec_count":23}},"cell_type":"code","exec_count":23}
{"exec_count":3,"start":1494268133252,"input":"f=open(\"test.dat\",\"a\")\ntxt=f.write(\"Mais uma linha\")\nf.close()","state":"done","pos":17,"cell_type":"code","type":"cell","end":1494268133316,"id":"862982","kernel":"python3"}
{"type":"cell","id":"b13c9c","pos":42,"input":"obj2.a # acessando pela chave usando a notação de objetos de uma classe","output":{"0":{"data":{"text/plain":"-5"},"output_type":"execute_result","exec_count":10}},"cell_type":"code","exec_count":10}
{"type":"cell","id":"5ff83f","pos":95,"input":"%%sh\n\ngit clone https://github.com/ipython-books/cookbook-data.git\ncd cookbook-data\nunzip tennis.zip","cell_type":"code","collapsed":true}
{"exec_count":67,"input":"dict=[{'char': chr(i), 'num': i } for i in range(48,122)]","scrolled":true,"pos":51,"collapsed":true,"cell_type":"code","type":"cell","id":"abf64a"}
{"type":"cell","id":"f42ffb","pos":66,"input":"- Podemos exportar arquivos em em excel ou leitura colocando no **.xls** ou **.txt** no lugar do csv no exemplo a cima.","cell_type":"markdown"}
{"type":"cell","id":"b211ed","pos":70,"input":"data[0]","output":{"0":{"data":{"text/plain":"['drwxr-x---',\n '4',\n 'da4b09c773a74027ac2d5fed6d409acf',\n 'da4b09c773a74027ac2d5fed6d409acf',\n '4096',\n 'Apr',\n '24',\n '18:15',\n '.']"},"output_type":"execute_result","exec_count":90}},"cell_type":"code","exec_count":90}
{"type":"cell","id":"438944","pos":80,"input":"df['filesize']","output":{"0":{"data":{"text/plain":"0       4096\n1       4096\n2      10949\n3       8972\n4       7131\n5        406\n6       1121\n7       1220\n8        684\n9       1368\n10       885\n11      1276\n12      1102\n13       342\n14      1586\n15       610\n16       610\n17     19129\n18     17908\n19    205847\n20     30152\n21      4096\n22      1133\n23       571\n24      4096\n25        74\n26        74\n27    181342\n28     19127\n29        24\n30        40\n31         0\n32       219\nName: filesize, dtype: object"},"output_type":"execute_result","exec_count":13}},"cell_type":"code","exec_count":13}
{"type":"cell","id":"ba5b41","pos":26,"input":"minday=df['day'].min()\ndf2=df[df['day']==minday]\n","output":{"0":{"ename":"NameError","evalue":"name 'df' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-7ce6f1f66b35>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mminday\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'day'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mdf2\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'day'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m==\u001b[0m\u001b[0mminday\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"]}},"cell_type":"code","exec_count":1}
{"type":"cell","id":"5b4f3c","pos":82,"input":"Ops ...","cell_type":"markdown"}
{"type":"cell","id":"ef58ca","pos":46,"input":"obj2[obj2>0] # seleciona os positivos`","output":{"0":{"data":{"text/plain":"d    4\nb    7\nc    3\ndtype: int64"},"output_type":"execute_result","exec_count":66}},"cell_type":"code","exec_count":66}
{"type":"cell","id":"848e07","pos":23,"input":"for line in lines:\n    print(line.split())","output":{"0":{"name":"stdout","output_type":"stream","text":"['18576', '182383', '18383', '18383']\n['18383', '183838', '18338', '19933']\n['17273', '173773', '18283', '18283']\n"}},"cell_type":"code","exec_count":58}
{"type":"cell","id":"6ebd79","pos":100,"input":"df['dblfaults'] = (df['player1 double faults'] / \n                   df['player1 total points total'])","cell_type":"code","exec_count":40,"collapsed":true}
{"type":"cell","id":"ee345b","pos":33,"input":"obj","output":{"0":{"data":{"text/plain":"0    4\n1    7\n2   -5\n3    3\ndtype: int64"},"output_type":"execute_result","exec_count":61}},"cell_type":"code","exec_count":61}
{"type":"cell","id":"1db4b1","pos":36,"input":"obj.index","output":{"0":{"data":{"text/plain":"RangeIndex(start=0, stop=4, step=1)"},"output_type":"execute_result","exec_count":62}},"cell_type":"code","exec_count":62}
{"type":"cell","id":"4188c6","pos":60,"input":"df[['num','binario']]","output":{"0":{"output_type":"execute_result","exec_count":78}},"cell_type":"code","exec_count":78}
{"type":"cell","id":"444b1a","pos":61,"input":"Para acessar os dados pelo índice.","cell_type":"markdown"}
{"type":"cell","id":"a11e2d","pos":10,"input":"with open('matriznum.csv', 'r') as f:\n    print(f.read())","output":{"0":{"name":"stdout","output_type":"stream","text":"18576 182383 18383 18383\n18383 183838 18338 19933\n17273 173773 18283 18283\n"}},"cell_type":"code","exec_count":27}
{"type":"cell","id":"bfc75f","pos":1,"input":"### Arquivos\n\n- Arquivo é um conjunto de dados.\n- Identificados por um caminho (absoluto/relativo)\n- Ao contrário de valores de variáveis, os arquivos são persistentes\n- Para o sistema operacional um arquivo é  uma sequência de bytes\n- Suportes físicos: discos magnéticos, memórias flash, CD-Rs e etc.","cell_type":"markdown","slide":"subslide"}
{"type":"cell","id":"a31941","pos":55,"input":"df","output":{"0":{"data":{"text/html":"<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>char</th>\n      <th>num</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>48</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>49</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>50</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>52</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>5</td>\n      <td>53</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>6</td>\n      <td>54</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7</td>\n      <td>55</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>8</td>\n      <td>56</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>9</td>\n      <td>57</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>:</td>\n      <td>58</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>;</td>\n      <td>59</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>&lt;</td>\n      <td>60</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>=</td>\n      <td>61</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>&gt;</td>\n      <td>62</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>?</td>\n      <td>63</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>@</td>\n      <td>64</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>A</td>\n      <td>65</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>B</td>\n      <td>66</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>C</td>\n      <td>67</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>D</td>\n      <td>68</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>E</td>\n      <td>69</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>F</td>\n      <td>70</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>G</td>\n      <td>71</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>H</td>\n      <td>72</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>I</td>\n      <td>73</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>J</td>\n      <td>74</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>K</td>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>L</td>\n      <td>76</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>M</td>\n      <td>77</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>\\</td>\n      <td>92</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>]</td>\n      <td>93</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>^</td>\n      <td>94</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>_</td>\n      <td>95</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>`</td>\n      <td>96</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>a</td>\n      <td>97</td>\n    </tr>\n    <tr>\n      <th>50</th>\n      <td>b</td>\n      <td>98</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>c</td>\n      <td>99</td>\n    </tr>\n    <tr>\n      <th>52</th>\n      <td>d</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>e</td>\n      <td>101</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>f</td>\n      <td>102</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>g</td>\n      <td>103</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>h</td>\n      <td>104</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>i</td>\n      <td>105</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>j</td>\n      <td>106</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>k</td>\n      <td>107</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>l</td>\n      <td>108</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>m</td>\n      <td>109</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>n</td>\n      <td>110</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>o</td>\n      <td>111</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>p</td>\n      <td>112</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>q</td>\n      <td>113</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>r</td>\n      <td>114</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>s</td>\n      <td>115</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>t</td>\n      <td>116</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>u</td>\n      <td>117</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>v</td>\n      <td>118</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>w</td>\n      <td>119</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>x</td>\n      <td>120</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>y</td>\n      <td>121</td>\n    </tr>\n  </tbody>\n</table>\n<p>74 rows × 2 columns</p>\n</div>"},"output_type":"execute_result","exec_count":71}},"cell_type":"code","exec_count":71}
{"type":"cell","id":"f6fea4","pos":57,"input":"Para criar uma nova coluna de dados é fácil.","cell_type":"markdown"}
{"type":"cell","id":"a615ce","pos":102,"input":"gb = df.groupby('year')","cell_type":"code","exec_count":42,"collapsed":true}
{"type":"cell","id":"156da7","pos":13,"input":"- A seguir podemos ver um exemplo de escrita e leitura de uma arquivo:","cell_type":"markdown","slide":"subslide"}
{"type":"cell","id":"c9ea07","pos":35,"input":"obj.values","output":{"0":{"data":{"text/plain":"array([ 4,  7, -5,  3])"},"output_type":"execute_result","exec_count":5}},"cell_type":"code","exec_count":5}
{"type":"cell","id":"b3f762","pos":16,"input":"f = open(\"test.dat\", \"r\")\ntxt = f.read()\ntxt\n","output":{"0":{"data":{"text/plain":"'Ola mundo!\\nAdeus mundo...\\n'"},"output_type":"execute_result","exec_count":52}},"cell_type":"code","exec_count":52}
{"type":"cell","id":"e6b831","pos":84,"input":"\"O maior arquivo possui  {} bytes, o menor {} bytes\".format(maxi,mini)","output":{"0":{"data":{"text/plain":"'O maior arquivo possui  208678 bytes, o menor 0 bytes'"},"output_type":"execute_result","exec_count":102}},"cell_type":"code","exec_count":102}
{"type":"cell","id":"79ea29","pos":75,"input":"len([filename for filename  in df['filename'] if filename[0]==\".\"])","output":{"0":{"data":{"text/plain":"9"},"output_type":"execute_result","exec_count":11}},"cell_type":"code","exec_count":11}
{"type":"cell","id":"91c895","pos":14,"input":"f = open(\"test.dat\", \"w\")\nf.write(\"Ola mundo!\\n\")\nf.write(\"Adeus mundo...\\n\")\nf.close()","cell_type":"code","exec_count":48,"collapsed":true}
{"type":"cell","id":"3414e6","pos":11,"input":"**2. Métodos sobre arquivos**\n\n- **f.write(str)**: escrever uma cadeia;\n- **f.read()**: lê todo o conteudo (uma “string”);\n- **f.read(n)**: lê apenas n caracteres;\n- **f.readline()**: lê uma linha de texto;\n- **f.close()**: terminar leitura/escrita no arquivo;","cell_type":"markdown","slide":"subslide"}
{"type":"cell","id":"494d28","pos":93,"input":"## Exemplo Tenis","cell_type":"markdown"}
{"type":"cell","id":"0951c5","pos":34,"input":"- A representação de sequência de caracteres de uma série exibida interativamente mostra o índice à esquerda e os valores à direita. Como não especificamos um índice para os dados, é criado um padrão consistindo nos inteiros 0 a N-1 (onde N é o comprimento dos dados). Você pode obter a representação de matriz eo objeto de índice da Série por meio de seus valores e atributos de índice, respectivamente:","cell_type":"markdown"}
{"type":"cell","id":"9f7077","pos":101,"input":"df['dblfaults'].tail()","output":{"0":{"data":{"text/plain":"1174    0.018116\n1175    0.000000\n1176    0.000000\n1177    0.011561\n1178         NaN\nName: dblfaults, dtype: float64"},"output_type":"execute_result","exec_count":41}},"cell_type":"code","exec_count":41}
{"type":"settings","kernel":"python3","backend_state":"running","metadata":{"celltoolbar":"Slideshow","language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.4.3+"}},"kernel_state":"idle","trust":true}
{"type":"cell","id":"50cf8c","pos":91,"input":"## Exercícios\n\n1. Quando foi criado o primeiro arquivo?\n2. Quantos arquivos podem ser apenas editadados pelo proprietário? ","cell_type":"markdown"}
{"type":"cell","id":"b40412","pos":71,"input":"filedict=[{'perm': list[0],  'group': list[1], 'user': list[2], 'usercode': list[3],\n           'filesize': list[4],\n  'month': list[5], 'day': list[6], 'hour': list[7], 'filename':list[8]} for list in data]\ndf=pd.DataFrame(filedict)\ndf","cell_type":"code","collapsed":true}
{"type":"cell","id":"ee79b7","pos":85,"input":"** - Quantos arquivos  são notebooks? **","cell_type":"markdown"}
{"type":"cell","id":"66805e","pos":68,"input":"!ls -la > teste.txt","cell_type":"code","exec_count":5,"collapsed":true}
{"type":"cell","id":"7307bb","pos":56,"input":"df[['char','num']]","output":{"0":{"data":{"text/html":"<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>char</th>\n      <th>num</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>48</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>49</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>50</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>52</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>5</td>\n      <td>53</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>6</td>\n      <td>54</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7</td>\n      <td>55</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>8</td>\n      <td>56</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>9</td>\n      <td>57</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>:</td>\n      <td>58</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>;</td>\n      <td>59</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>&lt;</td>\n      <td>60</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>=</td>\n      <td>61</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>&gt;</td>\n      <td>62</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>?</td>\n      <td>63</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>@</td>\n      <td>64</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>A</td>\n      <td>65</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>B</td>\n      <td>66</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>C</td>\n      <td>67</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>D</td>\n      <td>68</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>E</td>\n      <td>69</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>F</td>\n      <td>70</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>G</td>\n      <td>71</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>H</td>\n      <td>72</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>I</td>\n      <td>73</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>J</td>\n      <td>74</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>K</td>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>L</td>\n      <td>76</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>M</td>\n      <td>77</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>\\</td>\n      <td>92</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>]</td>\n      <td>93</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>^</td>\n      <td>94</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>_</td>\n      <td>95</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>`</td>\n      <td>96</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>a</td>\n      <td>97</td>\n    </tr>\n    <tr>\n      <th>50</th>\n      <td>b</td>\n      <td>98</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>c</td>\n      <td>99</td>\n    </tr>\n    <tr>\n      <th>52</th>\n      <td>d</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>e</td>\n      <td>101</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>f</td>\n      <td>102</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>g</td>\n      <td>103</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>h</td>\n      <td>104</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>i</td>\n      <td>105</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>j</td>\n      <td>106</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>k</td>\n      <td>107</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>l</td>\n      <td>108</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>m</td>\n      <td>109</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>n</td>\n      <td>110</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>o</td>\n      <td>111</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>p</td>\n      <td>112</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>q</td>\n      <td>113</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>r</td>\n      <td>114</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>s</td>\n      <td>115</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>t</td>\n      <td>116</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>u</td>\n      <td>117</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>v</td>\n      <td>118</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>w</td>\n      <td>119</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>x</td>\n      <td>120</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>y</td>\n      <td>121</td>\n    </tr>\n  </tbody>\n</table>\n<p>74 rows × 2 columns</p>\n</div>"},"output_type":"execute_result","exec_count":72}},"cell_type":"code","exec_count":72}
{"type":"cell","id":"b78eb5","pos":24,"input":"### Exercícios\n\n1. Crie 12 arquivos, chamados de 'arq_mes_estação.txt'. Cada um deles contendo a frase: \"A minha estação predileta é 'estação', especialmente 'mês'\"  repetida um número aleatório de vezes, entre 5 e 20. \n2. Comprima essas arquivos usando o comando gzip. ","cell_type":"markdown"}
{"type":"cell","id":"47de74","pos":78,"input":"len([perm for perm  in df['perm'] if perm[0]==\"-\"])","output":{"0":{"data":{"text/plain":"17"},"output_type":"execute_result","exec_count":98}},"cell_type":"code","exec_count":98}
{"type":"cell","id":"565c6e","pos":21,"input":"!ls","output":{"0":{"name":"stdout","output_type":"stream","text":"2017-04-24-140938.ipynb  matriznum2.csv\t\t    test.append.dat\r\nAula24.04.2017.ipynb\t matriznum.csv\t\t    test.dat\r\ncookbook-data\t\t python.dados.pandas.ipynb  texto.txt\r\n"}},"cell_type":"code","exec_count":42}
{"type":"cell","id":"55b511","pos":59,"input":"`apply` nesse caso aplica uma função em cada elemento da série. ","cell_type":"markdown"}
{"type":"cell","id":"13f817","pos":18,"input":"!more test.dat","output":{"0":{"name":"stdout","output_type":"stream","text":"Ola mundo!\r\nAdeus mundo...\r\nMais uma linha\r\n"}},"cell_type":"code","exec_count":54}
{"type":"cell","id":"364276","pos":58,"input":"df['binario']=df['num'].apply(bin)","cell_type":"code","exec_count":74}
{"type":"cell","id":"119f13","pos":44,"input":"### Operações com `Series`","cell_type":"markdown"}
{"type":"cell","id":"59fe83","pos":69,"input":"file=open('teste.txt','r')\ndata=[]\nfor line in file:\n    data=data+[line.split()]\ndata=data[1:]","cell_type":"code","exec_count":6}
{"type":"cell","id":"4578dd","pos":47,"input":"\n\n**2. DataFrames**\n\n- São generalizações de Séries, onde temos uma lista de séries concatenadas. ","cell_type":"markdown"}
{"type":"cell","id":"a9a581","pos":53,"input":"chr(60)","output":{"0":{"data":{"text/plain":"'<'"},"output_type":"execute_result","exec_count":68}},"cell_type":"code","exec_count":68}
{"type":"cell","id":"fa05c1","pos":6,"input":"- Também é possível manipular arquivos em modo csv. Veja o exemplo abaixo de uma matriz de dados numéricos.","cell_type":"markdown","slide":"subslide"}
{"type":"cell","id":"873e55","pos":83,"input":"filedict=[{'perm': list[0],  'group': list[1], 'user': list[2], 'usercode': list[3],\n           'filesize': int(list[4]),\n  'month': list[5], 'day': list[6], 'hour': list[7], 'filename':list[8]} for list in data]\ndf=pd.DataFrame(filedict)\n\nmaxi,mini=(df['filesize'].max(),df['filesize'].min())","cell_type":"code","exec_count":101,"collapsed":true}
{"type":"cell","id":"9fd651","pos":31,"input":"import pandas as pd","cell_type":"code","exec_count":3}
{"type":"cell","id":"a56c59","pos":50,"input":"## Criando DataFrames","cell_type":"markdown"}
{"type":"cell","id":"2f0418","pos":28,"input":"### Manipulação de dados com \"Pandas\"\n\n- Pandas nos permite carregar o dados muito facilmente, explorar as variáveis, e fazer gráficos com matplotlib.\n- Este pacote fornece estruturas de dados e funções ricas projetadas para tornar o trabalho dados estruturados rápidos, fáceis e expressivos. E, como você verá, um dos ingredientes críticos permitindo que o Python seja um ambiente de análise de dados poderoso e produtivo.","cell_type":"markdown","slide":"subslide"}
{"type":"cell","id":"ce0ba3","pos":7,"input":"%%writefile matriznum2.csv\n18576 182383 18383 18383\n18383 183838 18338 19933\n17273 173773 18283 18283","cell_type":"code"}
{"type":"cell","id":"bd4d6f","pos":4,"input":"- A função ***open()*** retorna um objeto da classe file, que permite fazer a leitura e escrita em arquivos das mais diversas formas. Na sua forma padrão, o arquivo é aberto somente para leitura.","cell_type":"markdown","slide":"subslide"}
{"type":"cell","id":"26fb83","pos":39,"input":"obj2","output":{"0":{"data":{"text/plain":"d    4\nb    7\na   -5\nc    3\ndtype: int64"},"output_type":"execute_result","exec_count":64}},"cell_type":"code","exec_count":64}
{"type":"cell","id":"64c178","pos":77,"input":"df['perm'] ","output":{"0":{"data":{"text/plain":"0     drwxr-x---\n1     drwx------\n2     -rw-r-----\n3     -rw-r-----\n4     -rw-r-----\n5     -rw-r-----\n6     -rw-r-----\n7     -rw-r-----\n8     -rw-r-----\n9     -rw-r-----\n10    -rw-r-----\n11    -rw-r-----\n12    -rw-r-----\n13    -rw-r-----\n14    -rw-r-----\n15    -rw-r-----\n16    -rw-r-----\n17    -rw-r-----\n18    -rw-r-----\n19    -rw-r-----\n20    -rw-r-----\n21    drwxr-x---\n22    -rw-r-----\n23    -rw-r-----\n24    drwxr-x---\n25    -rw-r-----\n26    -rw-r-----\n27    -rw-r-----\n28    -rw-r-----\n29    -rw-r-----\n30    -rw-r-----\n31    -rw-r-----\n32    -rw-r-----\nName: perm, dtype: object"},"output_type":"execute_result","exec_count":12}},"cell_type":"code","exec_count":12}
{"type":"cell","id":"86c51f","pos":38,"input":"obj2 = pd.Series([4, 7, -5, 3], index=['d', 'b', 'a', 'c'])","cell_type":"code","exec_count":63}
{"type":"cell","id":"193d5d","pos":32,"input":"obj = pd.Series([4, 7, -5, 3])","cell_type":"code","exec_count":60}
{"type":"cell","id":"786f2e","pos":0,"input":"#  Manipulação de Arquivos e dados em Python","cell_type":"markdown","slide":"slide"}
{"type":"cell","id":"2baf06","pos":76,"input":"** - Quantos não são diretórios?**","cell_type":"markdown"}
{"type":"file","last_load":1494614168177}
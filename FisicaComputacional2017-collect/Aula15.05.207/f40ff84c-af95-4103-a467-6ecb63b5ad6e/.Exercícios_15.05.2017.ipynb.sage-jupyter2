{"type":"settings","kernel":"python2","backend_state":"running","trust":true,"kernel_state":"idle"}
{"type":"file","last_load":1494868289813}
{"type":"cell","id":"445f35","pos":0,"input":"Encontre índices de elementos não nulos de [1,2,0,0,4,0]\nExtrair a parte inteira de uma matriz aleatória\nConsidere uma matriz aleatória de 10×2 que represente coordenadas cartesianas, converta-as em coordenadas polares\nConsidere um vetor aleatório com forma (100,2) representando coordenadas, encontre as distâncias entre todos os pontos\nConsidere o vetor [1, 2, 3, 4, 5], como construir um novo vetor com 3 zeros consecutivos intercalados entre cada valor?","cell_type":"markdown"}
{"output":{"0":{"text":"0\n1\n4\n","name":"stdout"}},"exec_count":1,"start":1494868998861,"input":"a = [1,2,0,0,4,0]\n\nfor i in range(len(a)):\n    if a[i] !=0:\n        print (i)","state":"done","pos":1,"type":"cell","end":1494868998870,"id":"16f9d0","kernel":"python2"}
{"output":{"0":{"text":"[[7 8 7 4 1 5 8 0 8 6]\n [1 3 1 7 4 3 9 4 6 2]\n [5 2 7 5 4 5 7 0 3 2]\n [2 5 0 0 9 8 9 0 9 9]\n [2 3 3 2 7 5 9 2 8 9]]\n","name":"stdout"}},"exec_count":12,"start":1494869851058,"input":"import numpy as np\n\nrandmat = np.random.rand(5,10)*10\ninteiromat = np.int_(randmat)\n\nprint(inteiromat)","state":"done","pos":2,"type":"cell","end":1494869851075,"id":"2e6641","kernel":"python2"}
{"exec_count":11,"input":"##Considere uma matriz aleatória de 10×2 que represente coordenadas cartesianas, converta-as em coordenadas polares\nimport numpy as np\n\nrandmat = np.random.rand(10,2)\n","state":"done","pos":3,"type":"cell","id":"a15513","kernel":"python2"}
{"output":{"0":{"text":"Matriz Origem:\n[[8 5]\n [8 2]\n [4 8]\n [0 5]\n [2 4]\n [7 1]\n [9 5]\n [1 7]\n [8 0]\n [5 5]]\nDistâncias:[3.0, 5.0, 8.0, 6.0827625302982193, 4.1231056256176606, 1.0, 7.2801098892805181, 5.0, 3.0, 0.0, 7.2111025509279782, 8.5440037453175304, 6.324555320336759, 1.4142135623730951, 3.1622776601683795, 8.6023252670426267, 2.0, 4.2426406871192848, 7.2111025509279782, 0.0, 5.0, 4.4721359549995796, 7.6157731058639087, 5.8309518948453007, 3.1622776601683795, 8.9442719099991592, 3.1622776601683795, 8.5440037453175304, 5.0, 0.0, 2.2360679774997898, 8.0622577482985491, 9.0, 2.2360679774997898, 9.4339811320566032, 5.0, 6.324555320336759, 4.4721359549995796, 2.2360679774997898, 0.0, 5.8309518948453007, 7.0710678118654755, 3.1622776601683795, 7.2111025509279782, 3.1622776601683795, 1.4142135623730951, 7.6157731058639087, 8.0622577482985491, 5.8309518948453007, 0.0, 4.4721359549995796, 8.4852813742385695, 1.4142135623730951, 4.4721359549995796, 3.1622776601683795, 5.8309518948453007, 9.0, 7.0710678118654755, 4.4721359549995796, 0.0, 8.2462112512353212, 5.0990195135927845, 4.0, 8.6023252670426267, 3.1622776601683795, 2.2360679774997898, 3.1622776601683795, 8.4852813742385695, 8.2462112512353212, 0.0, 9.8994949366116654, 4.4721359549995796, 2.0, 8.9442719099991592, 9.4339811320566032, 7.2111025509279782, 1.4142135623730951, 5.0990195135927845, 9.8994949366116654, 0.0, 5.8309518948453007, 4.2426406871192848, 3.1622776601683795, 5.0, 3.1622776601683795, 4.4721359549995796, 4.0, 4.4721359549995796, 5.8309518948453007, 0.0]\n","name":"stdout"}},"exec_count":21,"start":1494874748556,"input":"##Considere um vetor aleatório com forma (100,2) representando coordenadas, encontre as distâncias entre todos os pontos\nimport numpy as np\nfrom numpy import linalg as LA\n\nrvetor = np.int_(np.random.rand(10,2)*10)\n\nvdist = []\n\nfor i in range(len(rvetor)):\n    for j in range(1,len(rvetor)):\n        vdist.append(LA.norm(rvetor[i]-rvetor[j]))\n\nprint('Matriz Origem:\\n{}\\nDistâncias:{}'.format(rvetor, vdist))","state":"done","pos":4,"type":"cell","end":1494874748564,"id":"1334c3","kernel":"python2"}
{"output":{"0":{"text":"[0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0]\n","name":"stdout"}},"exec_count":20,"start":1494874652136,"input":"#Considere o vetor [1, 2, 3, 4, 5], como construir um novo vetor com 3 zeros consecutivos intercalados entre cada valor?\nv1=[0,1,2,3,4,5]\nv2=[]\nfor i in range(len(v1)):\n    v2.append(v1[i])\n    for i in range(0,3):\n        v2.append(0)\nprint(v2)","state":"done","pos":5,"type":"cell","end":1494874652147,"id":"9587a8","kernel":"python2"}
{"type":"cell","id":"f22a2b","pos":6,"input":""}
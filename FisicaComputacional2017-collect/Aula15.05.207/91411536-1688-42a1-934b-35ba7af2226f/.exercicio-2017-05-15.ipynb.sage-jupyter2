{"type":"settings","kernel":"python2","backend_state":"running","trust":true,"kernel_state":"idle"}
{"type":"file","last_load":1494873154476}
{"output":{"0":{"text":"0\n1\n4\n","name":"stdout"}},"exec_count":1,"start":1494873157943,"input":"import numpy as np\nmatrix=[1,2,0,0,4,0]\nfor i in range(len(matrix)):\n    if(matrix[i]!= 0):\n        print(i)","state":"done","pos":0,"type":"cell","end":1494873158044,"id":"aee4cf","kernel":"python2"}
{"output":{"0":{"text":"[[ 0.93741791  0.23779637  0.56702701  0.38713326]\n [ 0.89288971  0.65467821  0.50724716  0.5692221 ]\n [ 0.73821447  0.51975418  0.4555725   0.22697461]]\n[array([ 0.,  0.,  0.,  0.]), array([ 0.,  0.,  0.,  0.]), array([ 0.,  0.,  0.,  0.])]\n","name":"stdout"}},"exec_count":3,"start":1494873188637,"input":"import numpy as np\nmatrix=np.random.rand(3,4)\nintmatrix=[]\nfor i in range(len(matrix)):\n    aux=matrix[i]//1\n    intmatrix.append(aux)\nprint(matrix)\nprint(intmatrix)","state":"done","pos":1,"type":"cell","end":1494873188644,"id":"b96165","kernel":"python2"}
{"output":{"0":{"text":"[[ 0.84839345  0.33715476]\n [ 0.74851692  0.96357906]\n [ 0.12004683  0.25161468]\n [ 0.06915989  0.65321571]\n [ 0.77967223  0.3490327 ]\n [ 0.83934097  0.89488585]\n [ 0.75422194  0.88192061]\n [ 0.93525706  0.46481709]\n [ 0.5786651   0.72014717]\n [ 0.08557974  0.54714132]]\n[(0.91293197111887181, 0.3782662541895021), (1.2201484283507242, 0.91035704607396617), (0.27878520282173569, 1.1256312157505859), (0.65686669962579924, 1.4653132591386182), (0.85423217917902117, 0.42091121739536902), (1.2269123674760996, 0.81741583249691885), (1.1604459030091701, 0.86328888457267505), (1.0443948956802196, 0.4612398674185143), (0.92383183133920244, 0.89390222300482858), (0.55379374635194922, 1.4156409623995347)]\n","name":"stdout"}},"exec_count":5,"start":1494874735047,"input":"import numpy as np\ndef cart2pol(x, y):\n    rho = np.sqrt(x**2 + y**2)\n    phi = np.arctan2(y, x)\n    return(rho, phi)\nmatrix=np.random.rand(10,2)\nmatrix2pol=[]\nfor i in range(0,10):\n    matrix2pol.append(cart2pol(matrix[i][0],matrix[i][1]))\nprint(matrix)        \nprint(matrix2pol)","state":"done","pos":2,"type":"cell","end":1494874735062,"id":"bcd89e","kernel":"python2"}
{"output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (<ipython-input-6-900830d1dff1>, line 8)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-6-900830d1dff1>\"\u001b[0;36m, line \u001b[0;32m8\u001b[0m\n\u001b[0;31m    Fim da conversa no bate-papo\u001b[0m\n\u001b[0m         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"exec_count":6,"start":1494874737739,"input":"vetor=[0,1,2,3,4,5]\nvetor2=[]\nfor i in range(len(vetor)):\n    vetor2.append(vetor[i])\n    for i in range(0,3):\n        vetor2.append(0)\nprint(vetor2)\nFim da conversa no bate-papo\n","state":"done","pos":3,"type":"cell","end":1494874737752,"id":"fb3001","kernel":"python2"}
{"output":{"0":{"text":"[[ 0.02004121  0.07064118]\n [ 0.85646195  0.43729255]\n [ 0.46220693  0.33378958]\n [ 0.05239362  0.65273666]\n [ 0.61491373  0.90888646]\n [ 0.19650398  0.29670425]\n [ 0.87076588  0.61755097]\n [ 0.08865303  0.82984102]\n [ 0.29670872  0.96953565]\n [ 0.91613643  0.76589406]]\n[(0.073429057983343662, 1.2943559680797638), (0.96164018544869467, 0.47207593337798015), (0.5701322049302876, 0.62544729656083453), (0.65483603894975029, 1.4907004290271746), (1.097357506278043, 0.97597760995266236), (0.35587529676262675, 0.98583049254571875), (1.0675216271798138, 0.61687671828697688), (0.83456304861179409, 1.4643686435673122), (1.0139208207977768, 1.2738150195331324), (1.1941104115170604, 0.69631255603963504)]\n","name":"stdout"}},"exec_count":7,"start":1494874751242,"input":"import numpy as np\ndef cart2pol(x, y):\n    rho = np.sqrt(x**2 + y**2)\n    phi = np.arctan2(y, x)\n    return(rho, phi)\nmatrix=np.random.rand(10,2)\nmatrix2pol=[]\nfor i in range(0,10):\n    matrix2pol.append(cart2pol(matrix[i][0],matrix[i][1]))\nprint(matrix)        \nprint(matrix2pol)","state":"done","pos":4,"type":"cell","end":1494874751273,"id":"0cb5c7","kernel":"python2"}
{"output":{"0":{"text":"[0.18469123220398809, 0.70739433140668184, 0.58514385545692327, 0.21172683063619951, 0.60980295531255291, 0.48731298837536163, 0.22476900685891735, 0.35070294516647543, 0.2781498774250083, 0.50665604105004813, 0.93751570561661013, 0.13728761453700122, 0.2682176159052736, 0.89878291622776574, 0.45684683104361429, 0.33208562072353054, 0.90328980310954599, 0.59444250980283808, 0.52606078921969124, 0.92761724126945633, 0.57500952478092315, 0.28815971280537217, 0.19658515049834535, 0.54525550209401463, 0.35477444328847652, 0.10407944401304749, 0.55163729820262053, 0.29799492298674096, 0.16276511326896084, 0.65075724749554098, 0.19515732746527323, 0.98113300190508446, 0.85538031390768288, 0.27763055230375078, 0.85092363789883341, 0.75977807105936246, 0.28623844563395107, 0.58245212583035133, 0.55166479607688701, 0.58647629746039331, 0.31285794152329127, 0.55554868406871671, 0.43737025809915675, 0.30467967816356184, 0.49135721073871097, 0.33760006714953245, 0.31462757570795169, 0.26149673129350787, 0.12955112389038248, 0.52347732685991677, 0.53372166452638592, 0.3284736008780561, 0.22860934457045823, 0.50585067576437326, 0.36574183642956298, 0.12969121952998164, 0.5125970183660904, 0.27522066408887808, 0.12283582871003101, 0.62493595950743475, 0.20650295043467845, 0.99600286908049807, 0.87012716903032061, 0.28838981610032005, 0.86458494106909456, 0.77461301902192814, 0.29660903252709847, 0.59608395604361841, 0.56655115230443032, 0.59416019333904124, 0.63985826433994142, 0.22674142273808379, 0.15682367814075421, 0.60767896293700663, 0.34748320070261135, 0.093302048700574625, 0.6135764387483279, 0.34122850488155954, 0.22704241771488462, 0.6944081893719235, 0.37947004063398432, 0.48482702727305899, 0.36981905772776019, 0.36271417046748511, 0.44338287007430655, 0.26902624094700955, 0.37140484639231952, 0.24299944818181843, 0.068223899730677884, 0.54625374122944814, 0.67016651085850798, 0.19923052938583594, 0.14511826034519884, 0.63702847380986882, 0.3483823753469833, 0.10356175699060351, 0.64272993359134911, 0.36375709703747061, 0.25734968410990078, 0.71593422099098158]\n","name":"stdout"}},"exec_count":8,"start":1494874818847,"input":"#exercicio4\nimport numpy as np\n\nmatrix=np.random.rand(10,2)\nmatrixD=[]\nfor i in range(len(matrix)):\n    for j in range(len(matrix)):\n        matrixD.append(np.sqrt(((matrix[i][0]-matrix[j][0])**2)+((matrix[i][0]-matrix[j][1])**2)))\nprint matrixD","state":"done","pos":5,"type":"cell","end":1494874818858,"id":"6cb375","kernel":"python2"}
{"output":{"0":{"text":"[0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0]\n","name":"stdout"}},"exec_count":9,"start":1494874836596,"input":"#EXERCICIO 5\nvetor=[0,1,2,3,4,5]\nvetor2=[]\nfor i in range(len(vetor)):\n    vetor2.append(vetor[i])\n    for i in range(0,3):\n        vetor2.append(0)\nprint(vetor2)","state":"done","pos":6,"type":"cell","end":1494874836639,"id":"02d4ba","kernel":"python2"}
{"type":"cell","id":"8b588b","pos":7,"input":""}
{"type":"settings","kernel":"python2","backend_state":"ready","trust":true,"kernel_state":"idle"}
{"type":"file","last_load":1494867992690}
{"exec_count":1,"input":"## Exercício 01.1 - Encontre índices de elementos não nulos de [1,2,0,0,4,0]\n\n","state":"done","pos":0,"cell_type":"markdown","type":"cell","id":"d8cafd","kernel":"python2"}
{"output":{"0":{"text":"Número: 1 Índice: \t0\nNúmero: 2 Índice: \t1\nNúmero: 4 Índice: \t4\n","name":"stdout"}},"exec_count":10,"start":1494869128219,"input":"import numpy as np\n\na= [1,2,0,0,4,0]\nmatriz = np.array(a)\n\nfor i in range(len(matriz)):\n    if matriz[i] != 0:\n        print('Número: {} Índice: \\t{}'.format(matriz[i], i))\n        \n        \n        ","state":"done","pos":1,"type":"cell","end":1494869128225,"id":"d9f321","kernel":"python2"}
{"type":"cell","id":"b21c92","pos":2,"input":"## Exercício 01.2 - Extrair a parte inteira de uma matriz aleatória\n","cell_type":"markdown"}
{"output":{"0":{"text":"Matriz aleatória:\n[[ 6.41519757  4.02826433  4.99168663  3.15267294]\n [ 4.45452663  8.49032824  8.19212893  3.45841599]\n [ 7.70926957  3.64995969  0.7047639   4.78078647]]\n\n Matriz inteira:\n[[6 4 4 3]\n [4 8 8 3]\n [7 3 0 4]]\n","name":"stdout"}},"exec_count":23,"input":"import numpy as np\n\nrmatriz = np.random.rand(3,4)*10\nimatriz = np.int_(rmatriz)\nprint('Matriz aleatória:\\n{}\\n\\n Matriz inteira:\\n{}'.format(rmatriz, imatriz))\n\n","state":"done","pos":3,"type":"cell","id":"847626","kernel":"python2"}
{"type":"cell","id":"e0d089","pos":4,"input":"## Exercício 01.3 - Considere uma matriz aleatória de 10×2 que represente coordenadas cartesianas, converta-as em coordenadas polares","cell_type":"markdown"}
{"output":{"0":{"text":"(2.0, 5.0)\n(3.999999999999999, 6.999999999999999)\n(9.0, 3.9999999999999996)\n(9.0, 3.0)\n(3.0, 0.0)\n(1.0000000000000002, 2.0)\n(7.0, 0.0)\n(9.0, 8.999999999999998)\n(9.0, 3.9999999999999996)\n(6.0, 3.999999999999999)\n","name":"stdout"}},"exec_count":44,"start":1494873719318,"input":"import numpy as np\nfrom numpy import linalg as LA\nimport math as m\n\nrmatriz = np.int_(np.random.rand(10,2)*10)\n\nx = list(rmatriz[:,0])\ny = list(rmatriz[:,1])\n\nfor i in range(len(x)):\n    ro = m.sqrt(m.pow(x[i],2)+m.pow(y[i],2))\n    teta = m.atan2(y[i],x[i])\n    rx = ro*m.cos(teta)\n    ry = ro*m.sin(teta)\n    print(rx, ry)\n","state":"done","pos":5,"type":"cell","end":1494873719338,"id":"6fe5ca","kernel":"python2"}
{"exec_count":35,"input":"## Considere um vetor aleatório com forma (100,2) representando coordenadas, encontre as distâncias entre todos os pontos\n","state":"done","pos":6,"cell_type":"markdown","type":"cell","id":"ce35b4","kernel":"python2"}
{"output":{"0":{"text":"Matriz Origem:\n[[4 1]\n [9 6]\n [5 3]\n [9 6]\n [4 8]\n [3 6]\n [9 6]\n [8 1]\n [7 0]\n [4 8]]\nDistâncias:[7.0710678118654755, 2.2360679774997898, 7.0710678118654755, 7.0, 5.0990195135927845, 7.0710678118654755, 4.0, 3.1622776601683795, 7.0, 0.0, 5.0, 0.0, 5.3851648071345037, 6.0, 0.0, 5.0990195135927845, 6.324555320336759, 5.3851648071345037, 5.0, 0.0, 5.0, 5.0990195135927845, 3.6055512754639891, 5.0, 3.6055512754639891, 3.6055512754639891, 5.0990195135927845, 0.0, 5.0, 0.0, 5.3851648071345037, 6.0, 0.0, 5.0990195135927845, 6.324555320336759, 5.3851648071345037, 5.3851648071345037, 5.0990195135927845, 5.3851648071345037, 0.0, 2.2360679774997898, 5.3851648071345037, 8.0622577482985491, 8.5440037453175304, 0.0, 6.0, 3.6055512754639891, 6.0, 2.2360679774997898, 0.0, 6.0, 7.0710678118654755, 7.2111025509279782, 2.2360679774997898, 0.0, 5.0, 0.0, 5.3851648071345037, 6.0, 0.0, 5.0990195135927845, 6.324555320336759, 5.3851648071345037, 5.0990195135927845, 3.6055512754639891, 5.0990195135927845, 8.0622577482985491, 7.0710678118654755, 5.0990195135927845, 0.0, 1.4142135623730951, 8.0622577482985491, 6.324555320336759, 3.6055512754639891, 6.324555320336759, 8.5440037453175304, 7.2111025509279782, 6.324555320336759, 1.4142135623730951, 0.0, 8.5440037453175304, 5.3851648071345037, 5.0990195135927845, 5.3851648071345037, 0.0, 2.2360679774997898, 5.3851648071345037, 8.0622577482985491, 8.5440037453175304, 0.0]\n","name":"stdout"}},"exec_count":55,"input":"import numpy as np\nfrom numpy import linalg as LA\n\nrvetor = np.int_(np.random.rand(10,2)*10)\n\nvdist = []\n\nfor i in range(len(rvetor)):\n    for j in range(1,len(rvetor)):\n        vdist.append(LA.norm(rvetor[i]-rvetor[j]))\n\nprint('Matriz Origem:\\n{}\\nDistâncias:{}'.format(rvetor, vdist))","state":"done","pos":7,"type":"cell","id":"85918c","kernel":"python2"}
{"type":"cell","id":"29d82b","pos":8,"input":"## Considere o vetor [1, 2, 3, 4, 5], como construir um novo vetor com 3 zeros consecutivos intercalados entre cada valor?\n","cell_type":"markdown"}
{"output":{"0":{"text":"[1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0]\n","name":"stdout"}},"exec_count":56,"start":1494874636921,"input":"import numpy as np\n\nvin = [1,2,3,4,5]\nvout=[]\nfor i in range(len(vin)):\n    vout.append(vin[i])\n    for i in range(0,3):\n        vout.append(0)\nprint(vout)\n","state":"done","pos":9,"type":"cell","end":1494874636947,"id":"d411c4","kernel":"python2"}
{"kernelspec":{"display_name":"Python 2 (SageMath)","language":"python","name":"python2"},"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.13"}}
{"cell_type":"markdown","metadata":{"collapsed":true,"trusted":true},"source":"## Exercícios para fazer na aula\n- Encontre índices de elementos não nulos de [1,2,0,0,4,0] "}
{"cell_type":"code","execution_count":7,"metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"0\n1\n4\n"}],"source":"a=[1,2,0,0,4,0]\nfor i in range(len(a)):\n    if a[i] != 0:\n        print(i)"}
{"cell_type":"markdown","metadata":{},"source":"- Extrair a parte inteira de uma matriz aleatória"}
{"cell_type":"code","execution_count":3,"metadata":{"trusted":true},"outputs":[{"data":{"text/plain":"array([[8, 1, 9, 9],\n       [0, 6, 1, 8],\n       [8, 4, 2, 3],\n       [7, 5, 1, 9]])"},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":"import numpy as np\nmatriz=np.random.rand(4,4)*10\nmatriz.astype(int)//1"}
{"cell_type":"markdown","metadata":{},"source":"- Considere uma matriz aleatória de 10$\\times$2 que represente coordenadas cartesianas, converta-as em coordenadas polares"}
{"cell_type":"code","execution_count":8,"metadata":{"trusted":true},"outputs":[{"data":{"text/plain":"Matrix([\n[1,     0],\n[0, ro**2]])"},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":"import numpy as np\nfrom sympy import symbols, sin, cos, Matrix, eye, simplify, sqrt, Function, expand, sympify\nmatriz=np.random.rand(10,2)*10\nmatriz.astype(int)//1\nteta = symbols('teta', real=True)\nro = symbols('ro', real=True, negative=False)\n\nx = ro * cos(teta)\ny = ro * sin(teta)\nC = [x, y] \nP = [ro, teta]\nC\nJ = Matrix(C).jacobian(P)\nJ\neye(2)\ng = simplify(J.T * eye(2) * J)\ng"}
{"cell_type":"markdown","metadata":{},"source":"- Considere um vetor aleatório com forma (100,2) representando coordenadas, encontre as  distâncias entre todos os pontos "}
{"cell_type":"code","execution_count":9,"metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[[ 0.07003753  0.40686826]\n [ 0.34927624  0.9978084 ]\n [ 0.82769702  0.66662592]\n [ 0.5809461   0.62687028]\n [ 0.13649998  0.76938801]\n [ 0.20931609  0.93080798]\n [ 0.15135047  0.3321723 ]\n [ 0.81088796  0.95936278]\n [ 0.98528211  0.56755489]\n [ 0.63376832  0.04338962]\n [ 0.19118954  0.33616796]\n [ 0.49540518  0.4851938 ]\n [ 0.73478921  0.72363361]\n [ 0.15270495  0.62714676]\n [ 0.32912578  0.29733416]\n [ 0.57005271  0.06134862]\n [ 0.64768964  0.75858773]\n [ 0.18174343  0.6394324 ]\n [ 0.26755167  0.92099181]\n [ 0.05622045  0.70003061]\n [ 0.06782624  0.59588793]\n [ 0.28003352  0.30504106]\n [ 0.63871737  0.84969284]\n [ 0.6108282   0.92910123]\n [ 0.78931133  0.64601606]\n [ 0.73321237  0.35788325]\n [ 0.73676985  0.91816687]\n [ 0.98536157  0.16787628]\n [ 0.65650568  0.7886239 ]\n [ 0.60430882  0.29349643]\n [ 0.81911252  0.86288468]\n [ 0.94097866  0.36375844]\n [ 0.6359084   0.23485815]\n [ 0.88708025  0.72262255]\n [ 0.76027362  0.95879756]\n [ 0.3952451   0.95256569]\n [ 0.92451473  0.09394586]\n [ 0.00755083  0.55462409]\n [ 0.98543722  0.08901959]\n [ 0.04554213  0.70082536]\n [ 0.48679727  0.90451073]\n [ 0.86308499  0.28241713]\n [ 0.28391259  0.22759222]\n [ 0.51674535  0.42863233]\n [ 0.81650933  0.09403289]\n [ 0.90519745  0.0393895 ]\n [ 0.46789751  0.88072535]\n [ 0.50107552  0.76766462]\n [ 0.95246109  0.86295621]\n [ 0.4192255   0.70500665]\n [ 0.34766546  0.78557513]\n [ 0.25417803  0.91211636]\n [ 0.86032019  0.60851316]\n [ 0.96579335  0.16789688]\n [ 0.15425134  0.67202642]\n [ 0.96341064  0.89412733]\n [ 0.54873165  0.91336778]\n [ 0.53710998  0.21389148]\n [ 0.63891903  0.36576016]\n [ 0.7248674   0.31409362]\n [ 0.40859051  0.45159525]\n [ 0.5749625   0.12973683]\n [ 0.09782976  0.53485452]\n [ 0.07510008  0.97485029]\n [ 0.57152646  0.77666804]\n [ 0.27735496  0.23353164]\n [ 0.0930636   0.21445495]\n [ 0.36587479  0.13683275]\n [ 0.97566367  0.92301882]\n [ 0.93414692  0.11618813]\n [ 0.8106509   0.88997668]\n [ 0.13141339  0.82771957]\n [ 0.41534703  0.67961238]\n [ 0.36973495  0.29835119]\n [ 0.34298922  0.32952595]\n [ 0.21529855  0.54257977]\n [ 0.57156329  0.60750874]\n [ 0.85870292  0.24192566]\n [ 0.05412576  0.94251327]\n [ 0.18183101  0.75078317]\n [ 0.21759054  0.87399157]\n [ 0.59618117  0.21321131]\n [ 0.10451849  0.96422829]\n [ 0.91122636  0.96612347]\n [ 0.21109828  0.03481629]\n [ 0.36340697  0.49643364]\n [ 0.39456923  0.90769956]\n [ 0.76866796  0.77209275]\n [ 0.17838445  0.01714094]\n [ 0.34292839  0.97737923]\n [ 0.62330279  0.59470995]\n [ 0.4995182   0.23239852]\n [ 0.12278831  0.71164806]\n [ 0.01212149  0.66827894]\n [ 0.50588142  0.71777273]\n [ 0.09223606  0.67589059]\n [ 0.12831307  0.08217717]\n [ 0.10126807  0.41918251]\n [ 0.28675147  0.29962227]\n [ 0.73394497  0.02199351]]\n('A dist\\xc3\\xa2ncia entre os vetores \\xc3\\xa9:', 99.9799979995999)\n"}],"source":"import random\nimport math\n\nvetor= np.random.rand(100,2)\nprint(vetor)\n\nx=100\ny=2\n\nd=math.sqrt(x**2-y**2)\n\nprint('A distância entre os vetores é:',d)"}
{"cell_type":"markdown","metadata":{},"source":"- Considere o vetor [1, 2, 3, 4, 5], como construir um novo vetor com 3 zeros consecutivos intercalados entre cada valor?"}
{"cell_type":"code","execution_count":11,"metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0]\n"}],"source":"vetor1=[1,2,3,4,5]\nvetor2=[0]*3\nvetor3=[]\n\nfor i in range(5):\n    vetor3.append(vetor1[i])\n    for i in range(3):\n        vetor3.append(0)\nprint(vetor3)"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":""}

/*
Upload form handler
 */

(function() {
  var async, formidable, fs, misc, mkdirp,
    slice = [].slice;

  fs = require('fs');

  async = require('async');

  mkdirp = require('mkdirp');

  formidable = require('formidable');

  misc = require('smc-util/misc');

  exports.upload_endpoint = function(express, logger) {
    var router;
    if (logger != null) {
      logger.debug("upload_endpoint conf");
    }
    router = express.Router();
    router.get('/.smc/upload', function(req, res) {
      if (logger != null) {
        logger.debug("upload GET");
      }
      return res.send("hello");
    });
    router.post('/.smc/upload', function(req, res) {
      var dbg, form, options;
      dbg = function() {
        var m;
        m = 1 <= arguments.length ? slice.call(arguments, 0) : [];
        return logger != null ? logger.debug.apply(logger, ["upload POST "].concat(slice.call(m))) : void 0;
      };
      dbg();
      options = {
        uploadDir: process.env.HOME + '/' + req.query.dest_dir,
        keepExtensions: true
      };
      form = new formidable.IncomingForm(options);
      return async.series([
        function(cb) {
          return mkdirp(options.uploadDir, cb);
        }, function(cb) {
          return form.parse(req, function(err, fields, files) {
            var dest, ref;
            if (err || (files.file == null) || (files.file.path == null) || (files.file.name == null)) {
              cb(err);
              return;
            }
            dbg("upload of '" + files.file.name + "' to '" + files.file.path + "' worked");
            dest = process.env.HOME + '/' + ((ref = req.query.dest_dir) != null ? ref : '') + '/' + files.file.name;
            dbg("now move '" + files.file.path + "' to '" + dest + "'");
            return fs.rename(files.file.path, dest, function(err) {
              if (err) {
                dbg("error moving -- " + err);
                return cb(err);
              } else {
                return cb();
              }
            });
          });
        }
      ], function(err) {
        if (err) {
          return res.status(500).send("upload failed -- " + err);
        } else {
          return res.send('received upload:\n\n');
        }
      });
    });
    return router;
  };

}).call(this);


/*
secret_token.coffee -- Generate the "secret_token" file if it does not already
exist.  All connections to all local-to-the user services that
CoCalcs starts must be prefixed with this key.

CoCalc: Collaborative web-based SageMath, Jupyter, LaTeX and Terminals.
Copyright 2015, SageMath, Inc., GPL v3.
 */

(function() {
  var async, common, fs, secret_token_length, winston;

  fs = require('fs');

  async = require('async');

  winston = require('winston');

  common = require('./common');

  secret_token_length = 128;

  exports.init_secret_token = function(cb) {
    var the_secret_token;
    winston.debug("initializing secret token");
    the_secret_token = void 0;
    return async.series([
      function(cb) {
        winston.debug("read the secret token file...");
        return fs.readFile(common.secret_token_filename, function(err, data) {
          if (err) {
            winston.debug("create '" + common.secret_token_filename + "'");
            return require('crypto').randomBytes(secret_token_length, function(ex, data) {
              the_secret_token = data.toString('base64');
              return fs.writeFile(common.secret_token_filename, the_secret_token, cb);
            });
          } else {
            the_secret_token = data.toString();
            return cb();
          }
        });
      }, function(cb) {
        return fs.chmod(common.secret_token_filename, 0x180, cb);
      }
    ], function(err) {
      winston.debug("got secret token = " + the_secret_token);
      return cb(err, the_secret_token);
    });
  };

}).call(this);

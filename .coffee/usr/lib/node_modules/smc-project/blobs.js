
/*
Saving blobs to hub

CoCalc: Collaborative web-based SageMath, Jupyter, LaTeX and Terminals.
Copyright 2015, SageMath, Inc., GPL v3.
 */

(function() {
  var _save_blob_callbacks, defaults, message, misc, required, winston;

  misc = require('smc-util/misc');

  message = require('smc-util/message');

  winston = require('winston');

  defaults = misc.defaults, required = misc.required;

  _save_blob_callbacks = {};

  exports.receive_save_blob_message = function(opts) {
    var f, id, sha1;
    opts = defaults(opts, {
      sha1: required,
      cb: required,
      timeout: 30
    });
    winston.debug("receive_save_blob_message: " + opts.sha1);
    sha1 = opts.sha1;
    id = misc.uuid();
    if (_save_blob_callbacks[sha1] == null) {
      _save_blob_callbacks[sha1] = [[opts.cb, id]];
    } else {
      _save_blob_callbacks[sha1].push([opts.cb, id]);
    }
    if (!opts.timeout) {
      return;
    }
    f = function() {
      var i, len, mesg, v, w, x;
      v = _save_blob_callbacks[sha1];
      if (v != null) {
        mesg = message.save_blob({
          sha1: sha1,
          error: "timed out after local hub waited for " + opts.timeout + " seconds"
        });
        w = [];
        for (i = 0, len = v.length; i < len; i++) {
          x = v[i];
          if (x[1] === id) {
            x[0](mesg);
          } else {
            w.push(x);
          }
        }
        if (w.length === 0) {
          return delete _save_blob_callbacks[sha1];
        } else {
          return _save_blob_callbacks[sha1] = w;
        }
      }
    };
    return setTimeout(f, opts.timeout * 1000);
  };

  exports.handle_save_blob_message = function(mesg) {
    var i, len, v, x;
    winston.debug("handle_save_blob_message: " + mesg.sha1);
    v = _save_blob_callbacks[mesg.sha1];
    if (v != null) {
      for (i = 0, len = v.length; i < len; i++) {
        x = v[i];
        x[0](mesg);
      }
      return delete _save_blob_callbacks[mesg.sha1];
    }
  };

}).call(this);

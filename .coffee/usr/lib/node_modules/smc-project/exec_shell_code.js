
/*
CoCalc: Collaborative web-based SageMath, Jupyter, LaTeX and Terminals.
Copyright 2015, SageMath, Inc., GPL v3.

Execute a command line or block of BASH code
 */

(function() {
  var message, misc, misc_node, winston;

  winston = require('winston');

  misc = require('smc-util/misc');

  misc_node = require('smc-util-node/misc_node');

  message = require('smc-util/message');

  exports.exec_shell_code = function(socket, mesg) {
    if (mesg.command === "smc-jupyter") {
      socket.write_mesg("json", message.error({
        id: mesg.id,
        error: "do not run smc-jupyter directly"
      }));
      return;
    }
    return misc_node.execute_code({
      command: mesg.command,
      args: mesg.args,
      path: misc_node.abspath(mesg.path),
      timeout: mesg.timeout,
      err_on_exit: mesg.err_on_exit,
      max_output: mesg.max_output,
      bash: mesg.bash,
      cb: function(err, out) {
        var err_mesg, error;
        if (err) {
          error = "Error executing command '" + mesg.command + "' with args '" + mesg.args + "' -- " + err + ", " + (out != null ? out.stdout : void 0) + ", " + (out != null ? out.stderr : void 0);
          if (error.indexOf("Connection refused") !== -1) {
            error += "-- Email help@sagemath.com if you need full internet access, which is disabled by default.";
          }
          err_mesg = message.error({
            id: mesg.id,
            error: error
          });
          return socket.write_mesg('json', err_mesg);
        } else {
          return socket.write_mesg('json', message.project_exec_output({
            id: mesg.id,
            stdout: out.stdout,
            stderr: out.stderr,
            exit_code: out.exit_code
          }));
        }
      }
    });
  };

}).call(this);
